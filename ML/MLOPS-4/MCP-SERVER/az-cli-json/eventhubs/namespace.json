{
    "command_group": "az eventhubs namespace",
    "description": "Eventhub namespace.",
    "status": "GA",
    "commands": [
        {
            "name": "az eventhubs namespace create",
            "summary": "Creates the EventHubs Namespace.",
            "syntax": "az eventhubs namespace create --name\n                              --resource-group\n                              [--alternate-name]\n                              [--capacity]\n                              [--cluster-arm-id]\n                              [--disable-local-auth {false, true}]\n                              [--enable-auto-inflate {false, true}]\n                              [--enable-kafka {false, true}]\n                              [--encryption-config]\n                              [--geo-data-replication-config]\n                              [--infra-encryption {false, true}]\n                              [--location]\n                              [--max-lag]\n                              [--maximum-throughput-units]\n                              [--mi-system-assigned {false, true}]\n                              [--mi-user-assigned]\n                              [--min-tls {1.0, 1.1, 1.2}]\n                              [--public-network {Disabled, Enabled}]\n                              [--sku {Basic, Premium, Standard}]\n                              [--tags]\n                              [--zone-redundant {false, true}]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--alternate-name",
                "--capacity",
                "--cluster-arm-id",
                "--disable-local-auth",
                "--enable-auto-inflate",
                "--enable-kafka",
                "--encryption-config",
                "--geo-data-replication-config --replica-config",
                "--infra-encryption",
                "--location -l",
                "--max-lag --max-replication-lag-duration-in-seconds",
                "--maximum-throughput-units",
                "--mi-system-assigned",
                "--mi-user-assigned",
                "--min-tls --minimum-tls-version",
                "--public-network --public-network-access",
                "--sku",
                "--tags",
                "--zone-redundant"
            ],
            "examples": [
                "az eventhubs namespace create --resource-group myresourcegroup --name mynamespace --location westus --tags tag1=value1 tag2=value2 --sku Standard --enable-auto-inflate --maximum-throughput-units 20",
                "az eventhubs namespace create --resource-group myresourcegroup --name mynamespace --location westus --sku Premium --mi-user-assigned /subscriptions/{subscriptionId}/resourceGroups/{resourcegroup}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/MSIName --encryption-config key-name=key1 key-vault-uri=https://mykeyvault.vault.azure.net/ user-assigned-identity=/subscriptions/{subscriptionId}}/resourceGroups/{resourcegroup}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/MSIName --encryption-config key-name=key1 key-vault-uri=https://mykeyvault.vault.azure.net/ user-assigned-identity=/subscriptions/{subscriptionId}}/resourceGroups/{resourcegroup}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/MSIName"
            ]
        },
        {
            "name": "az eventhubs namespace delete",
            "summary": "Delete an existing namespace. This operation also removes all associated resources under the namespace.",
            "syntax": "az eventhubs namespace delete [--ids]\n                              [--name]\n                              [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                              [--resource-group]\n                              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --namespace-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az eventhubs namespace delete --resource-group myresourcegroup --name mynamespace"
            ]
        },
        {
            "name": "az eventhubs namespace exists",
            "summary": "Check the give Namespace name availability.",
            "syntax": "az eventhubs namespace exists --name",
            "required_parameters": [
                "--name"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az eventhubs namespace failover",
            "summary": "GeoDR Failover.",
            "syntax": "az eventhubs namespace failover [--force {0, 1, f, false, n, no, t, true, y, yes}]\n                                [--ids]\n                                [--namespace-name]\n                                [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                [--primary-location]\n                                [--resource-group]\n                                [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--force",
                "--ids",
                "--namespace-name",
                "--no-wait",
                "--primary-location",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az eventhubs namespace list",
            "summary": "List all the available Namespaces within a subscription, irrespective of the resource groups.",
            "syntax": "az eventhubs namespace list [--max-items]\n                            [--next-token]\n                            [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--max-items",
                "--next-token",
                "--resource-group -g"
            ],
            "examples": [
                "az eventhubs namespace list --resource-group myresourcegroup",
                "az eventhubs namespace list"
            ]
        },
        {
            "name": "az eventhubs namespace show",
            "summary": "Get the description of the specified namespace.",
            "syntax": "az eventhubs namespace show [--ids]\n                            [--name]\n                            [--resource-group]\n                            [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --namespace-name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az eventhubs namespace show --resource-group myresourcegroup --name mynamespace"
            ]
        },
        {
            "name": "az eventhubs namespace update",
            "summary": "Update a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
            "syntax": "az eventhubs namespace update [--add]\n                              [--alternate-name]\n                              [--capacity]\n                              [--cluster-arm-id]\n                              [--disable-local-auth {0, 1, f, false, n, no, t, true, y, yes}]\n                              [--enable-auto-inflate {0, 1, f, false, n, no, t, true, y, yes}]\n                              [--encryption]\n                              [--endpoint-connections]\n                              [--force-string {0, 1, f, false, n, no, t, true, y, yes}]\n                              [--identity]\n                              [--ids]\n                              [--kafka-enabled {0, 1, f, false, n, no, t, true, y, yes}]\n                              [--locations]\n                              [--max-lag]\n                              [--maximum-throughput-units]\n                              [--minimum-tls-version {1.0, 1.1, 1.2}]\n                              [--name]\n                              [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                              [--public-network-access {Disabled, Enabled, SecuredByPerimeter}]\n                              [--remove]\n                              [--resource-group]\n                              [--set]\n                              [--sku {Basic, Premium, Standard}]\n                              [--subscription]\n                              [--tags]\n                              [--tier {Basic, Premium, Standard}]\n                              [--zone-redundant {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--alternate-name",
                "--capacity",
                "--cluster-arm-id",
                "--disable-local-auth",
                "--enable-auto-inflate",
                "--encryption",
                "--endpoint-connections --private-endpoint-connections",
                "--force-string",
                "--identity",
                "--ids",
                "--kafka-enabled",
                "--locations",
                "--max-lag --max-replication-lag-duration-in-seconds",
                "--maximum-throughput-units",
                "--minimum-tls-version",
                "--name --namespace-name -n",
                "--no-wait",
                "--public-network-access",
                "--remove",
                "--resource-group -g",
                "--set",
                "--sku",
                "--subscription",
                "--tags",
                "--tier",
                "--zone-redundant"
            ],
            "examples": [
                "az eventhubs namespace update --resource-group myresourcegroup --name mynamespace --tags tag=value --enable-auto-inflate True"
            ]
        },
        {
            "name": "az eventhubs namespace wait",
            "summary": "Place the CLI in a waiting state until a condition is met.",
            "syntax": "az eventhubs namespace wait [--created]\n                            [--custom]\n                            [--deleted]\n                            [--exists]\n                            [--ids]\n                            [--interval]\n                            [--name]\n                            [--resource-group]\n                            [--subscription]\n                            [--timeout]\n                            [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--interval",
                "--name --namespace-name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": []
        }
    ]
}