{
    "command_group": "az container",
    "description": "Manage Azure Container Instances.",
    "status": "GA",
    "commands": [
        {
            "name": "az container attach",
            "summary": "Attach local standard output and error streams to a container in a container group. This command provides diagnostic information during container startup. Once the container has started, it streams STDOUT and STDERR to your local console.",
            "syntax": "az container attach [--container-name]\n                    [--ids]\n                    [--name]\n                    [--resource-group]\n                    [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--container-name",
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az container attach --name MyContainerGroup --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az container create",
            "summary": "Create a container group.",
            "syntax": "az container create --resource-group\n                    [--acr-identity]\n                    [--add-capabilities]\n                    [--allow-escalation]\n                    [--assign-identity]\n                    [--azure-file-volume-account-key]\n                    [--azure-file-volume-account-name]\n                    [--azure-file-volume-mount-path]\n                    [--azure-file-volume-share-name]\n                    [--cce-policy]\n                    [--command-line]\n                    [--config-map]\n                    [--container-group-profile-id]\n                    [--container-group-profile-revision]\n                    [--cpu]\n                    [--dns-name-label]\n                    [--drop-capabilities]\n                    [--environment-variables]\n                    [--fail-container-group-create-on-reuse-failure]\n                    [--file]\n                    [--gitrepo-dir]\n                    [--gitrepo-mount-path]\n                    [--gitrepo-revision]\n                    [--gitrepo-url]\n                    [--image]\n                    [--ip-address {Private, Public}]\n                    [--location]\n                    [--log-analytics-workspace]\n                    [--log-analytics-workspace-key]\n                    [--memory]\n                    [--name]\n                    [--no-wait]\n                    [--os-type {Linux, Windows}]\n                    [--ports]\n                    [--priority]\n                    [--privileged]\n                    [--protocol {TCP, UDP}]\n                    [--registry-login-server]\n                    [--registry-password]\n                    [--registry-username]\n                    [--restart-policy {Always, Never, OnFailure}]\n                    [--role]\n                    [--run-as-group]\n                    [--run-as-user]\n                    [--scope]\n                    [--seccomp-profile]\n                    [--secrets]\n                    [--secrets-mount-path]\n                    [--secure-environment-variables]\n                    [--sku]\n                    [--standby-pool-profile-id]\n                    [--subnet]\n                    [--subnet-address-prefix]\n                    [--vnet]\n                    [--vnet-address-prefix]\n                    [--zone]",
            "required_parameters": [
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--acr-identity",
                "--add-capabilities",
                "--allow-escalation",
                "--assign-identity",
                "--azure-file-volume-account-key",
                "--azure-file-volume-account-name",
                "--azure-file-volume-mount-path",
                "--azure-file-volume-share-name",
                "--cce-policy",
                "--command-line",
                "--config-map",
                "--container-group-profile-id",
                "--container-group-profile-revision",
                "--cpu",
                "--dns-name-label",
                "--drop-capabilities",
                "--environment-variables -e",
                "--fail-container-group-create-on-reuse-failure",
                "--file -f",
                "--gitrepo-dir",
                "--gitrepo-mount-path",
                "--gitrepo-revision",
                "--gitrepo-url",
                "--image",
                "--ip-address",
                "--location -l",
                "--log-analytics-workspace",
                "--log-analytics-workspace-key",
                "--memory",
                "--name -n",
                "--no-wait",
                "--os-type",
                "--ports",
                "--priority",
                "--privileged",
                "--protocol",
                "--registry-login-server",
                "--registry-password",
                "--registry-username",
                "--restart-policy",
                "--role",
                "--run-as-group",
                "--run-as-user",
                "--scope",
                "--seccomp-profile",
                "--secrets",
                "--secrets-mount-path",
                "--secure-environment-variables",
                "--sku",
                "--standby-pool-profile-id",
                "--subnet",
                "--subnet-address-prefix",
                "--vnet",
                "--vnet-address-prefix",
                "--zone"
            ],
            "examples": [
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --cpu 1 --memory 1",
                "az container create -g MyResourceGroup --name mywinapp --image winappimage:latest --os-type Windows --cpu 2 --memory 3.5",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --ports 80 443 --dns-name-label contoso",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line \"/bin/sh -c '/path to/myscript.sh'\"",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line \"echo hello\" --restart-policy Never",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --environment-variables key1=value1 key2=value2",
                "az container create -g MyResourceGroup --name myapp --image myAcrRegistry.azurecr.io/myimage:latest --registry-password password",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line \"cat /mnt/azfile/myfile\" --azure-file-volume-share-name myshare --azure-file-volume-account-name mystorageaccount --azure-file-volume-account-key mystoragekey --azure-file-volume-mount-path /mnt/azfile",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line \"cat /mnt/gitrepo\" --gitrepo-url https://github.com/user/myrepo.git --gitrepo-dir ./dir1 --gitrepo-mount-path /mnt/gitrepo",
                "az container create -g MyResourceGroup -f containerGroup.yaml",
                "az container create -g MyResourceGroup --name myapp --log-analytics-workspace myworkspace",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity --scope /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/MyResourceGroup/myRG/providers/Microsoft.Storage/storageAccounts/storage1",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity  /subscriptions/mySubscriptionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID",
                "az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity [system] /subscriptions/mySubscriptionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID"
            ]
        },
        {
            "name": "az container delete",
            "summary": "Delete a container group.",
            "syntax": "az container delete [--ids]\n                    [--name]\n                    [--resource-group]\n                    [--subscription]\n                    [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az container delete --name MyContainerGroup --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az container exec",
            "summary": "Execute a command from within a running container of a container group.",
            "syntax": "az container exec --exec-command\n                  [--container-name]\n                  [--ids]\n                  [--name]\n                  [--resource-group]\n                  [--subscription]",
            "required_parameters": [
                "--exec-command"
            ],
            "optional_parameters": [
                "--container-name",
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az container exec -g MyResourceGroup --name mynginx --container-name nginx --exec-command \"/bin/bash\""
            ]
        },
        {
            "name": "az container export",
            "summary": "Export a container group in yaml format.",
            "syntax": "az container export --file\n                    [--ids]\n                    [--name]\n                    [--resource-group]\n                    [--subscription]",
            "required_parameters": [
                "--file -f"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az container export -g MyResourceGroup --name mynginx -f output.yaml"
            ]
        },
        {
            "name": "az container list",
            "summary": "List container groups.",
            "syntax": "az container list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": []
        },
        {
            "name": "az container logs",
            "summary": "Examine the logs for a container in a container group.",
            "syntax": "az container logs [--container-name]\n                  [--follow]\n                  [--ids]\n                  [--name]\n                  [--resource-group]\n                  [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--container-name",
                "--follow",
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az container logs --name MyContainerGroup --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az container restart",
            "summary": "Restarts all containers in a container group.",
            "syntax": "az container restart --name\n                     --resource-group\n                     [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": []
        },
        {
            "name": "az container show",
            "summary": "Get the details of a container group.",
            "syntax": "az container show [--ids]\n                  [--name]\n                  [--resource-group]\n                  [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az container show --name MyContainerGroup --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az container start",
            "summary": "Starts all containers in a container group.",
            "syntax": "az container start --name\n                   --resource-group\n                   [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": []
        },
        {
            "name": "az container stop",
            "summary": "Stops all containers in a container group.",
            "syntax": "az container stop --name\n                  --resource-group",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": []
        }
    ]
}