{
    "command_group": "az resource-mover move-collection",
    "description": "Manage move-collection.",
    "status": "GA",
    "commands": [
        {
            "name": "az resource-mover move-collection bulk-remove",
            "summary": "Removes the set of move resources included in the request body from move collection. The orchestration is done by service. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
            "syntax": "az resource-mover move-collection bulk-remove [--ids]\n                                              [--input-type {MoveResourceId, MoveResourceSourceId}]\n                                              [--move-collection-name]\n                                              [--move-resources]\n                                              [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                              [--resource-group]\n                                              [--subscription]\n                                              [--validate-only {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--input-type",
                "--move-collection-name --name -n",
                "--move-resources",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--validate-only"
            ],
            "examples": [
                "az resource-mover move-collection bulk-remove --move-resources \"/subscriptions/subID/resourceGroups/myRG/providers/Microsoft.Migrate/MoveCollections/movecollection1/MoveResources/moveresource1\" --validate-only false --name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection commit",
            "summary": "Commits the set of resources included in the request body. The commit operation is triggered on the moveResources in the moveState 'CommitPending' or 'CommitFailed', on a successful completion the moveResource moveState do a transition to Committed. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
            "syntax": "az resource-mover move-collection commit [--ids]\n                                         [--input-type {MoveResourceId, MoveResourceSourceId}]\n                                         [--move-collection-name]\n                                         [--move-resources]\n                                         [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                         [--resource-group]\n                                         [--subscription]\n                                         [--validate-only {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--input-type",
                "--move-collection-name --name -n",
                "--move-resources",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--validate-only"
            ],
            "examples": [
                "az resource-mover move-collection commit --move-resources \"/subscriptions/subID/resourceGroups/myRG/providers/Microsoft.Migrate/MoveCollections/movecollection1/MoveResources/moveresource1\" --validate-only false --name MyMoveCollection --resource-group MyResourceGroup",
                "az resource-mover move-collection commit --move-resources \"/subscriptions/subID/resourceGroups/MyResourceGroup/providers/Microsoft.Migrate/moveCollections/MyZonalMoveCollection/moveResources/MyVMMoveResource\" --validate-only false --name MyZonalMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection create",
            "summary": "Create a move collection.",
            "syntax": "az resource-mover move-collection create --move-collection-name\n                                         --resource-group\n                                         [--identity]\n                                         [--location]\n                                         [--move-region]\n                                         [--move-type {RegionToRegion, RegionToZone}]\n                                         [--source-region]\n                                         [--tags]\n                                         [--target-region]\n                                         [--version]",
            "required_parameters": [
                "--move-collection-name --name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--identity",
                "--location -l",
                "--move-region",
                "--move-type",
                "--source-region",
                "--tags",
                "--target-region",
                "--version"
            ],
            "examples": [
                "az resource-mover move-collection create --identity type=SystemAssigned --location eastus2 --source-region eastus --target-region westus --name MyMoveCollection --resource-group MyResourceGroup",
                "az resource-mover move-collection create --identity type=SystemAssigned --location eastus2 --move-region uksouth --name MyZonalMoveCollection --resource-group MyResourceGroup --move-type RegionToZone"
            ]
        },
        {
            "name": "az resource-mover move-collection delete",
            "summary": "Delete a move collection.",
            "syntax": "az resource-mover move-collection delete [--ids]\n                                         [--move-collection-name]\n                                         [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                         [--resource-group]\n                                         [--subscription]\n                                         [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--move-collection-name --name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az resource-mover move-collection delete --name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection discard",
            "summary": "Discards the set of resources included in the request body. The discard operation is triggered on the moveResources in the moveState 'CommitPending' or 'DiscardFailed', on a successful completion the moveResource moveState do a transition to MovePending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
            "syntax": "az resource-mover move-collection discard [--ids]\n                                          [--input-type {MoveResourceId, MoveResourceSourceId}]\n                                          [--move-collection-name]\n                                          [--move-resources]\n                                          [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                          [--resource-group]\n                                          [--subscription]\n                                          [--validate-only {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--input-type",
                "--move-collection-name --name -n",
                "--move-resources",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--validate-only"
            ],
            "examples": [
                "az resource-mover move-collection discard --move-resources \"/subscriptions/subID/resourceGroups/myRG/providers/Microsoft.Migrate/MoveCollections/movecollection1/MoveResources/moveresource1\" --validate-only false --name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection initiate-move",
            "summary": "Moves the set of resources included in the request body. The move operation is triggered after the moveResources are in the moveState 'MovePending' or 'MoveFailed', on a successful completion the moveResource moveState do a transition to CommitPending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
            "syntax": "az resource-mover move-collection initiate-move [--ids]\n                                                [--input-type {MoveResourceId, MoveResourceSourceId}]\n                                                [--move-collection-name]\n                                                [--move-resources]\n                                                [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                                [--resource-group]\n                                                [--subscription]\n                                                [--validate-only {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--input-type",
                "--move-collection-name --name -n",
                "--move-resources",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--validate-only"
            ],
            "examples": [
                "az resource-mover move-collection initiate-move --move-resources \"/subscriptions/subID/resourceGroups/myRG/providers/Microsoft.Migrate/MoveCollections/movecollection1/MoveResources/moveresource1\" --validate-only false --name MyMoveCollection --resource-group MyResourceGroup",
                "az resource-mover move-collection initiate-move --move-resources \"/subscriptions/subID/resourceGroups/MyResourceGroup/providers/Microsoft.Migrate/moveCollections/MyZonalMoveCollection/moveResources/MyVMMoveResource\" --validate-only false --name MyZonalMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection list",
            "summary": "List all the Move Collections in the subscription.",
            "syntax": "az resource-mover move-collection list [--max-items]\n                                       [--next-token]\n                                       [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--max-items",
                "--next-token",
                "--resource-group -g"
            ],
            "examples": [
                "az resource-mover move-collection list",
                "az resource-mover move-collection list -g MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection list-required-for",
            "summary": "List of the move resources for which an arm resource is required for.",
            "syntax": "az resource-mover move-collection list-required-for --source-id\n                                                    [--ids]\n                                                    [--move-collection-name]\n                                                    [--resource-group]\n                                                    [--subscription]",
            "required_parameters": [
                "--source-id"
            ],
            "optional_parameters": [
                "--ids",
                "--move-collection-name --name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az resource-mover move-collection list-unresolved-dependency",
            "summary": "Lists a list of unresolved dependencies.",
            "syntax": "az resource-mover move-collection list-unresolved-dependency --move-collection-name\n                                                             --resource-group\n                                                             [--dependency-level {Descendant, Direct}]\n                                                             [--filter]\n                                                             [--max-items]\n                                                             [--next-token]\n                                                             [--orderby]",
            "required_parameters": [
                "--move-collection-name --name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--dependency-level",
                "--filter",
                "--max-items",
                "--next-token",
                "--orderby"
            ],
            "examples": [
                "az resource-mover move-collection list-unresolved-dependency --move-collection-name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection prepare",
            "summary": "Initiates prepare for the set of resources included in the request body. The prepare operation is on the moveResources that are in the moveState 'PreparePending' or 'PrepareFailed', on a successful completion the moveResource moveState do a transition to MovePending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
            "syntax": "az resource-mover move-collection prepare [--ids]\n                                          [--input-type {MoveResourceId, MoveResourceSourceId}]\n                                          [--move-collection-name]\n                                          [--move-resources]\n                                          [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                          [--resource-group]\n                                          [--subscription]\n                                          [--validate-only {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--input-type",
                "--move-collection-name --name -n",
                "--move-resources",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--validate-only"
            ],
            "examples": [
                "az resource-mover move-collection prepare --move-resources \"/subscriptions/subID/resourceGroups/myRG/providers/Microsoft.Migrate/MoveCollections/movecollection1/MoveResources/moveresource1\" --validate-only false --name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection resolve-dependency",
            "summary": "Computes, resolves and validate the dependencies of the moveResources in the move collection.",
            "syntax": "az resource-mover move-collection resolve-dependency [--ids]\n                                                     [--move-collection-name]\n                                                     [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                                     [--resource-group]\n                                                     [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--move-collection-name --name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az resource-mover move-collection resolve-dependency --name MyMoveCollection --resource-group MyResourceGroup",
                "az resource-mover move-collection resolve-dependency --name MyZonalMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection show",
            "summary": "Get the move collection.",
            "syntax": "az resource-mover move-collection show [--ids]\n                                       [--move-collection-name]\n                                       [--resource-group]\n                                       [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--move-collection-name --name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az resource-mover move-collection show --name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection update",
            "summary": "Update a move collection.",
            "syntax": "az resource-mover move-collection update [--add]\n                                         [--force-string {0, 1, f, false, n, no, t, true, y, yes}]\n                                         [--identity]\n                                         [--ids]\n                                         [--move-collection-name]\n                                         [--move-region]\n                                         [--move-type {RegionToRegion, RegionToZone}]\n                                         [--remove]\n                                         [--resource-group]\n                                         [--set]\n                                         [--source-region]\n                                         [--subscription]\n                                         [--tags]\n                                         [--target-region]\n                                         [--version]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--force-string",
                "--identity",
                "--ids",
                "--move-collection-name --name -n",
                "--move-region",
                "--move-type",
                "--remove",
                "--resource-group -g",
                "--set",
                "--source-region",
                "--subscription",
                "--tags",
                "--target-region",
                "--version"
            ],
            "examples": [
                "az resource-mover move-collection update --identity type=SystemAssigned --tags key1=value1 --name MyMoveCollection --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az resource-mover move-collection wait",
            "summary": "Place the CLI in a waiting state until a condition is met.",
            "syntax": "az resource-mover move-collection wait [--created]\n                                       [--custom]\n                                       [--deleted]\n                                       [--exists]\n                                       [--ids]\n                                       [--interval]\n                                       [--move-collection-name]\n                                       [--resource-group]\n                                       [--subscription]\n                                       [--timeout]\n                                       [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--interval",
                "--move-collection-name --name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": []
        }
    ]
}