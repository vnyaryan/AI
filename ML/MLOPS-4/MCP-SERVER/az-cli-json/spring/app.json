{
    "command_group": "az spring app",
    "description": "Commands to manage apps in Azure Spring Apps.",
    "status": "GA",
    "commands": [
        {
            "name": "az spring app append-loaded-public-certificate",
            "summary": "Append a new loaded public certificate to an app in the Azure Spring Apps.",
            "syntax": "az spring app append-loaded-public-certificate --certificate-name\n                                               --load-trust-store {false, true}\n                                               --name\n                                               --resource-group\n                                               --service",
            "required_parameters": [
                "--certificate-name",
                "--load-trust-store",
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [],
            "examples": [
                "az spring app append-loaded-public-certificate --name MyApp --service MyCluster --resource-group MyResourceGroup --certificate-name MyCertName --load-trust-store true"
            ]
        },
        {
            "name": "az spring app append-persistent-storage",
            "summary": "Append a new persistent storage to an app in the Azure Spring Apps.",
            "syntax": "az spring app append-persistent-storage --mount-path\n                                        --name\n                                        --persistent-storage-type\n                                        --resource-group\n                                        --service\n                                        --storage-name\n                                        [--enable-sub-path {false, true}]\n                                        [--mount-options]\n                                        [--read-only {false, true}]\n                                        [--share-name]",
            "required_parameters": [
                "--mount-path",
                "--name -n",
                "--persistent-storage-type -t",
                "--resource-group -g",
                "--service -s",
                "--storage-name"
            ],
            "optional_parameters": [
                "--enable-sub-path",
                "--mount-options",
                "--read-only",
                "--share-name"
            ],
            "examples": [
                "az spring app append-persistent-storage --persistent-storage-type AzureFileVolume --share-name MyShareName --mount-path /MyMountPath --storage-name MyStorageName -n MyApp -g MyResourceGroup -s MyService"
            ]
        },
        {
            "name": "az spring app connect",
            "summary": "Connect to the interactive shell of an app instance for troubleshooting'.",
            "syntax": "az spring app connect --name\n                      --resource-group\n                      --service\n                      [--deployment]\n                      [--instance]\n                      [--shell-cmd]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--instance -i",
                "--shell-cmd"
            ],
            "examples": []
        },
        {
            "name": "az spring app create",
            "summary": "Create a new app with a default deployment in the Azure Spring Apps instance.",
            "syntax": "az spring app create --name\n                     --resource-group\n                     --service\n                     [--assign-endpoint {false, true}]\n                     [--assign-public-endpoint {false, true}]\n                     [--backend-protocol {Default, GRPC}]\n                     [--bind-acs]\n                     [--bind-config-server]\n                     [--bind-service-registry]\n                     [--client-auth-certs]\n                     [--cpu]\n                     [--deployment-name]\n                     [--disable-probe {false, true}]\n                     [--disable-tea {false, true}]\n                     [--enable-liveness-probe {false, true}]\n                     [--enable-persistent-storage {false, true}]\n                     [--enable-readiness-probe {false, true}]\n                     [--enable-startup-probe {false, true}]\n                     [--env]\n                     [--grace-period]\n                     [--ingress-read-timeout]\n                     [--ingress-send-timeout]\n                     [--instance-count]\n                     [--jvm-options]\n                     [--liveness-probe-config]\n                     [--loaded-public-certificate-file]\n                     [--max-replicas]\n                     [--memory]\n                     [--min-replicas]\n                     [--persistent-storage]\n                     [--readiness-probe-config]\n                     [--runtime-version {Java_11, Java_17, Java_21, Java_8, NetCore_31}]\n                     [--scale-rule-auth]\n                     [--scale-rule-http-concurrency]\n                     [--scale-rule-metadata]\n                     [--scale-rule-name]\n                     [--scale-rule-type]\n                     [--secrets]\n                     [--session-affinity {Cookie, None}]\n                     [--session-max-age]\n                     [--startup-probe-config]\n                     [--system-assigned {false, true}]\n                     [--user-assigned]\n                     [--workload-profile]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--assign-endpoint",
                "--assign-public-endpoint",
                "--backend-protocol",
                "--bind-acs --bind-application-configuration-service",
                "--bind-config-server --bind-cs",
                "--bind-service-registry --bind-sr",
                "--client-auth-certs",
                "--cpu",
                "--deployment-name",
                "--disable-probe",
                "--disable-tea --disable-test-endpoint-auth",
                "--enable-liveness-probe",
                "--enable-persistent-storage --enable-ps",
                "--enable-readiness-probe",
                "--enable-startup-probe",
                "--env",
                "--grace-period --termination-grace-period-seconds",
                "--ingress-read-timeout",
                "--ingress-send-timeout",
                "--instance-count",
                "--jvm-options",
                "--liveness-probe-config",
                "--loaded-public-certificate-file -f",
                "--max-replicas",
                "--memory",
                "--min-replicas",
                "--persistent-storage",
                "--readiness-probe-config",
                "--runtime-version",
                "--scale-rule-auth --sra",
                "--scale-rule-http-concurrency --scale-rule-tcp-concurrency --srhc --srtc",
                "--scale-rule-metadata --srm",
                "--scale-rule-name --srn",
                "--scale-rule-type --srt",
                "--secrets",
                "--session-affinity",
                "--session-max-age",
                "--startup-probe-config",
                "--system-assigned",
                "--user-assigned",
                "--workload-profile"
            ],
            "examples": [
                "az spring app create -n MyApp -s MyCluster -g MyResourceGroup",
                "az spring app create -n MyApp -s MyCluster -g MyResourceGroup --assign-endpoint true --cpu 2 --memory 3 --instance-count 3",
                "az spring app create -n MyApp -s MyCluster -g MyResourceGroup --bind-service-registry --bind-application-configuration-service --bind-config-server"
            ]
        },
        {
            "name": "az spring app delete",
            "summary": "Delete an app in the Azure Spring Apps.",
            "syntax": "az spring app delete --name\n                     --resource-group\n                     --service",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az spring app deploy",
            "summary": "Deploy source code or pre-built binary to an app and update related configurations.",
            "syntax": "az spring app deploy --name\n                     --resource-group\n                     --service\n                     [--apms]\n                     [--artifact-path]\n                     [--build-certificates]\n                     [--build-cpu]\n                     [--build-env]\n                     [--build-memory]\n                     [--builder]\n                     [--config-file-patterns]\n                     [--container-args]\n                     [--container-command]\n                     [--container-image]\n                     [--container-registry]\n                     [--custom-actuator-path]\n                     [--custom-actuator-port]\n                     [--deployment]\n                     [--disable-app-log]\n                     [--disable-probe {false, true}]\n                     [--disable-validation {false, true}]\n                     [--enable-liveness-probe {false, true}]\n                     [--enable-readiness-probe {false, true}]\n                     [--enable-startup-probe {false, true}]\n                     [--env]\n                     [--grace-period]\n                     [--jvm-options]\n                     [--language-framework]\n                     [--liveness-probe-config]\n                     [--main-entry]\n                     [--no-wait]\n                     [--readiness-probe-config]\n                     [--registry-password]\n                     [--registry-username]\n                     [--runtime-version {Java_11, Java_17, Java_21, Java_8, NetCore_31}]\n                     [--server-version]\n                     [--source-path]\n                     [--startup-probe-config]\n                     [--target-module]\n                     [--version]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--apms",
                "--artifact-path",
                "--build-certificates",
                "--build-cpu",
                "--build-env",
                "--build-memory",
                "--builder",
                "--config-file-patterns",
                "--container-args",
                "--container-command",
                "--container-image",
                "--container-registry",
                "--custom-actuator-path",
                "--custom-actuator-port",
                "--deployment -d",
                "--disable-app-log",
                "--disable-probe",
                "--disable-validation",
                "--enable-liveness-probe",
                "--enable-readiness-probe",
                "--enable-startup-probe",
                "--env",
                "--grace-period --termination-grace-period-seconds",
                "--jvm-options",
                "--language-framework",
                "--liveness-probe-config",
                "--main-entry -m",
                "--no-wait",
                "--readiness-probe-config",
                "--registry-password",
                "--registry-username",
                "--runtime-version",
                "--server-version",
                "--source-path",
                "--startup-probe-config",
                "--target-module",
                "--version"
            ],
            "examples": [
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --source-path",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --artifact-path app.jar --jvm-options=\"-XX:+UseG1GC -XX:+UseStringDeduplication\" --env foo=bar",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --artifact-path app.war --server-version Tomcat_10 --jvm-options=\"-XX:+UseG1GC -XX:+UseStringDeduplication\" --env foo=bar",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup -d green-deployment --source-path",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --container-image contoso/your-app:v1",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --container-image contoso/your-app:v1 --container-registry myacr.azurecr.io --registry-username <username> --registry-password <password>",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --config-file-patterns MyPatterns --artifact-path app.jar",
                "az spring app deploy -n MyApp -s MyCluster -g MyResourceGroup --artifact-path app.jar --build-env BP_JVM_VERSION=11.*"
            ]
        },
        {
            "name": "az spring app disable-remote-debugging",
            "summary": "Disable remote debugging for a deployment.",
            "syntax": "az spring app disable-remote-debugging --name\n                                       --resource-group\n                                       --service\n                                       [--deployment]\n                                       [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--no-wait"
            ],
            "examples": []
        },
        {
            "name": "az spring app enable-remote-debugging",
            "summary": "Enable remote debugging for a deployment.",
            "syntax": "az spring app enable-remote-debugging --name\n                                      --resource-group\n                                      --service\n                                      [--deployment]\n                                      [--no-wait]\n                                      [--port]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--no-wait",
                "--port -p"
            ],
            "examples": []
        },
        {
            "name": "az spring app get-remote-debugging-config",
            "summary": "Get the remote debugging configuration of a deployment.",
            "syntax": "az spring app get-remote-debugging-config --name\n                                          --resource-group\n                                          --service\n                                          [--deployment]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d"
            ],
            "examples": []
        },
        {
            "name": "az spring app list",
            "summary": "List all apps in the Azure Spring Apps.",
            "syntax": "az spring app list --resource-group\n                   --service",
            "required_parameters": [
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [],
            "examples": [
                "az spring app list -s MyCluster -g MyResourceGroup -o json --query '[].{Name:name, PersistentStorage:properties.persistentDisk}'"
            ]
        },
        {
            "name": "az spring app logs",
            "summary": "Show logs of an app instance, logs will be streamed when setting '-f/--follow'.",
            "syntax": "az spring app logs --name\n                   --resource-group\n                   --service\n                   [--deployment]\n                   [--follow]\n                   [--format-json]\n                   [--instance]\n                   [--limit]\n                   [--lines]\n                   [--since]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--follow  -f",
                "--format-json",
                "--instance -i",
                "--limit",
                "--lines",
                "--since"
            ],
            "examples": []
        },
        {
            "name": "az spring app restart",
            "summary": "Restart instances of the app, default to production deployment.",
            "syntax": "az spring app restart --name\n                      --resource-group\n                      --service\n                      [--deployment]\n                      [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--no-wait"
            ],
            "examples": []
        },
        {
            "name": "az spring app scale",
            "summary": "Manually scale an app or its deployments.",
            "syntax": "az spring app scale --name\n                    --resource-group\n                    --service\n                    [--cpu]\n                    [--deployment]\n                    [--instance-count]\n                    [--max-replicas]\n                    [--memory]\n                    [--min-replicas]\n                    [--no-wait]\n                    [--scale-rule-auth]\n                    [--scale-rule-http-concurrency]\n                    [--scale-rule-metadata]\n                    [--scale-rule-name]\n                    [--scale-rule-type]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--cpu",
                "--deployment -d",
                "--instance-count",
                "--max-replicas",
                "--memory",
                "--min-replicas",
                "--no-wait",
                "--scale-rule-auth --sra",
                "--scale-rule-http-concurrency --scale-rule-tcp-concurrency --srhc --srtc",
                "--scale-rule-metadata --srm",
                "--scale-rule-name --srn",
                "--scale-rule-type --srt"
            ],
            "examples": [
                "az spring app scale -n MyApp -s MyCluster -g MyResourceGroup --cpu 3 --memory 8",
                "az spring app scale -n MyApp -s MyCluster -g MyResourceGroup -d green-deployment --instance-count 5"
            ]
        },
        {
            "name": "az spring app set-deployment",
            "summary": "Set production deployment of an app.",
            "syntax": "az spring app set-deployment --deployment\n                             --name\n                             --resource-group\n                             --service\n                             [--no-wait]",
            "required_parameters": [
                "--deployment -d",
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": [
                "az spring app set-deployment -d green-deployment -n MyApp -s MyCluster -g MyResourceGroup"
            ]
        },
        {
            "name": "az spring app show",
            "summary": "Show the details of an app in the Azure Spring Apps.",
            "syntax": "az spring app show --name\n                   --resource-group\n                   --service",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az spring app show-deploy-log",
            "summary": "Show build log of the last deploy, only apply to source code deploy, default to production deployment.",
            "syntax": "az spring app show-deploy-log --name\n                              --resource-group\n                              --service\n                              [--deployment]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d"
            ],
            "examples": []
        },
        {
            "name": "az spring app start",
            "summary": "Start instances of the app, default to production deployment.",
            "syntax": "az spring app start --name\n                    --resource-group\n                    --service\n                    [--deployment]\n                    [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--no-wait"
            ],
            "examples": []
        },
        {
            "name": "az spring app stop",
            "summary": "Stop instances of the app, default to production deployment.",
            "syntax": "az spring app stop --name\n                   --resource-group\n                   --service\n                   [--deployment]\n                   [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--deployment -d",
                "--no-wait"
            ],
            "examples": []
        },
        {
            "name": "az spring app unset-deployment",
            "summary": "Unset production deployment of an app.",
            "syntax": "az spring app unset-deployment --name\n                               --resource-group\n                               --service\n                               [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": [
                "az spring app unset-deployment -n MyApp -s MyCluster -g MyResourceGroup"
            ]
        },
        {
            "name": "az spring app update",
            "summary": "Update configurations of an app.",
            "syntax": "az spring app update --name\n                     --resource-group\n                     --service\n                     [--assign-endpoint {false, true}]\n                     [--assign-public-endpoint {false, true}]\n                     [--backend-protocol {Default, GRPC}]\n                     [--client-auth-certs]\n                     [--config-file-patterns]\n                     [--custom-actuator-path]\n                     [--custom-actuator-port]\n                     [--deployment]\n                     [--disable-probe {false, true}]\n                     [--disable-tea {false, true}]\n                     [--enable-ingress-to-app-tls {false, true}]\n                     [--enable-liveness-probe {false, true}]\n                     [--enable-persistent-storage {false, true}]\n                     [--enable-readiness-probe {false, true}]\n                     [--enable-startup-probe {false, true}]\n                     [--env]\n                     [--grace-period]\n                     [--https-only {false, true}]\n                     [--ingress-read-timeout]\n                     [--ingress-send-timeout]\n                     [--jvm-options]\n                     [--liveness-probe-config]\n                     [--loaded-public-certificate-file]\n                     [--main-entry]\n                     [--no-wait]\n                     [--persistent-storage]\n                     [--readiness-probe-config]\n                     [--runtime-version {Java_11, Java_17, Java_21, Java_8, NetCore_31}]\n                     [--secrets]\n                     [--session-affinity {Cookie, None}]\n                     [--session-max-age]\n                     [--startup-probe-config]\n                     [--workload-profile]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--service -s"
            ],
            "optional_parameters": [
                "--assign-endpoint",
                "--assign-public-endpoint",
                "--backend-protocol",
                "--client-auth-certs",
                "--config-file-patterns",
                "--custom-actuator-path",
                "--custom-actuator-port",
                "--deployment -d",
                "--disable-probe",
                "--disable-tea --disable-test-endpoint-auth",
                "--enable-ingress-to-app-tls",
                "--enable-liveness-probe",
                "--enable-persistent-storage --enable-ps",
                "--enable-readiness-probe",
                "--enable-startup-probe",
                "--env",
                "--grace-period --termination-grace-period-seconds",
                "--https-only",
                "--ingress-read-timeout",
                "--ingress-send-timeout",
                "--jvm-options",
                "--liveness-probe-config",
                "--loaded-public-certificate-file -f",
                "--main-entry -m",
                "--no-wait",
                "--persistent-storage",
                "--readiness-probe-config",
                "--runtime-version",
                "--secrets",
                "--session-affinity",
                "--session-max-age",
                "--startup-probe-config",
                "--workload-profile"
            ],
            "examples": [
                "az spring app update -n MyApp -s MyCluster -g MyResourceGroup --env foo=bar"
            ]
        }
    ]
}