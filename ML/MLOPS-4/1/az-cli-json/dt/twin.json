{
    "command_group": "az dt twin",
    "description": "Manage and configure the digital twins of a Digital Twins instance.",
    "status": "GA",
    "commands": [
        {
            "name": "az dt twin create",
            "summary": "Create a digital twin on an instance.",
            "syntax": "az dt twin create --dt-name\n                  --dtmi\n                  --twin-id\n                  [--if-none-match]\n                  [--properties]\n                  [--resource-group]",
            "required_parameters": [
                "--dt-name --dtn -n",
                "--dtmi --model-id -m",
                "--twin-id -t"
            ],
            "optional_parameters": [
                "--if-none-match",
                "--properties -p",
                "--resource-group -g"
            ],
            "examples": [
                "az dt twin create -n {instance_or_hostname} --dtmi \"dtmi:com:example:Room;1\" --twin-id {twin_id}",
                "az dt twin create -n {instance_or_hostname} --dtmi \"dtmi:com:example:Room;1\" --twin-id {twin_id} --if-none-match",
                "az dt twin create -n {instance_or_hostname} --dtmi \"dtmi:com:example:DeviceInformation;1\" --twin-id {twin_id} --properties '{\"manufacturer\": \"Microsoft\"}'",
                "az dt twin create -n {instance_or_hostname} --dtmi \"dtmi:com:example:TemperatureController;1\" --twin-id {twin_id} --properties '{\n    \"Thermostat\": {\n        \"$metadata\": {},\n    }\n}'",
                "az dt twin create -n {instance_or_hostname} --dtmi \"dtmi:com:example:TemperatureController;1\" --twin-id {twin_id} --properties '{\n    \"Temperature\": 10.2,\n    \"Thermostat\": {\n        \"$metadata\": {},\n        \"setPointTemp\": 23.12\n    }\n}'"
            ]
        },
        {
            "name": "az dt twin delete",
            "summary": "Remove a digital twin. All relationships referencing this twin must already be deleted.",
            "syntax": "az dt twin delete --dt-name\n                  --twin-id\n                  [--etag]\n                  [--resource-group]",
            "required_parameters": [
                "--dt-name --dtn -n",
                "--twin-id -t"
            ],
            "optional_parameters": [
                "--etag -e",
                "--resource-group -g"
            ],
            "examples": [
                "az dt twin delete -n {instance_or_hostname} --twin-id {twin_id}",
                "az dt twin delete -n {instance_or_hostname} --twin-id {twin_id} --etag {etag}"
            ]
        },
        {
            "name": "az dt twin delete-all",
            "summary": "Deletes all digital twins within a Digital Twins instance, including all relationships for those twins.",
            "syntax": "az dt twin delete-all --dt-name\n                      [--resource-group]\n                      [--yes]",
            "required_parameters": [
                "--dt-name --dtn -n"
            ],
            "optional_parameters": [
                "--resource-group -g",
                "--yes -y"
            ],
            "examples": [
                "az dt twin delete-all -n {instance_or_hostname}"
            ]
        },
        {
            "name": "az dt twin query",
            "summary": "Query the digital twins of an instance. Allows traversing relationships and filtering by property values.",
            "syntax": "az dt twin query --dt-name\n                 --query-command\n                 [--cost {false, true}]\n                 [--resource-group]",
            "required_parameters": [
                "--dt-name --dtn -n",
                "--query-command -q"
            ],
            "optional_parameters": [
                "--cost --show-cost",
                "--resource-group -g"
            ],
            "examples": [
                "az dt twin query -n {instance_or_hostname} -q \"select * from digitaltwins\" --show-cost",
                "az dt twin query -n {instance_or_hostname} -q \"select * from digitaltwins T where IS_OF_MODEL(T, 'dtmi:com:example:Room;2')\"",
                "az dt twin query -n {instance_or_hostname} --query-command \"SELECT * FROM DigitalTwins T Where T.\\$dtId = 'room0'\"",
                "az dt twin query -n {instance_or_hostname} --query-command \"SELECT * FROM DigitalTwins T Where T.`$dtId = 'room0'\""
            ]
        },
        {
            "name": "az dt twin show",
            "summary": "Show the details of a digital twin.",
            "syntax": "az dt twin show --dt-name\n                --twin-id\n                [--resource-group]",
            "required_parameters": [
                "--dt-name --dtn -n",
                "--twin-id -t"
            ],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az dt twin show -n {instance_or_hostname} --twin-id {twin_id}"
            ]
        },
        {
            "name": "az dt twin update",
            "summary": "Update an instance digital twin via JSON patch specification.",
            "syntax": "az dt twin update --dt-name\n                  --json-patch\n                  --twin-id\n                  [--etag]\n                  [--resource-group]",
            "required_parameters": [
                "--dt-name --dtn -n",
                "--json-patch --patch",
                "--twin-id -t"
            ],
            "optional_parameters": [
                "--etag -e",
                "--resource-group -g"
            ],
            "examples": [
                "az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --json-patch '{\"op\":\"replace\", \"path\":\"/Temperature\", \"value\": 20.5}'",
                "az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --etag {etag} --json-patch '{\"op\":\"replace\", \"path\":\"/Temperature\", \"value\": 20.5}'",
                "az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --json-patch '[\n  {\"op\":\"replace\", \"path\":\"/Temperature\", \"value\": 20.5},\n  {\"op\":\"add\", \"path\":\"/Areas\", \"value\": [\"ControlSystem\"]}\n]'",
                "az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --json-patch ./my/patch/document.json"
            ]
        }
    ]
}