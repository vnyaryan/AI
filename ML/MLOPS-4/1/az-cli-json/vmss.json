{
    "command_group": "az vmss",
    "description": "Manage groupings of virtual machines in an Azure Virtual Machine Scale Set (VMSS).",
    "status": "GA",
    "commands": [
        {
            "name": "az vmss create",
            "summary": "Create an Azure Virtual Machine Scale Set.",
            "syntax": "az vmss create --name\n               --resource-group\n               [--accelerated-networking {false, true}]\n               [--accept-term]\n               [--additional-events {false, true}]\n               [--admin-password]\n               [--admin-username]\n               [--app-gateway]\n               [--app-gateway-capacity]\n               [--app-gateway-sku]\n               [--app-gateway-subnet-address-prefix]\n               [--asgs]\n               [--assign-identity]\n               [--authentication-type {all, password, ssh}]\n               [--automatic-repairs-action {Reimage, Replace, Restart}]\n               [--automatic-repairs-grace-period]\n               [--backend-pool-name]\n               [--backend-port]\n               [--capacity-reservation-group]\n               [--computer-name-prefix]\n               [--custom-data]\n               [--data-disk-caching]\n               [--data-disk-delete-option {Delete, Detach}]\n               [--data-disk-encryption-sets]\n               [--data-disk-iops]\n               [--data-disk-mbps]\n               [--data-disk-sizes-gb]\n               [--disable-integrity-monitoring-autoupgrade]\n               [--disable-overprovision]\n               [--disk-controller-type {NVMe, SCSI}]\n               [--dns-servers]\n               [--edge-zone]\n               [--enable-agent {false, true}]\n               [--enable-auto-os-upgrade {false, true}]\n               [--enable-auto-update {false, true}]\n               [--enable-cross-zone-upgrade {false, true}]\n               [--enable-hibernation {false, true}]\n               [--enable-integrity-monitoring]\n               [--enable-osimage-notification {false, true}]\n               [--enable-proxy-agent {false, true}]\n               [--enable-reboot {false, true}]\n               [--enable-redeploy {false, true}]\n               [--enable-resilient-creation {false, true}]\n               [--enable-resilient-deletion {false, true}]\n               [--enable-secure-boot {false, true}]\n               [--enable-spot-restore {false, true}]\n               [--enable-vtpm {false, true}]\n               [--encryption-at-host {false, true}]\n               [--encryption-identity]\n               [--ephemeral-os-disk {false, true}]\n               [--ephemeral-os-disk-placement {CacheDisk, NvmeDisk, ResourceDisk}]\n               [--eviction-policy {Deallocate, Delete}]\n               [--exclude-extensions]\n               [--generate-ssh-keys]\n               [--health-probe]\n               [--host-group]\n               [--image]\n               [--instance-count]\n               [--is-overridable {false, true}]\n               [--lb]\n               [--lb-nat-rule-name]\n               [--lb-sku {Basic, Gateway, Standard}]\n               [--license-type {None, RHEL_BASE, RHEL_BASESAPAPPS, RHEL_BASESAPHA, RHEL_BYOS, RHEL_ELS_6, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, SLES, SLES_BYOS, SLES_HPC, SLES_SAP, SLES_STANDARD, UBUNTU, UBUNTU_PRO, Windows_Client, Windows_Server}]\n               [--location]\n               [--max-batch-instance-percent]\n               [--max-price]\n               [--max-surge {false, true}]\n               [--max-unhealthy-instance-percent]\n               [--max-unhealthy-upgraded-instance-percent]\n               [--network-api-version]\n               [--no-wait]\n               [--nsg]\n               [--orchestration-mode {Flexible, Uniform}]\n               [--os-disk-caching {None, ReadOnly, ReadWrite}]\n               [--os-disk-delete-option {Delete, Detach}]\n               [--os-disk-encryption-set]\n               [--os-disk-name]\n               [--os-disk-secure-vm-disk-encryption-set]\n               [--os-disk-security-encryption-type {DiskWithVMGuestState, NonPersistedTPM, VMGuestStateOnly}]\n               [--os-disk-size-gb]\n               [--os-type {linux, windows}]\n               [--patch-mode {AutomaticByOS, AutomaticByPlatform, ImageDefault, Manual}]\n               [--pause-time-between-batches]\n               [--plan-name]\n               [--plan-product]\n               [--plan-promotion-code]\n               [--plan-publisher]\n               [--platform-fault-domain-count]\n               [--ppg]\n               [--prioritize-unhealthy-instances {false, true}]\n               [--priority {Low, Regular, Spot}]\n               [--proxy-agent-mode {Audit, Enforce}]\n               [--public-ip-address]\n               [--public-ip-address-allocation {dynamic, static}]\n               [--public-ip-address-dns-name]\n               [--public-ip-per-vm]\n               [--regular-priority-count]\n               [--regular-priority-percentage]\n               [--role]\n               [--scale-in-policy {Default, NewestVM, OldestVM}]\n               [--scope]\n               [--secrets]\n               [--security-posture-id]\n               [--security-type {ConfidentialVM, Standard, TrustedLaunch}]\n               [--single-placement-group {false, true}]\n               [--sku-allocat-strat {CapacityOptimized, LowestPrice}]\n               [--skuprofile-vmsizes]\n               [--specialized {false, true}]\n               [--spot-restore-timeout]\n               [--ssh-dest-key-path]\n               [--ssh-key-type {Ed25519, RSA}]\n               [--ssh-key-values]\n               [--storage-container-name]\n               [--storage-sku]\n               [--subnet]\n               [--subnet-address-prefix]\n               [--tags]\n               [--terminate-notification-time]\n               [--ultra-ssd-enabled {false, true}]\n               [--upgrade-policy-mode {Automatic, Manual, Rolling}]\n               [--use-unmanaged-disk]\n               [--user-data]\n               [--v-cpus-available]\n               [--v-cpus-per-core]\n               [--validate]\n               [--vm-domain-name]\n               [--vm-sku]\n               [--vnet-address-prefix]\n               [--vnet-name]\n               [--zone-balance {false, true}]\n               [--zones]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--accelerated-networking",
                "--accept-term",
                "--additional-events --additional-scheduled-events --scheduled-event-additional-publishing-target-event-grid-and-resource-graph",
                "--admin-password",
                "--admin-username",
                "--app-gateway",
                "--app-gateway-capacity",
                "--app-gateway-sku",
                "--app-gateway-subnet-address-prefix",
                "--asgs",
                "--assign-identity",
                "--authentication-type",
                "--automatic-repairs-action",
                "--automatic-repairs-grace-period",
                "--backend-pool-name",
                "--backend-port",
                "--capacity-reservation-group --crg",
                "--computer-name-prefix",
                "--custom-data",
                "--data-disk-caching",
                "--data-disk-delete-option",
                "--data-disk-encryption-sets",
                "--data-disk-iops",
                "--data-disk-mbps",
                "--data-disk-sizes-gb",
                "--disable-integrity-monitoring-autoupgrade",
                "--disable-overprovision",
                "--disk-controller-type",
                "--dns-servers",
                "--edge-zone",
                "--enable-agent",
                "--enable-auto-os-upgrade",
                "--enable-auto-update",
                "--enable-cross-zone-upgrade",
                "--enable-hibernation",
                "--enable-integrity-monitoring",
                "--enable-osimage-notification",
                "--enable-proxy-agent",
                "--enable-reboot --enable-user-reboot-scheduled-events",
                "--enable-redeploy --enable-user-redeploy-scheduled-events",
                "--enable-resilient-creation",
                "--enable-resilient-deletion",
                "--enable-secure-boot",
                "--enable-spot-restore",
                "--enable-vtpm",
                "--encryption-at-host",
                "--encryption-identity",
                "--ephemeral-os-disk",
                "--ephemeral-os-disk-placement --ephemeral-placement",
                "--eviction-policy",
                "--exclude-extensions --security-posture-reference-exclude-extensions",
                "--generate-ssh-keys",
                "--health-probe",
                "--host-group",
                "--image",
                "--instance-count",
                "--is-overridable --security-posture-reference-is-overridable",
                "--lb --load-balancer",
                "--lb-nat-rule-name --nat-rule-name",
                "--lb-sku",
                "--license-type",
                "--location -l",
                "--max-batch-instance-percent",
                "--max-price",
                "--max-surge",
                "--max-unhealthy-instance-percent",
                "--max-unhealthy-upgraded-instance-percent",
                "--network-api-version",
                "--no-wait",
                "--nsg",
                "--orchestration-mode",
                "--os-disk-caching",
                "--os-disk-delete-option",
                "--os-disk-encryption-set",
                "--os-disk-name",
                "--os-disk-secure-vm-disk-encryption-set",
                "--os-disk-security-encryption-type",
                "--os-disk-size-gb",
                "--os-type",
                "--patch-mode",
                "--pause-time-between-batches",
                "--plan-name",
                "--plan-product",
                "--plan-promotion-code",
                "--plan-publisher",
                "--platform-fault-domain-count",
                "--ppg",
                "--prioritize-unhealthy-instances",
                "--priority",
                "--proxy-agent-mode",
                "--public-ip-address",
                "--public-ip-address-allocation",
                "--public-ip-address-dns-name",
                "--public-ip-per-vm",
                "--regular-priority-count",
                "--regular-priority-percentage",
                "--role",
                "--scale-in-policy",
                "--scope",
                "--secrets",
                "--security-posture-id --security-posture-reference-id",
                "--security-type",
                "--single-placement-group",
                "--sku-allocat-strat --skuprofile-allocation-strategy",
                "--skuprofile-vmsizes",
                "--specialized",
                "--spot-restore-timeout",
                "--ssh-dest-key-path",
                "--ssh-key-type",
                "--ssh-key-values",
                "--storage-container-name",
                "--storage-sku",
                "--subnet",
                "--subnet-address-prefix",
                "--tags",
                "--terminate-notification-time",
                "--ultra-ssd-enabled",
                "--upgrade-policy-mode",
                "--use-unmanaged-disk",
                "--user-data",
                "--v-cpus-available",
                "--v-cpus-per-core",
                "--validate",
                "--vm-domain-name",
                "--vm-sku",
                "--vnet-address-prefix",
                "--vnet-name",
                "--zone-balance",
                "--zones -z"
            ],
            "examples": [
                "az vmss create -n MyVmss -g MyResourceGroup --instance-count 5 --image Win2016Datacenter --data-disk-sizes-gb 2 --os-disk-size-gb 40",
                "az vmss create -n MyVmss -g MyResourceGroup --public-ip-address-dns-name my-globally-dns-name \\\n    --load-balancer MyLoadBalancer --vnet-name MyVnet --subnet MySubnet --image Ubuntu2204 \\\n    --generate-ssh-keys",
                "az vmss create -n MyVmss -g MyResourceGroup --image MyImage",
                "az vmss create -n MyVmss -g MyResourceGroup --image CentOS85Gen2 \\\n    --public-ip-per-vm --vm-domain-name myvmss --dns-servers 10.0.0.6 10.0.0.5",
                "az vmss create -g MyResourceGroup -n MyVmss --image Debian11 --custom-data MyCloudInitScript.yml",
                "az vmss create -g MyResourceGroup -n MyVmss --image /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Compute/galleries/myGallery/images/myImage/versions/1.0.0",
                "az vmss create -g MyResourceGroup -n MyVmss --image /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Compute/galleries/myGallery/images/myImage/versions/1.0.0 --specialized",
                "az vmss create -g MyResourceGroup -n MyVmss --image /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Compute/galleries/myGallery/images/myImage",
                "az keyvault certificate create --vault-name vaultname -n cert1 \\\n  -p \"$(az keyvault certificate get-default-policy)\"\n\nsecrets=$(az keyvault secret list-versions --vault-name vaultname \\\n  -n cert1 --query \"[?attributes.enabled].id\" -o tsv)\n\nvm_secrets=$(az vm secret format -s \"$secrets\")\n\naz vmss create -g group-name -n vm-name --admin-username deploy  \\\n  --image Debian11 --secrets \"$vm_secrets\"",
                "az vmss create -n MyVmss -g MyResourceGroup --image CentOS85Gen2 --assign-identity --scope /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/MyResourceGroup/myRG/providers/Microsoft.Storage/storageAccounts/storage1 --role Contributor",
                "az vmss create -n MyVmss -g rg1 --image Debian11 --assign-identity  /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID",
                "az vmss create -n MyVm -g rg1 --image Debian11 --assign-identity myID --encryption-identity /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID --orchestration-mode Uniform --lb-sku Standard",
                "az vmss create -n MyVmss -g rg1 --image Debian11 --assign-identity  [system] /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID",
                "az vmss create -n MyVmss -g MyResourceGroup --image CentOS85Gen2 --zones 1",
                "az vmss create -n MyVmss -g MyResourceGroup  --location NorthEurope --instance-count 2 --image CentOS85Gen2 --priority Spot --eviction-policy Deallocate --single-placement-group --enable-spot-restore True --spot-restore-timeout PT1H",
                "az vmss create -n MyVmss -g MyResourceGroup --image /SharedGalleries/{gallery_unique_name}/Images/{image}/Versions/{version}",
                "az vmss create -n MyVmss -g MyResourceGroup --image /CommunityGalleries/{gallery_unique_name}/Images/{image}/Versions/{version}",
                "az vmss create -n MyVmss -g MyResourceGroup --image Win2019Datacenter --enable-agent --enable-auto-update false --patch-mode Manual --orchestration-mode Flexible",
                "az vmss create -n MyVmss -g MyResourceGroup --image /CommunityGalleries/{gallery_unique_name}/Images/{image}/Versions/{version} --security-posture-reference-id /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{version} \\\n    --security-posture-reference-exclude-extensions \"c:\\tmp\\exclude_extensions.json\""
            ]
        },
        {
            "name": "az vmss deallocate",
            "summary": "Deallocate VMs within a VMSS.",
            "syntax": "az vmss deallocate --name\n                   --resource-group\n                   [--hibernate {false, true}]\n                   [--instance-ids]\n                   [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--hibernate",
                "--instance-ids",
                "--no-wait"
            ],
            "examples": [
                "az vmss deallocate --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss delete",
            "summary": "Delete a VM scale set.",
            "syntax": "az vmss delete [--force-deletion {0, 1, f, false, n, no, t, true, y, yes}]\n               [--ids]\n               [--name]\n               [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n               [--resource-group]\n               [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--force-deletion",
                "--ids",
                "--name --vm-scale-set-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az vmss delete-instances",
            "summary": "Delete VMs within a VMSS.",
            "syntax": "az vmss delete-instances --instance-ids\n                         --name\n                         --resource-group\n                         [--no-wait]",
            "required_parameters": [
                "--instance-ids",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": [
                "az vmss delete-instances --instance-ids 0 --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss get-instance-view",
            "summary": "View an instance of a VMSS.",
            "syntax": "az vmss get-instance-view [--ids]\n                          [--instance-id]\n                          [--name]\n                          [--resource-group]\n                          [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--instance-id",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss get-instance-view --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss get-os-upgrade-history",
            "summary": "List the OS upgrades on a VM scale set instance.",
            "syntax": "az vmss get-os-upgrade-history --name\n                               --resource-group\n                               [--max-items]\n                               [--next-token]",
            "required_parameters": [
                "--name --vm-scale-set-name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--max-items",
                "--next-token"
            ],
            "examples": []
        },
        {
            "name": "az vmss list",
            "summary": "List all VM scale sets under a resource group.",
            "syntax": "az vmss list [--max-items]\n             [--next-token]\n             [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--max-items",
                "--next-token",
                "--resource-group -g"
            ],
            "examples": [
                "az vmss list --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss list-instance-connection-info",
            "summary": "Get the IP address and port number used to connect to individual VM instances within a set.",
            "syntax": "az vmss list-instance-connection-info [--ids]\n                                      [--name]\n                                      [--resource-group]\n                                      [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss list-instance-connection-info --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss list-instance-public-ips",
            "summary": "List public IP addresses of VM instances within a set.",
            "syntax": "az vmss list-instance-public-ips [--ids]\n                                 [--name]\n                                 [--resource-group]\n                                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss list-instance-public-ips --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss list-instances",
            "summary": "List all virtual machines in a VM scale sets.",
            "syntax": "az vmss list-instances --name\n                       --resource-group\n                       [--expand]\n                       [--filter]\n                       [--max-items]\n                       [--next-token]\n                       [--select]",
            "required_parameters": [
                "--name --virtual-machine-scale-set-name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--expand",
                "--filter",
                "--max-items",
                "--next-token",
                "--select"
            ],
            "examples": []
        },
        {
            "name": "az vmss list-skus",
            "summary": "List SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.",
            "syntax": "az vmss list-skus --name\n                  --resource-group\n                  [--max-items]\n                  [--next-token]",
            "required_parameters": [
                "--name --vm-scale-set-name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--max-items",
                "--next-token"
            ],
            "examples": []
        },
        {
            "name": "az vmss perform-maintenance",
            "summary": "Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://learn.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications.",
            "syntax": "az vmss perform-maintenance [--ids]\n                            [--instance-ids]\n                            [--name]\n                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                            [--resource-group]\n                            [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--instance-ids",
                "--name --vm-scale-set-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az vmss reimage",
            "summary": "Reimage VMs within a VMSS.",
            "syntax": "az vmss reimage [--force-update-os-disk-for-ephemeral {false, true}]\n                [--ids]\n                [--instance-ids]\n                [--name]\n                [--no-wait]\n                [--resource-group]\n                [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--force-update-os-disk-for-ephemeral --update-os-disk",
                "--ids",
                "--instance-ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss reimage --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup --subscription MySubscription",
                "az vmss reimage --instance-ids 1 2 3 --name MyScaleSet --resource-group MyResourceGroup --subscription MySubscription",
                "az vmss reimage --name MyScaleSet --resource-group MyResourceGroup --subscription MySubscription"
            ]
        },
        {
            "name": "az vmss restart",
            "summary": "Restart VMs within a VMSS.",
            "syntax": "az vmss restart --name\n                --resource-group\n                [--instance-ids]\n                [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--instance-ids",
                "--no-wait"
            ],
            "examples": [
                "az vmss restart --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss scale",
            "summary": "Change the number of VMs within a VMSS.",
            "syntax": "az vmss scale --new-capacity\n              [--ids]\n              [--name]\n              [--no-wait]\n              [--resource-group]\n              [--subscription]",
            "required_parameters": [
                "--new-capacity"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss scale --name MyScaleSet --new-capacity 6 --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss set-orchestration-service-state",
            "summary": "Change ServiceState property for a given service within a VMSS.",
            "syntax": "az vmss set-orchestration-service-state --action {Resume, Suspend}\n                                        --service-name {AutomaticRepairs, DummyOrchestrationServiceName}\n                                        [--ids]\n                                        [--name]\n                                        [--no-wait]\n                                        [--resource-group]\n                                        [--subscription]",
            "required_parameters": [
                "--action",
                "--service-name"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss set-orchestration-service-state --service-name AutomaticRepairs --action Resume --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss show",
            "summary": "Get details on VMs within a VMSS.",
            "syntax": "az vmss show --name\n             --resource-group\n             [--include-user-data]\n             [--instance-id]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--include-user-data -u",
                "--instance-id"
            ],
            "examples": [
                "az vmss show --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss simulate-eviction",
            "summary": "Simulate the eviction of a Spot virtual machine in a VM scale set.",
            "syntax": "az vmss simulate-eviction [--ids]\n                          [--instance-id]\n                          [--name]\n                          [--resource-group]\n                          [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--instance-id",
                "--name --vm-scale-set-name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vmss simulate-eviction --resource-group MyResourceGroup --name MyScaleSet --instance-id 0"
            ]
        },
        {
            "name": "az vmss start",
            "summary": "Start VMs within a VMSS.",
            "syntax": "az vmss start --name\n              --resource-group\n              [--instance-ids]\n              [--no-wait]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--instance-ids",
                "--no-wait"
            ],
            "examples": [
                "az vmss start --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss stop",
            "summary": "Power off (stop) VMs within a VMSS.",
            "syntax": "az vmss stop --name\n             --resource-group\n             [--instance-ids]\n             [--no-wait]\n             [--skip-shutdown]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--instance-ids",
                "--no-wait",
                "--skip-shutdown"
            ],
            "examples": [
                "az vmss stop --name MyScaleSet --resource-group MyResourceGroup --skip-shutdown",
                "az vmss stop --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss update",
            "summary": "Update a VMSS. Run 'az vmss update-instances' command to roll out the changes to VMs if you have not configured upgrade policy.",
            "syntax": "az vmss update [--add]\n               [--additional-events {false, true}]\n               [--automatic-repairs-action {Reimage, Replace, Restart}]\n               [--automatic-repairs-grace-period]\n               [--capacity-reservation-group]\n               [--custom-data]\n               [--disk-controller-type {NVMe, SCSI}]\n               [--enable-auto-os-upgrade {false, true}]\n               [--enable-automatic-repairs {false, true}]\n               [--enable-cross-zone-upgrade {false, true}]\n               [--enable-hibernation {false, true}]\n               [--enable-osimage-notification {false, true}]\n               [--enable-proxy-agent {false, true}]\n               [--enable-reboot {false, true}]\n               [--enable-redeploy {false, true}]\n               [--enable-resilient-creation {false, true}]\n               [--enable-resilient-deletion {false, true}]\n               [--enable-secure-boot {false, true}]\n               [--enable-spot-restore {false, true}]\n               [--enable-terminate-notification {false, true}]\n               [--enable-vtpm {false, true}]\n               [--ephemeral-option {Local}]\n               [--ephemeral-os-disk {false, true}]\n               [--ephemeral-os-disk-placement {CacheDisk, NvmeDisk, ResourceDisk}]\n               [--exclude-extensions]\n               [--force-deletion]\n               [--force-string]\n               [--ids]\n               [--instance-id]\n               [--is-overridable {false, true}]\n               [--license-type {None, RHEL_BASE, RHEL_BASESAPAPPS, RHEL_BASESAPHA, RHEL_BYOS, RHEL_ELS_6, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, SLES, SLES_BYOS, SLES_HPC, SLES_SAP, SLES_STANDARD, UBUNTU, UBUNTU_PRO, Windows_Client, Windows_Server}]\n               [--max-batch-instance-percent]\n               [--max-price]\n               [--max-surge {false, true}]\n               [--max-unhealthy-instance-percent]\n               [--max-unhealthy-upgraded-instance-percent]\n               [--name]\n               [--no-wait]\n               [--pause-time-between-batches]\n               [--ppg]\n               [--prioritize-unhealthy-instances {false, true}]\n               [--priority {Low, Regular, Spot}]\n               [--protect-from-scale-in {false, true}]\n               [--protect-from-scale-set-actions {false, true}]\n               [--proxy-agent-mode {Audit, Enforce}]\n               [--regular-priority-count]\n               [--regular-priority-percentage]\n               [--remove]\n               [--resource-group]\n               [--scale-in-policy {Default, NewestVM, OldestVM}]\n               [--security-posture-id]\n               [--security-type {Standard, TrustedLaunch}]\n               [--set]\n               [--sku-allocat-strat {CapacityOptimized, LowestPrice}]\n               [--skuprofile-vmsizes]\n               [--spot-restore-timeout]\n               [--subscription]\n               [--terminate-notification-time]\n               [--ultra-ssd-enabled {false, true}]\n               [--upgrade-policy-mode {Automatic, Manual, Rolling}]\n               [--user-data]\n               [--v-cpus-available]\n               [--v-cpus-per-core]\n               [--vm-sku]\n               [--zone-balance {false, true}]\n               [--zones]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--additional-events --additional-scheduled-events --scheduled-event-additional-publishing-target-event-grid-and-resource-graph",
                "--automatic-repairs-action",
                "--automatic-repairs-grace-period",
                "--capacity-reservation-group --crg",
                "--custom-data",
                "--disk-controller-type",
                "--enable-auto-os-upgrade",
                "--enable-automatic-repairs",
                "--enable-cross-zone-upgrade",
                "--enable-hibernation",
                "--enable-osimage-notification",
                "--enable-proxy-agent",
                "--enable-reboot --enable-user-reboot-scheduled-events",
                "--enable-redeploy --enable-user-redeploy-scheduled-events",
                "--enable-resilient-creation",
                "--enable-resilient-deletion",
                "--enable-secure-boot",
                "--enable-spot-restore",
                "--enable-terminate-notification",
                "--enable-vtpm",
                "--ephemeral-option --ephemeral-os-disk-option",
                "--ephemeral-os-disk",
                "--ephemeral-os-disk-placement --ephemeral-placement",
                "--exclude-extensions --security-posture-reference-exclude-extensions",
                "--force-deletion",
                "--force-string",
                "--ids",
                "--instance-id",
                "--is-overridable --security-posture-reference-is-overridable",
                "--license-type",
                "--max-batch-instance-percent",
                "--max-price",
                "--max-surge",
                "--max-unhealthy-instance-percent",
                "--max-unhealthy-upgraded-instance-percent",
                "--name -n",
                "--no-wait",
                "--pause-time-between-batches",
                "--ppg",
                "--prioritize-unhealthy-instances",
                "--priority",
                "--protect-from-scale-in",
                "--protect-from-scale-set-actions",
                "--proxy-agent-mode",
                "--regular-priority-count",
                "--regular-priority-percentage",
                "--remove",
                "--resource-group -g",
                "--scale-in-policy",
                "--security-posture-id --security-posture-reference-id",
                "--security-type",
                "--set",
                "--sku-allocat-strat --skuprofile-allocation-strategy",
                "--skuprofile-vmsizes",
                "--spot-restore-timeout",
                "--subscription",
                "--terminate-notification-time",
                "--ultra-ssd-enabled",
                "--upgrade-policy-mode",
                "--user-data",
                "--v-cpus-available",
                "--v-cpus-per-core",
                "--vm-sku",
                "--zone-balance",
                "--zones -z"
            ],
            "examples": [
                "az vmss update --name MyScaleSet --resource-group MyResourceGroup --license-type windows_server",
                "az vmss update --name MyScaleSet --resource-group MyResourceGroup --instance-id 4 --protect-from-scale-set-actions False --protect-from-scale-in",
                "az vmss update --name MyScaleSet --resource-group MyResourceGroup --instance-id 4 --set protectionPolicy.protectFromScaleIn=True protectionPolicy.protectFromScaleSetActions=False",
                "az vmss update --name MyScaleSet --resource-group MyResourceGroup --set virtualMachineProfile.storageProfile.dataDisks[0].diskIOPSReadWrite=444",
                "az vmss update --name MyScaleSet --resource-group MyResourceGroup --set virtualMachineProfile.storageProfile.dataDisks[0].diskMBpsReadWrite=66",
                "az vmss update --name MyScaleSet --resource-group MyResourceGroup --set virtualMachineProfile.storageProfile.imageReference.id=imageID",
                "az vmss update -n MyVmss -g MyResourceGroup --set virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode=AutomaticByPlatform",
                "az vmss update -n MyVmss -g MyResourceGroup --security-posture-reference-id /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{version} \\\n    --security-posture-reference-exclude-extensions \"c:\\tmp\\exclude_extensions.json\""
            ]
        },
        {
            "name": "az vmss update-domain-walk",
            "summary": "Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.",
            "syntax": "az vmss update-domain-walk --platform-update-domain\n                           [--ids]\n                           [--placement-group-id]\n                           [--resource-group]\n                           [--subscription]\n                           [--vmss-name]\n                           [--zone]",
            "required_parameters": [
                "--platform-update-domain"
            ],
            "optional_parameters": [
                "--ids",
                "--placement-group-id",
                "--resource-group -g",
                "--subscription",
                "--vmss-name",
                "--zone"
            ],
            "examples": [
                "az vmss update-domain-walk -g rg --vmss-name vmss --platform-update-domain"
            ]
        },
        {
            "name": "az vmss update-instances",
            "summary": "Upgrade VMs within a VMSS.",
            "syntax": "az vmss update-instances --instance-ids\n                         --name\n                         --resource-group\n                         [--no-wait]",
            "required_parameters": [
                "--instance-ids",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": [
                "az vmss update-instances --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vmss wait",
            "summary": "Place the CLI in a waiting state until a condition of a scale set is met.",
            "syntax": "az vmss wait [--created]\n             [--custom]\n             [--deleted]\n             [--exists]\n             [--ids]\n             [--instance-id]\n             [--interval]\n             [--name]\n             [--resource-group]\n             [--subscription]\n             [--timeout]\n             [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--instance-id",
                "--interval",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": [
                "az vmss wait --updated --name MyScaleSet --resource-group MyResourceGroup",
                "az vmss wait --updated --instance-id 1 --name MyScaleSet --resource-group MyResourceGroup",
                "az vmss wait --created --name MyScaleSet --resource-group MyResourceGroup"
            ]
        }
    ]
}