{
    "command_group": "az iot hub",
    "description": "Manage Azure IoT hubs.",
    "status": "GA",
    "commands": [
        {
            "name": "az iot hub create",
            "summary": "Create an Azure IoT hub.",
            "syntax": "az iot hub create --name\n                  --resource-group\n                  [--c2d-max-delivery-count]\n                  [--c2d-ttl]\n                  [--dds {false, true}]\n                  [--disable-local-auth {false, true}]\n                  [--disable-module-sas {false, true}]\n                  [--edr {false, true}]\n                  [--fc]\n                  [--fcs]\n                  [--fd]\n                  [--feedback-lock-duration]\n                  [--feedback-ttl]\n                  [--fileupload-notification-lock-duration]\n                  [--fileupload-notification-max-delivery-count]\n                  [--fileupload-notification-ttl]\n                  [--fileupload-notifications {false, true}]\n                  [--fileupload-sas-ttl]\n                  [--fileupload-storage-auth-type {identityBased, keyBased}]\n                  [--fileupload-storage-identity]\n                  [--location]\n                  [--mi-system-assigned {false, true}]\n                  [--mi-user-assigned]\n                  [--min-tls-version]\n                  [--no-wait]\n                  [--partition-count]\n                  [--rd]\n                  [--role]\n                  [--scopes]\n                  [--sku {B1, B2, B3, F1, S1, S2, S3}]\n                  [--tags]\n                  [--unit]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--c2d-max-delivery-count --cdd",
                "--c2d-ttl --ct",
                "--dds --disable-device-sas",
                "--disable-local-auth --dla",
                "--disable-module-sas --dms",
                "--edr --enforce-data-residency",
                "--fc --fileupload-storage-container-name",
                "--fcs --fileupload-storage-connectionstring",
                "--fd --feedback-max-delivery-count",
                "--feedback-lock-duration --fld",
                "--feedback-ttl --ft",
                "--fileupload-notification-lock-duration --fnld",
                "--fileupload-notification-max-delivery-count --fnd",
                "--fileupload-notification-ttl --fnt",
                "--fileupload-notifications --fn",
                "--fileupload-sas-ttl --fst",
                "--fileupload-storage-auth-type --fsa",
                "--fileupload-storage-identity --fsi",
                "--location -l",
                "--mi-system-assigned",
                "--mi-user-assigned",
                "--min-tls-version --mintls",
                "--no-wait",
                "--partition-count",
                "--rd --retention-day",
                "--role",
                "--scopes",
                "--sku",
                "--tags",
                "--unit"
            ],
            "examples": [
                "az iot hub create --resource-group MyResourceGroup --name MyIotHub --sku F1 --partition-count 2",
                "az iot hub create --resource-group MyResourceGroup --name MyIotHub --location westus --tags a=b c=d",
                "az iot hub create --resource-group MyResourceGroup --name MyIotHub --location westus --mi-system-assigned --role \"Storage Blob Data Contributor\" --scopes {resourceId}",
                "az iot hub create --resource-group MyResourceGroup --name MyIotHub --location westus --disable-local-auth --disable-device-sas --disable-module-sas",
                "az iot hub create --resource-group MyResourceGroup --name MyIoTHub --edr"
            ]
        },
        {
            "name": "az iot hub delete",
            "summary": "Delete an IoT hub.",
            "syntax": "az iot hub delete [--ids]\n                  [--name]\n                  [--no-wait]\n                  [--resource-group]\n                  [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az iot hub delete --name MyIoTHub --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az iot hub generate-sas-token",
            "summary": "Generate a SAS token for a target IoT Hub, device or module.",
            "syntax": "az iot hub generate-sas-token [--auth-type {key, login}]\n                              [--connection-string]\n                              [--device-id]\n                              [--du]\n                              [--hub-name]\n                              [--key-type {primary, secondary}]\n                              [--login]\n                              [--module-id]\n                              [--pn]\n                              [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--auth-type",
                "--connection-string --cs",
                "--device-id -d",
                "--du --duration",
                "--hub-name -n",
                "--key-type --kt",
                "--login -l",
                "--module-id -m",
                "--pn --policy-name",
                "--resource-group -g"
            ],
            "examples": [
                "az iot hub generate-sas-token -n {iothub_name}",
                "az iot hub generate-sas-token -n {iothub_name} --policy registryRead --key-type secondary",
                "az iot hub generate-sas-token -d {device_id} -n {iothub_name}",
                "az iot hub generate-sas-token -d {device_id} --login 'HostName=myhub.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=12345'",
                "az iot hub generate-sas-token --connection-string 'HostName=myhub.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=12345'",
                "az iot hub generate-sas-token --connection-string 'HostName=myhub.azure-devices.net;DeviceId=mydevice;SharedAccessKeyName=iothubowner;SharedAccessKey=12345'",
                "az iot hub generate-sas-token --connection-string 'HostName=myhub.azure-devices.net;DeviceId=mydevice;ModuleId=mymodule;SharedAccessKeyName=iothubowner;SharedAccessKey=12345'"
            ]
        },
        {
            "name": "az iot hub invoke-device-method",
            "summary": "Invoke a device method.",
            "syntax": "az iot hub invoke-device-method --device-id\n                                --method-name\n                                [--auth-type {key, login}]\n                                [--hub-name]\n                                [--login]\n                                [--method-payload]\n                                [--resource-group]\n                                [--timeout]",
            "required_parameters": [
                "--device-id -d",
                "--method-name --mn"
            ],
            "optional_parameters": [
                "--auth-type",
                "--hub-name -n",
                "--login -l",
                "--method-payload --mp",
                "--resource-group -g",
                "--timeout --to"
            ],
            "examples": [
                "az iot hub invoke-device-method --hub-name {iothub_name} --device-id {device_id} --method-name Reboot --method-payload '{\"version\":\"1.0\"}'"
            ]
        },
        {
            "name": "az iot hub invoke-module-method",
            "summary": "Invoke a module method.",
            "syntax": "az iot hub invoke-module-method --device-id\n                                --method-name\n                                --module-id\n                                [--auth-type {key, login}]\n                                [--hub-name]\n                                [--login]\n                                [--method-payload]\n                                [--resource-group]\n                                [--timeout]",
            "required_parameters": [
                "--device-id -d",
                "--method-name --mn",
                "--module-id -m"
            ],
            "optional_parameters": [
                "--auth-type",
                "--hub-name -n",
                "--login -l",
                "--method-payload --mp",
                "--resource-group -g",
                "--timeout --to"
            ],
            "examples": [
                "az iot hub invoke-module-method -n {iothub_name} -d {device_id} -m '$edgeAgent' --method-name 'RestartModule' --method-payload '{\"schemaVersion\": \"1.0\"}'"
            ]
        },
        {
            "name": "az iot hub list",
            "summary": "List IoT hubs.",
            "syntax": "az iot hub list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az iot hub list",
                "az iot hub list --resource-group MyGroup"
            ]
        },
        {
            "name": "az iot hub list-skus",
            "summary": "List available pricing tiers.",
            "syntax": "az iot hub list-skus [--ids]\n                     [--name]\n                     [--resource-group]\n                     [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az iot hub list-skus --name MyIoTHub"
            ]
        },
        {
            "name": "az iot hub manual-failover",
            "summary": "Initiate a manual failover for the IoT Hub to the geo-paired disaster recovery region.",
            "syntax": "az iot hub manual-failover [--ids]\n                           [--name]\n                           [--no-wait]\n                           [--resource-group]\n                           [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az iot hub manual-failover -n myhub"
            ]
        },
        {
            "name": "az iot hub monitor-events",
            "summary": "Monitor device telemetry & messages sent to an IoT Hub.",
            "syntax": "az iot hub monitor-events [--cg]\n                          [--content-type]\n                          [--device-id]\n                          [--device-query]\n                          [--enqueued-time]\n                          [--hub-name]\n                          [--interface]\n                          [--login]\n                          [--mc]\n                          [--module-id]\n                          [--properties {all, anno, app, sys}]\n                          [--repair {false, true}]\n                          [--resource-group]\n                          [--timeout]\n                          [--yes {false, true}]",
            "required_parameters": [],
            "optional_parameters": [
                "--cg --consumer-group -c",
                "--content-type --ct",
                "--device-id -d",
                "--device-query -q",
                "--enqueued-time --et -e",
                "--hub-name -n",
                "--interface -i",
                "--login -l",
                "--mc --message-count",
                "--module-id -m",
                "--properties --props -p",
                "--repair -r",
                "--resource-group -g",
                "--timeout --to -t",
                "--yes -y"
            ],
            "examples": [
                "az iot hub monitor-events -n {iothub_name}",
                "az iot hub monitor-events -n {iothub_name} --login 'HostName=myhub.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=12345'",
                "az iot hub monitor-events -n {iothub_name} -d {device_id}",
                "az iot hub monitor-events -n {iothub_name} -d Device*",
                "az iot hub monitor-events -n {iothub_name} -q \"select * from devices where tags.location.region = 'US'\"",
                "az iot hub monitor-events -n {iothub_name} -d {device_id} --cg {consumer_group_name}",
                "az iot hub monitor-events -n {iothub_name} -d {device_id} --properties anno",
                "az iot hub monitor-events -n {iothub_name} -d {device_id} --properties anno sys --timeout 0",
                "az iot hub monitor-events -n {iothub_name} --props all",
                "az iot hub monitor-events -n {iothub_name} --content-type application/json",
                "az iot hub monitor-events -n {iothub_name} --message-count {message_count}"
            ]
        },
        {
            "name": "az iot hub monitor-feedback",
            "summary": "Monitor feedback sent by devices to acknowledge cloud-to-device (C2D) messages.",
            "syntax": "az iot hub monitor-feedback [--auth-type {key, login}]\n                            [--device-id]\n                            [--hub-name]\n                            [--login]\n                            [--repair {false, true}]\n                            [--resource-group]\n                            [--wait-on-msg]\n                            [--yes {false, true}]",
            "required_parameters": [],
            "optional_parameters": [
                "--auth-type",
                "--device-id -d",
                "--hub-name -n",
                "--login -l",
                "--repair -r",
                "--resource-group -g",
                "--wait-on-msg -w",
                "--yes -y"
            ],
            "examples": [
                "az iot hub monitor-feedback -n {iothub_name}",
                "az iot hub monitor-feedback -n {iothub_name} --login 'HostName=myhub.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=12345'",
                "az iot hub monitor-feedback -n {iothub_name} -d {device_id}",
                "az iot hub monitor-feedback -n {iothub_name} -d {device_id} -w {message_id}"
            ]
        },
        {
            "name": "az iot hub query",
            "summary": "Query an IoT Hub using a powerful SQL-like language.",
            "syntax": "az iot hub query --query-command\n                 [--auth-type {key, login}]\n                 [--hub-name]\n                 [--login]\n                 [--resource-group]\n                 [--top]",
            "required_parameters": [
                "--query-command -q"
            ],
            "optional_parameters": [
                "--auth-type",
                "--hub-name -n",
                "--login -l",
                "--resource-group -g",
                "--top"
            ],
            "examples": [
                "az iot hub query -n {iothub_name} -q \"select * from devices\"",
                "az iot hub query -n {iothub_name} -q \"select * from devices.modules where devices.deviceId = '{device_id}'\""
            ]
        },
        {
            "name": "az iot hub show",
            "summary": "Get the details of an IoT hub.",
            "syntax": "az iot hub show [--ids]\n                [--name]\n                [--resource-group]\n                [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az iot hub show --name MyIoTHub"
            ]
        },
        {
            "name": "az iot hub show-quota-metrics",
            "summary": "Get the quota metrics for an IoT hub.",
            "syntax": "az iot hub show-quota-metrics [--ids]\n                              [--name]\n                              [--resource-group]\n                              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az iot hub show-quota-metrics --ids {ids}",
                "az iot hub show-quota-metrics --name MyIoTHub"
            ]
        },
        {
            "name": "az iot hub show-stats",
            "summary": "Get the statistics for an IoT hub.",
            "syntax": "az iot hub show-stats [--ids]\n                      [--name]\n                      [--resource-group]\n                      [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az iot hub show-stats --name MyIoTHub"
            ]
        },
        {
            "name": "az iot hub update",
            "summary": "Update metadata for an IoT hub.",
            "syntax": "az iot hub update [--add]\n                  [--c2d-max-delivery-count]\n                  [--c2d-ttl]\n                  [--dds {false, true}]\n                  [--disable-local-auth {false, true}]\n                  [--disable-module-sas {false, true}]\n                  [--fc]\n                  [--fcs]\n                  [--fd]\n                  [--feedback-lock-duration]\n                  [--feedback-ttl]\n                  [--fileupload-notification-lock-duration]\n                  [--fileupload-notification-max-delivery-count]\n                  [--fileupload-notification-ttl]\n                  [--fileupload-notifications {false, true}]\n                  [--fileupload-sas-ttl]\n                  [--fileupload-storage-auth-type {identityBased, keyBased}]\n                  [--fileupload-storage-identity]\n                  [--force-string]\n                  [--ids]\n                  [--name]\n                  [--rd]\n                  [--remove]\n                  [--resource-group]\n                  [--set]\n                  [--sku {B1, B2, B3, F1, S1, S2, S3}]\n                  [--subscription]\n                  [--tags]\n                  [--unit]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--c2d-max-delivery-count --cdd",
                "--c2d-ttl --ct",
                "--dds --disable-device-sas",
                "--disable-local-auth --dla",
                "--disable-module-sas --dms",
                "--fc --fileupload-storage-container-name",
                "--fcs --fileupload-storage-connectionstring",
                "--fd --feedback-max-delivery-count",
                "--feedback-lock-duration --fld",
                "--feedback-ttl --ft",
                "--fileupload-notification-lock-duration --fnld",
                "--fileupload-notification-max-delivery-count --fnd",
                "--fileupload-notification-ttl --fnt",
                "--fileupload-notifications --fn",
                "--fileupload-sas-ttl --fst",
                "--fileupload-storage-auth-type --fsa",
                "--fileupload-storage-identity --fsi",
                "--force-string",
                "--ids",
                "--name -n",
                "--rd --retention-day",
                "--remove",
                "--resource-group -g",
                "--set",
                "--sku",
                "--subscription",
                "--tags",
                "--unit"
            ],
            "examples": [
                "az iot hub update --name MyIotHub --fileupload-storage-connectionstring \"connection-string\" \\ --fileupload-storage-container-name \"container_name\"",
                "az iot hub update --name MyIotHub --add properties.ipFilterRules filter_name=test-rule action=Accept ip_mask=127.0.0.0/31",
                "az iot hub update --name MyIotHub --set properties.allocationPolicy=\"GeoLatency\"",
                "az iot hub update -n MyIotHub --unit 2 --tags a=b c=d",
                "az iot hub update -n MyIotHub --sku S2",
                "az iot hub update -n MyIotHub --retention-day 3",
                "az iot hub update --name MyIotHub --c2d-max-delivery-count 30 --c2d-ttl 5",
                "az iot hub update --name MyIoTHub --feedback-max-delivery-count 20 --feedback-lock-duration 100 --feedback-ttl 4",
                "az iot hub update -n MyIoTHub --fileupload-sas-ttl 5 --fileupload-storage-auth-type identityBased --fileupload-storage-identity [system]",
                "az iot hub update -n MyIoTHub --fileupload-notification-max-delivery-count 50 --fileupload-notification-ttl 48 --fileupload-notifications --fileupload-notification-lock-duration 10",
                "az iot hub update -n MyIoTHub --disable-local-auth --disable-device-sas false --disable-module-sas true"
            ]
        },
        {
            "name": "az iot hub wait",
            "summary": "Wait until an operation on an IoT Hub instance is complete.",
            "syntax": "az iot hub wait [--created]\n                [--custom]\n                [--deleted]\n                [--exists]\n                [--ids]\n                [--interval]\n                [--name]\n                [--resource-group]\n                [--subscription]\n                [--timeout]\n                [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--interval",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": [
                "az iot hub wait -n MyIoTHub --created",
                "az iot hub wait -n MyIoTHub --deleted",
                "az iot hub wait -n MyIoTHub --custom \"properties.state=='Active'\""
            ]
        }
    ]
}