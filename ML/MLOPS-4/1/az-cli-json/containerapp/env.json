{
    "command_group": "az containerapp env",
    "description": "Commands to manage Container Apps environments.",
    "status": "GA",
    "commands": [
        {
            "name": "az containerapp env create",
            "summary": "Create a Container Apps environment.",
            "syntax": "az containerapp env create --name\n                           --resource-group\n                           [--certificate-file]\n                           [--certificate-password]\n                           [--custom-domain-dns-suffix]\n                           [--dapr-connection-string]\n                           [--enable-mtls {false, true}]\n                           [--enable-peer-to-peer-encryption {false, true}]\n                           [--enable-workload-profiles {false, true}]\n                           [--infrastructure-subnet-resource-id]\n                           [--internal-only {false, true}]\n                           [--location]\n                           [--logs-destination {azure-monitor, log-analytics, none}]\n                           [--logs-workspace-id]\n                           [--logs-workspace-key]\n                           [--no-wait]\n                           [--platform-reserved-cidr]\n                           [--platform-reserved-dns-ip]\n                           [--storage-account]\n                           [--tags]\n                           [--zone-redundant]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--certificate-file --custom-domain-certificate-file",
                "--certificate-password --custom-domain-certificate-password",
                "--custom-domain-dns-suffix --dns-suffix",
                "--dapr-connection-string -d",
                "--enable-mtls",
                "--enable-peer-to-peer-encryption",
                "--enable-workload-profiles -w",
                "--infrastructure-subnet-resource-id -s",
                "--internal-only",
                "--location -l",
                "--logs-destination",
                "--logs-workspace-id",
                "--logs-workspace-key",
                "--no-wait",
                "--platform-reserved-cidr",
                "--platform-reserved-dns-ip",
                "--storage-account",
                "--tags",
                "--zone-redundant -z"
            ],
            "examples": [
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --zone-redundant",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --logs-workspace-id myLogsWorkspaceID \\\n    --logs-workspace-key myLogsWorkspaceKey \\\n    --location eastus2",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --enable-workload-profiles",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --enable-workload-profiles false"
            ]
        },
        {
            "name": "az containerapp env create",
            "summary": "Create a Container Apps environment.",
            "syntax": "az containerapp env create --name\n                           --resource-group\n                           [--certificate-akv-url]\n                           [--certificate-file]\n                           [--certificate-identity]\n                           [--certificate-password]\n                           [--custom-domain-dns-suffix]\n                           [--dapr-connection-string]\n                           [--enable-dedicated-gpu {false, true}]\n                           [--enable-mtls {false, true}]\n                           [--enable-peer-to-peer-encryption {false, true}]\n                           [--enable-workload-profiles {false, true}]\n                           [--infrastructure-resource-group]\n                           [--infrastructure-subnet-resource-id]\n                           [--internal-only {false, true}]\n                           [--location]\n                           [--logs-destination {azure-monitor, log-analytics, none}]\n                           [--logs-dynamic-json-columns {false, true}]\n                           [--logs-workspace-id]\n                           [--logs-workspace-key]\n                           [--mi-system-assigned]\n                           [--mi-user-assigned]\n                           [--no-wait]\n                           [--platform-reserved-cidr]\n                           [--platform-reserved-dns-ip]\n                           [--public-network-access {Disabled, Enabled}]\n                           [--storage-account]\n                           [--tags]\n                           [--zone-redundant]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--certificate-akv-url --custom-domain-certificate-akv-url",
                "--certificate-file --custom-domain-certificate-file",
                "--certificate-identity --custom-domain-certificate-identity",
                "--certificate-password --custom-domain-certificate-password",
                "--custom-domain-dns-suffix --dns-suffix",
                "--dapr-connection-string -d",
                "--enable-dedicated-gpu",
                "--enable-mtls",
                "--enable-peer-to-peer-encryption",
                "--enable-workload-profiles -w",
                "--infrastructure-resource-group -i",
                "--infrastructure-subnet-resource-id -s",
                "--internal-only",
                "--location -l",
                "--logs-destination",
                "--logs-dynamic-json-columns -j",
                "--logs-workspace-id",
                "--logs-workspace-key",
                "--mi-system-assigned",
                "--mi-user-assigned",
                "--no-wait",
                "--platform-reserved-cidr",
                "--platform-reserved-dns-ip",
                "--public-network-access",
                "--storage-account",
                "--tags",
                "--zone-redundant -z"
            ],
            "examples": [
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --zone-redundant",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --logs-workspace-id myLogsWorkspaceID \\\n    --logs-workspace-key myLogsWorkspaceKey \\\n    --location eastus2",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --enable-workload-profiles",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --enable-workload-profiles false",
                "az containerapp env create -n MyContainerappEnvironment -g MyResourceGroup \\\n    --location eastus2 --mi-system-assigned --mi-user-assigned MyUserIdentityResourceId"
            ]
        },
        {
            "name": "az containerapp env delete",
            "summary": "Delete a Container Apps environment.",
            "syntax": "az containerapp env delete [--ids]\n                           [--name]\n                           [--no-wait]\n                           [--resource-group]\n                           [--subscription]\n                           [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az containerapp env delete -n MyContainerappEnvironment -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env delete",
            "summary": "Delete a Container Apps environment.",
            "syntax": "az containerapp env delete [--ids]\n                           [--name]\n                           [--no-wait]\n                           [--resource-group]\n                           [--subscription]\n                           [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az containerapp env delete -n MyContainerappEnvironment -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env list",
            "summary": "List Container Apps environments by subscription or resource group.",
            "syntax": "az containerapp env list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az containerapp env list",
                "az containerapp env list -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env list",
            "summary": "List Container Apps environments by subscription or resource group.",
            "syntax": "az containerapp env list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az containerapp env list",
                "az containerapp env list -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env list-usages",
            "summary": "List usages of quotas for specific managed environment.",
            "syntax": "az containerapp env list-usages [--ids]\n                                [--name]\n                                [--resource-group]\n                                [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az containerapp env list-usages -n MyEnv -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env show",
            "summary": "Show details of a Container Apps environment.",
            "syntax": "az containerapp env show [--ids]\n                         [--name]\n                         [--resource-group]\n                         [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az containerapp env show -n MyContainerappEnvironment -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env show",
            "summary": "Show details of a Container Apps environment.",
            "syntax": "az containerapp env show [--ids]\n                         [--name]\n                         [--resource-group]\n                         [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az containerapp env show -n MyContainerappEnvironment -g MyResourceGroup"
            ]
        },
        {
            "name": "az containerapp env update",
            "summary": "Update a Container Apps environment.",
            "syntax": "az containerapp env update [--certificate-file]\n                           [--certificate-password]\n                           [--custom-domain-dns-suffix]\n                           [--dapr-connection-string]\n                           [--enable-mtls {false, true}]\n                           [--enable-peer-to-peer-encryption {false, true}]\n                           [--ids]\n                           [--logs-destination {azure-monitor, log-analytics, none}]\n                           [--logs-workspace-id]\n                           [--logs-workspace-key]\n                           [--max-nodes]\n                           [--min-nodes]\n                           [--name]\n                           [--no-wait]\n                           [--resource-group]\n                           [--storage-account]\n                           [--subscription]\n                           [--tags]\n                           [--workload-profile-name]\n                           [--workload-profile-type]",
            "required_parameters": [],
            "optional_parameters": [
                "--certificate-file --custom-domain-certificate-file",
                "--certificate-password --custom-domain-certificate-password",
                "--custom-domain-dns-suffix --dns-suffix",
                "--dapr-connection-string -d",
                "--enable-mtls",
                "--enable-peer-to-peer-encryption",
                "--ids",
                "--logs-destination",
                "--logs-workspace-id",
                "--logs-workspace-key",
                "--max-nodes",
                "--min-nodes",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--storage-account",
                "--subscription",
                "--tags",
                "--workload-profile-name -w",
                "--workload-profile-type"
            ],
            "examples": [
                "az containerapp env update -n MyContainerappEnvironment -g MyResourceGroup \\\n    --dns-suffix my-suffix.net --certificate-file MyFilePath \\\n    --certificate-password MyCertPass"
            ]
        },
        {
            "name": "az containerapp env update",
            "summary": "Update a Container Apps environment.",
            "syntax": "az containerapp env update [--certificate-akv-url]\n                           [--certificate-file]\n                           [--certificate-identity]\n                           [--certificate-password]\n                           [--custom-domain-dns-suffix]\n                           [--enable-mtls {false, true}]\n                           [--enable-peer-to-peer-encryption {false, true}]\n                           [--ids]\n                           [--logs-destination {azure-monitor, log-analytics, none}]\n                           [--logs-dynamic-json-columns {false, true}]\n                           [--logs-workspace-id]\n                           [--logs-workspace-key]\n                           [--max-nodes]\n                           [--min-nodes]\n                           [--name]\n                           [--no-wait]\n                           [--public-network-access {Disabled, Enabled}]\n                           [--resource-group]\n                           [--storage-account]\n                           [--subscription]\n                           [--tags]\n                           [--workload-profile-name]\n                           [--workload-profile-type]",
            "required_parameters": [],
            "optional_parameters": [
                "--certificate-akv-url --custom-domain-certificate-akv-url",
                "--certificate-file --custom-domain-certificate-file",
                "--certificate-identity --custom-domain-certificate-identity",
                "--certificate-password --custom-domain-certificate-password",
                "--custom-domain-dns-suffix --dns-suffix",
                "--enable-mtls",
                "--enable-peer-to-peer-encryption",
                "--ids",
                "--logs-destination",
                "--logs-dynamic-json-columns -j",
                "--logs-workspace-id",
                "--logs-workspace-key",
                "--max-nodes",
                "--min-nodes",
                "--name -n",
                "--no-wait",
                "--public-network-access",
                "--resource-group -g",
                "--storage-account",
                "--subscription",
                "--tags",
                "--workload-profile-name -w",
                "--workload-profile-type"
            ],
            "examples": [
                "az containerapp env update -n MyContainerappEnvironment -g MyResourceGroup \\\n    --dns-suffix my-suffix.net --certificate-file MyFilePath \\\n    --certificate-password MyCertPass"
            ]
        }
    ]
}