{
    "command_group": "az ml run",
    "description": "Commands for submitting, updating, and monitoring runs.",
    "status": "GA",
    "commands": [
        {
            "name": "az ml run cancel",
            "summary": "Cancel run.",
            "syntax": "az ml run cancel --run\n                 [--experiment-name]\n                 [--output-metadata-file]\n                 [--path]\n                 [--resource-group]\n                 [--subscription-id]\n                 [--workspace-name]",
            "required_parameters": [
                "--run -r"
            ],
            "optional_parameters": [
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run download-logs",
            "summary": "Download log files.",
            "syntax": "az ml run download-logs --output-dir\n                        --run\n                        [--experiment-name]\n                        [--output-metadata-file]\n                        [--path]\n                        [--resource-group]\n                        [--subscription-id]\n                        [--workspace-name]",
            "required_parameters": [
                "--output-dir -d",
                "--run -r"
            ],
            "optional_parameters": [
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run list",
            "summary": "List runs.",
            "syntax": "az ml run list [--compute-target-name]\n               [--experiment-name]\n               [--last]\n               [--minimal]\n               [--output-metadata-file]\n               [--parent-run-id]\n               [--path]\n               [--pipeline-run-id]\n               [--resource-group]\n               [--status {Completed, Failed, Finalizing, Preparing, Provisioning, Queued, Running, Starting}]\n               [--subscription-id]\n               [--tags]\n               [--workspace-name]",
            "required_parameters": [],
            "optional_parameters": [
                "--compute-target-name",
                "--experiment-name -e",
                "--last",
                "--minimal",
                "--output-metadata-file -t",
                "--parent-run-id",
                "--path",
                "--pipeline-run-id",
                "--resource-group -g",
                "--status",
                "--subscription-id",
                "--tags",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run monitor-logs",
            "summary": "Monitor the logs for an existing run.",
            "syntax": "az ml run monitor-logs --run\n                       [--experiment-name]\n                       [--output-metadata-file]\n                       [--path]\n                       [--resource-group]\n                       [--subscription-id]\n                       [--workspace-name]",
            "required_parameters": [
                "--run -r"
            ],
            "optional_parameters": [
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run monitor-tensorboard",
            "summary": "Monitor an existing run using tensorboard.",
            "syntax": "az ml run monitor-tensorboard --run\n                              [--experiment-name]\n                              [--local-directory]\n                              [--output-metadata-file]\n                              [--path]\n                              [--resource-group]\n                              [--subscription-id]\n                              [--workspace-name]",
            "required_parameters": [
                "--run -r"
            ],
            "optional_parameters": [
                "--experiment-name -e",
                "--local-directory",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run show",
            "summary": "Show run.",
            "syntax": "az ml run show --run\n               [--experiment-name]\n               [--output-metadata-file]\n               [--path]\n               [--resource-group]\n               [--subscription-id]\n               [--workspace-name]",
            "required_parameters": [
                "--run -r"
            ],
            "optional_parameters": [
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run submit-hyperdrive",
            "summary": "Submit a hyper parameter sweep using run config.",
            "syntax": "az ml run submit-hyperdrive --hyperdrive-configuration-name\n                            [--async]\n                            [--conda-dependencies]\n                            [--ct]\n                            [--experiment-name]\n                            [--output-metadata-file]\n                            [--path]\n                            [--resource-group]\n                            [--run-configuration-name]\n                            [--source-directory]\n                            [--subscription-id]\n                            [--workspace-name]\n                            [<USER_SCRIPT_AND_ARGUMENTS>]",
            "required_parameters": [
                "--hyperdrive-configuration-name"
            ],
            "optional_parameters": [
                "--async",
                "--conda-dependencies -d",
                "--ct --target",
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--run-configuration-name -c",
                "--source-directory",
                "--subscription-id",
                "--workspace-name -w",
                "<USER_SCRIPT_AND_ARGUMENTS>"
            ],
            "examples": []
        },
        {
            "name": "az ml run submit-pipeline",
            "summary": "Submit a pipeline for execution, from a published pipeline ID or pipeline YAML file.",
            "syntax": "az ml run submit-pipeline [--datapaths]\n                          [--experiment-name]\n                          [--output-metadata-file]\n                          [--output_file]\n                          [--parameters]\n                          [--path]\n                          [--pipeline-id]\n                          [--pipeline-yaml]\n                          [--resource-group]\n                          [--subscription-id]\n                          [--workspace-name]",
            "required_parameters": [],
            "optional_parameters": [
                "--datapaths -d",
                "--experiment-name -n",
                "--output-metadata-file -t",
                "--output_file -f",
                "--parameters -p",
                "--path",
                "--pipeline-id -i",
                "--pipeline-yaml -y",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        },
        {
            "name": "az ml run submit-script",
            "summary": "Submit a script for execution.",
            "syntax": "az ml run submit-script [--async]\n                        [--conda-dependencies]\n                        [--ct]\n                        [--experiment-name]\n                        [--output-metadata-file]\n                        [--path]\n                        [--resource-group]\n                        [--run-configuration-name]\n                        [--source-directory]\n                        [--subscription-id]\n                        [--workspace-name]\n                        [<USER_SCRIPT_AND_ARGUMENTS>]",
            "required_parameters": [],
            "optional_parameters": [
                "--async",
                "--conda-dependencies -d",
                "--ct --target",
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--run-configuration-name -c",
                "--source-directory",
                "--subscription-id",
                "--workspace-name -w",
                "<USER_SCRIPT_AND_ARGUMENTS>"
            ],
            "examples": []
        },
        {
            "name": "az ml run update",
            "summary": "Update the run by adding tags.",
            "syntax": "az ml run update --run\n                 [--add-tag]\n                 [--experiment-name]\n                 [--output-metadata-file]\n                 [--path]\n                 [--resource-group]\n                 [--subscription-id]\n                 [--workspace-name]",
            "required_parameters": [
                "--run -r"
            ],
            "optional_parameters": [
                "--add-tag",
                "--experiment-name -e",
                "--output-metadata-file -t",
                "--path",
                "--resource-group -g",
                "--subscription-id",
                "--workspace-name -w"
            ],
            "examples": []
        }
    ]
}