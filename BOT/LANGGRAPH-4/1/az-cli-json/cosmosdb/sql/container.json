{
    "command_group": "az cosmosdb sql container",
    "description": "Manage Azure Cosmos DB SQL containers.",
    "status": "GA",
    "commands": [
        {
            "name": "az cosmosdb sql container create",
            "summary": "Create an SQL container under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container create --account-name\n                                 --database-name\n                                 --name\n                                 --partition-key-path\n                                 --resource-group\n                                 [--analytical-storage-ttl]\n                                 [--cep]\n                                 [--conflict-resolution-policy]\n                                 [--idx]\n                                 [--max-throughput]\n                                 [--partition-key-version]\n                                 [--throughput]\n                                 [--ttl]\n                                 [--unique-key-policy]\n                                 [--vector-embeddings]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--partition-key-path -p",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--analytical-storage-ttl -t",
                "--cep",
                "--conflict-resolution-policy -c",
                "--idx",
                "--max-throughput",
                "--partition-key-version",
                "--throughput",
                "--ttl",
                "--unique-key-policy -u",
                "--vector-embeddings"
            ],
            "examples": [
                "az cosmosdb sql container create -g MyResourceGroup -a MyAccount -d MyDatabase -n MyContainer --partition-key-path \"/my/path\" --idx @policy-file.json --ttl 1000 --throughput \"700\""
            ]
        },
        {
            "name": "az cosmosdb sql container create",
            "summary": "Create an SQL container under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container create --account-name\n                                 --database-name\n                                 --name\n                                 --partition-key-path\n                                 --resource-group\n                                 [--analytical-storage-ttl]\n                                 [--cep]\n                                 [--conflict-resolution-policy]\n                                 [--idx]\n                                 [--materialized-view-definition]\n                                 [--max-throughput]\n                                 [--partition-key-version]\n                                 [--throughput]\n                                 [--ttl]\n                                 [--unique-key-policy]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--partition-key-path -p",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--analytical-storage-ttl -t",
                "--cep",
                "--conflict-resolution-policy -c",
                "--idx",
                "--materialized-view-definition -m",
                "--max-throughput",
                "--partition-key-version",
                "--throughput",
                "--ttl",
                "--unique-key-policy -u"
            ],
            "examples": [
                "az cosmosdb sql container create -g MyResourceGroup -a MyAccount -d MyDatabase -n MyContainer --partition-key-path \"/my/path\" --idx @policy-file.json --ttl 1000 --throughput \"700\""
            ]
        },
        {
            "name": "az cosmosdb sql container delete",
            "summary": "Delete the SQL container under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container delete --account-name\n                                 --database-name\n                                 --name\n                                 --resource-group\n                                 [--yes]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--yes -y"
            ],
            "examples": []
        },
        {
            "name": "az cosmosdb sql container exists",
            "summary": "Checks if an Azure Cosmos DB SQL container exists.",
            "syntax": "az cosmosdb sql container exists --account-name\n                                 --database-name\n                                 --name\n                                 --resource-group",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az cosmosdb sql container list",
            "summary": "List the SQL containers under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container list --account-name\n                               --database-name\n                               --resource-group",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az cosmosdb sql container merge",
            "summary": "Merges the partitions of a sql container.",
            "syntax": "az cosmosdb sql container merge --account-name\n                                --database-name\n                                --name\n                                --resource-group",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": [
                "az cosmosdb sql container merge -g my-resource-group -a my-account -d my-db --name my-container"
            ]
        },
        {
            "name": "az cosmosdb sql container redistribute-partition-throughput",
            "summary": "Redistributes the partition throughput of a sql container.",
            "syntax": "az cosmosdb sql container redistribute-partition-throughput --account-name\n                                                            --database-name\n                                                            --name\n                                                            --resource-group\n                                                            [--evenly-distribute {false, true}]\n                                                            [--source-partition-info]\n                                                            [--target-partition-info]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--evenly-distribute",
                "--source-partition-info",
                "--target-partition-info"
            ],
            "examples": [
                "az cosmosdb sql container redistribute-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --evenly-distribute",
                "az cosmosdb sql container redistribute-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --target-partition-info 8=1200 6=1200]' --source-partition-info 9]'"
            ]
        },
        {
            "name": "az cosmosdb sql container restore",
            "summary": "Restore a deleted sql container within the same account.",
            "syntax": "az cosmosdb sql container restore --account-name\n                                  --database-name\n                                  --name\n                                  --resource-group\n                                  [--disable-ttl]\n                                  [--restore-timestamp]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--disable-ttl",
                "--restore-timestamp -t"
            ],
            "examples": [
                "az cosmosdb sql container restore --resource-group resource_group --account-name database_account_name --database-name parent_database_name --name name_of_container_needs_to_be_restored --restore-timestamp 2020-07-13T16:03:41+0000"
            ]
        },
        {
            "name": "az cosmosdb sql container restore",
            "summary": "Restore a deleted sql container within the same account.",
            "syntax": "az cosmosdb sql container restore --account-name\n                                  --database-name\n                                  --name\n                                  --resource-group\n                                  [--disable-ttl {false, true}]\n                                  [--restore-timestamp]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--disable-ttl",
                "--restore-timestamp -t"
            ],
            "examples": [
                "az cosmosdb sql container restore --resource-group resource_group --account-name database_account_name --database-name parent_database_name --name name_of_container_needs_to_be_restored --restore-timestamp 2020-07-13T16:03:41+0000"
            ]
        },
        {
            "name": "az cosmosdb sql container retrieve-partition-throughput",
            "summary": "Retrieve  the partition throughput of a sql container.",
            "syntax": "az cosmosdb sql container retrieve-partition-throughput --account-name\n                                                        --database-name\n                                                        --name\n                                                        --resource-group\n                                                        [--all-partitions {false, true}]\n                                                        [--physical-partition-ids]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--all-partitions",
                "--physical-partition-ids -p"
            ],
            "examples": [
                "az cosmosdb sql container retrieve-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --physical-partition-ids 8 9",
                "az cosmosdb sql container retrieve-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --all-partitions"
            ]
        },
        {
            "name": "az cosmosdb sql container show",
            "summary": "Show the details of a SQL container under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container show --account-name\n                               --database-name\n                               --name\n                               --resource-group",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az cosmosdb sql container update",
            "summary": "Update an SQL container under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container update --account-name\n                                 --database-name\n                                 --name\n                                 --resource-group\n                                 [--analytical-storage-ttl]\n                                 [--idx]\n                                 [--ttl]\n                                 [--vector-embeddings]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--analytical-storage-ttl -t",
                "--idx",
                "--ttl",
                "--vector-embeddings"
            ],
            "examples": []
        },
        {
            "name": "az cosmosdb sql container update",
            "summary": "Update an SQL container under an Azure Cosmos DB SQL database.",
            "syntax": "az cosmosdb sql container update --account-name\n                                 --database-name\n                                 --name\n                                 --resource-group\n                                 [--analytical-storage-ttl]\n                                 [--idx]\n                                 [--materialized-view-definition]\n                                 [--ttl]",
            "required_parameters": [
                "--account-name -a",
                "--database-name -d",
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--analytical-storage-ttl -t",
                "--idx",
                "--materialized-view-definition -m",
                "--ttl"
            ],
            "examples": []
        }
    ]
}