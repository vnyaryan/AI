{
    "command_group": "az networkfabric nni",
    "description": "Manage Network To Network Interconnect Resource.",
    "status": "GA",
    "commands": [
        {
            "name": "az networkfabric nni create",
            "summary": "Create a Network To Network Interconnect resource.",
            "syntax": "az networkfabric nni create --fabric\n                            --resource-group\n                            --resource-name\n                            --use-option-b {False, True}\n                            [--egress-acl-id]\n                            [--export-route-policy]\n                            [--import-route-policy]\n                            [--ingress-acl-id]\n                            [--is-management-type {False, True}]\n                            [--layer2-configuration]\n                            [--nni-type {CE, NPB}]\n                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                            [--npb-static-route-configuration]\n                            [--option-b-layer3-configuration]",
            "required_parameters": [
                "--fabric --fabric-name",
                "--resource-group -g",
                "--resource-name",
                "--use-option-b"
            ],
            "optional_parameters": [
                "--egress-acl-id",
                "--export-route-policy",
                "--import-route-policy",
                "--ingress-acl-id",
                "--is-management-type",
                "--layer2-configuration",
                "--nni-type",
                "--no-wait",
                "--npb-static-route-configuration",
                "--option-b-layer3-configuration"
            ],
            "examples": [
                "az networkfabric nni create --resource-group \"example-rg\" --fabric \"example-fabric\" --resource-name \"example-nni\" --nni-type \"CE\" --is-management-type \"True\" --use-option-b \"True\" --import-route-policy \"{importIpv4RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy',importIpv6RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy'}\" --export-route-policy \"{exportIpv4RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy',exportIpv6RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy'}\" --layer2-configuration \"{interfaces:['resourceId'],mtu:1500}\" --option-b-layer3-configuration \"{peerASN:28,vlanId:501,primaryIpv4Prefix:'172.31.0.0/31',secondaryIpv4Prefix:'172.31.0.20/31'}\"",
                "az networkfabric nni create --layer2-configuration \"??\""
            ]
        },
        {
            "name": "az networkfabric nni delete",
            "summary": "Delete the Network To Network Interconnect resource.",
            "syntax": "az networkfabric nni delete [--fabric]\n                            [--ids]\n                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                            [--resource-group]\n                            [--resource-name]\n                            [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--fabric --fabric-name",
                "--ids",
                "--no-wait",
                "--resource-group -g",
                "--resource-name",
                "--subscription"
            ],
            "examples": [
                "az networkfabric nni delete --resource-group \"example-rg\" --fabric \"example-fabric\" --resource-name \"example-nni\""
            ]
        },
        {
            "name": "az networkfabric nni list",
            "summary": "List all Network To Network Interconnects in the provided resource group.",
            "syntax": "az networkfabric nni list --fabric\n                          --resource-group\n                          [--max-items]\n                          [--next-token]",
            "required_parameters": [
                "--fabric --fabric-name",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--max-items",
                "--next-token"
            ],
            "examples": [
                "az networkfabric nni list --resource-group \"example-rg\" --fabric \"example-fabric\""
            ]
        },
        {
            "name": "az networkfabric nni show",
            "summary": "Show details of the provided Network To Network Interconnect resource.",
            "syntax": "az networkfabric nni show [--fabric]\n                          [--ids]\n                          [--resource-group]\n                          [--resource-name]\n                          [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--fabric --fabric-name",
                "--ids",
                "--resource-group -g",
                "--resource-name",
                "--subscription"
            ],
            "examples": [
                "az networkfabric nni show --resource-group \"example-rg\" --fabric \"example-fabric\" --resource-name \"example-nni\""
            ]
        },
        {
            "name": "az networkfabric nni update",
            "summary": "Update the Network to Network interconnect resource.",
            "syntax": "az networkfabric nni update [--egress-acl-id]\n                            [--export-route-policy]\n                            [--fabric]\n                            [--ids]\n                            [--import-route-policy]\n                            [--ingress-acl-id]\n                            [--layer2-configuration]\n                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                            [--npb-static-route-configuration]\n                            [--option-b-layer3-configuration]\n                            [--resource-group]\n                            [--resource-name]\n                            [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--egress-acl-id",
                "--export-route-policy",
                "--fabric --fabric-name",
                "--ids",
                "--import-route-policy",
                "--ingress-acl-id",
                "--layer2-configuration",
                "--no-wait",
                "--npb-static-route-configuration",
                "--option-b-layer3-configuration",
                "--resource-group -g",
                "--resource-name",
                "--subscription"
            ],
            "examples": [
                "az networkfabric nni update --resource-group \"example-rg\" --fabric \"example-fabric\" --resource-name \"example-nni\" --import-route-policy \"{importIpv4RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy',importIpv6RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy'}\" --export-route-policy \"{exportIpv4RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy',exportIpv6RoutePolicyId:'/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxx/resourceGroups/example-rg/providers/microsoft.managednetworkfabric/routePolicies/example-routepolicy'}\" --layer2-configuration \"{interfaces:['resourceId'],mtu:1500}\" --option-b-layer3-configuration \"{peerASN:28,vlanId:501,primaryIpv4Prefix:'172.31.0.0/31',secondaryIpv4Prefix:'172.31.0.20/31'}\"",
                "az networkfabric nni update --layer2-configuration \"??\""
            ]
        },
        {
            "name": "az networkfabric nni wait",
            "summary": "Place the CLI in a waiting state until a condition is met.",
            "syntax": "az networkfabric nni wait [--created]\n                          [--custom]\n                          [--deleted]\n                          [--exists]\n                          [--fabric]\n                          [--ids]\n                          [--interval]\n                          [--resource-group]\n                          [--resource-name]\n                          [--subscription]\n                          [--timeout]\n                          [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--fabric --fabric-name",
                "--ids",
                "--interval",
                "--resource-group -g",
                "--resource-name",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": []
        }
    ]
}