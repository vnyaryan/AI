{
    "command_group": "az synapse sql audit-policy",
    "description": "Manage SQL auditing policy.",
    "status": "GA",
    "commands": [
        {
            "name": "az synapse sql audit-policy show",
            "summary": "Get a SQL's auditing policy.",
            "syntax": "az synapse sql audit-policy show --resource-group\n                                 --workspace-name",
            "required_parameters": [
                "--resource-group -g",
                "--workspace-name"
            ],
            "optional_parameters": [],
            "examples": [
                "az synapse sql audit-policy show --workspace-name testsynapseworkspace --resource-group rg"
            ]
        },
        {
            "name": "az synapse sql audit-policy update",
            "summary": "Update a SQL's auditing policy.",
            "syntax": "az synapse sql audit-policy update --resource-group\n                                   --workspace-name\n                                   [--actions]\n                                   [--add]\n                                   [--blob-auditing-policy-name]\n                                   [--blob-storage-target-state {Disabled, Enabled}]\n                                   [--eh]\n                                   [--ehari]\n                                   [--ehts {Disabled, Enabled}]\n                                   [--enable-azure-monitor {false, true}]\n                                   [--force-string]\n                                   [--lats {Disabled, Enabled}]\n                                   [--lawri]\n                                   [--no-wait]\n                                   [--queue-delay-milliseconds]\n                                   [--remove]\n                                   [--retention-days]\n                                   [--set]\n                                   [--state {Disabled, Enabled}]\n                                   [--storage-account]\n                                   [--storage-endpoint]\n                                   [--storage-key]\n                                   [--storage-subscription]\n                                   [--use-secondary-key {false, true}]",
            "required_parameters": [
                "--resource-group -g",
                "--workspace-name"
            ],
            "optional_parameters": [
                "--actions",
                "--add",
                "--blob-auditing-policy-name",
                "--blob-storage-target-state --bsts",
                "--eh --event-hub",
                "--ehari --event-hub-authorization-rule-id",
                "--ehts --event-hub-target-state",
                "--enable-azure-monitor",
                "--force-string",
                "--lats --log-analytics-target-state",
                "--lawri --log-analytics-workspace-resource-id",
                "--no-wait",
                "--queue-delay-milliseconds --queue-delay-time",
                "--remove",
                "--retention-days",
                "--set",
                "--state",
                "--storage-account",
                "--storage-endpoint",
                "--storage-key",
                "--storage-subscription",
                "--use-secondary-key"
            ],
            "examples": [
                "az synapse sql audit-policy update --workspace-name testsynapseworkspace --resource-group rg --state Enabled \\\n    --blob-storage-target-state Enabled --storage-account mystorage",
                "az synapse sql audit-policy update --workspace-name testsynapseworkspace --resource-group rg --state Enabled \\\n    --blob-storage-target-state Enabled --storage-endpoint https://mystorage.blob.core.windows.net \\\n    --storage-key MYKEY==",
                "az synapse sql audit-policy update --workspace-name testsynapseworkspace --resource-group rg \\\n--actions SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP 'UPDATE on database::mydb by public'",
                "az synapse sql audit-policy update --workspace-name testsynapseworkspace --resource-group rg \\\n--state Disabled",
                "az synapse sql audit-policy update --workspace-name testsynapseworkspace --resource-group rg \\\n--blob-storage-target-state Disabled",
                "az synapse sql audit-policy update --resource-group mygroup --workspace-name myws --state Enabled \\\n    --log-analytics-target-state Enabled --log-analytics-workspace-resource-id myworkspaceresourceid",
                "az synapse sql audit-policy update --resource-group mygroup --workspace-name myws --state Enabled\n    --log-analytics-target-state Disabled",
                "az synapse sql audit-policy update --resource-group mygroup --workspace-name myws --state Enabled \\\n    --event-hub-target-state Enabled \\\n    --event-hub-authorization-rule-id eventhubauthorizationruleid \\\n    --event-hub eventhubname",
                "az synapse sql audit-policy update --resource-group mygroup --workspace-name myws --state Enabled \\\n    --event-hub-target-state Enabled \\\n    --event-hub-authorization-rule-id eventhubauthorizationruleid",
                "az synapse sql audit-policy update --resource-group mygroup --workspace-name myws\n   --state Enabled --event-hub-target-state Disabled"
            ]
        },
        {
            "name": "az synapse sql audit-policy wait",
            "summary": "Place the CLI in a waiting state until a condition is met.",
            "syntax": "az synapse sql audit-policy wait --blob-auditing-policy-name\n                                 --resource-group\n                                 --workspace-name\n                                 [--created]\n                                 [--custom]\n                                 [--deleted]\n                                 [--exists]\n                                 [--interval]\n                                 [--timeout]\n                                 [--updated]",
            "required_parameters": [
                "--blob-auditing-policy-name",
                "--resource-group -g",
                "--workspace-name"
            ],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--interval",
                "--timeout",
                "--updated"
            ],
            "examples": []
        }
    ]
}