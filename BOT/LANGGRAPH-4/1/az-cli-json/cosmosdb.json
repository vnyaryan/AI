{
    "command_group": "az cosmosdb",
    "description": "Manage Azure Cosmos DB database accounts.",
    "status": "GA",
    "commands": [
        {
            "name": "az cosmosdb check-name-exists",
            "summary": "Checks if an Azure Cosmos DB account name exists.",
            "syntax": "az cosmosdb check-name-exists [--ids]\n                              [--name]\n                              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--subscription"
            ],
            "examples": [
                "az cosmosdb check-name-exists --name MyCosmosDBDatabaseAccount"
            ]
        },
        {
            "name": "az cosmosdb create",
            "summary": "Creates a new Azure Cosmos DB database account.",
            "syntax": "az cosmosdb create --name\n                   --resource-group\n                   [--analytical-storage-schema-type {FullFidelity, WellDefined}]\n                   [--assign-identity]\n                   [--backup-interval]\n                   [--backup-policy-type {Continuous, Periodic}]\n                   [--backup-redundancy {Geo, Local, Zone}]\n                   [--backup-retention]\n                   [--capabilities]\n                   [--continuous-tier {Continuous30Days, Continuous7Days}]\n                   [--databases-to-restore]\n                   [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]\n                   [--default-identity]\n                   [--disable-key-based-metadata-write-access {false, true}]\n                   [--enable-analytical-storage {false, true}]\n                   [--enable-automatic-failover {false, true}]\n                   [--enable-burst-capacity {false, true}]\n                   [--enable-free-tier {false, true}]\n                   [--enable-multiple-write-locations {false, true}]\n                   [--enable-partition-merge {false, true}]\n                   [--enable-prpp-autoscale {false, true}]\n                   [--enable-virtual-network {false, true}]\n                   [--gremlin-databases-to-restore]\n                   [--ip-range-filter]\n                   [--is-restore-request {false, true}]\n                   [--key-uri]\n                   [--kind {GlobalDocumentDB, MongoDB, Parse}]\n                   [--locations]\n                   [--max-interval]\n                   [--max-staleness-prefix]\n                   [--minimal-tls-version {Tls, Tls11, Tls12}]\n                   [--network-acl-bypass {AzureServices, None}]\n                   [--network-acl-bypass-resource-ids]\n                   [--public-network-access {DISABLED, ENABLED, SECUREDBYPERIMETER}]\n                   [--restore-source]\n                   [--restore-timestamp]\n                   [--server-version {3.2, 3.6, 4.0, 4.2, 5.0, 6.0, 7.0}]\n                   [--tables-to-restore]\n                   [--tags]\n                   [--virtual-network-rules]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--analytical-storage-schema-type --as-schema",
                "--assign-identity",
                "--backup-interval",
                "--backup-policy-type",
                "--backup-redundancy",
                "--backup-retention",
                "--capabilities",
                "--continuous-tier",
                "--databases-to-restore",
                "--default-consistency-level",
                "--default-identity",
                "--disable-key-based-metadata-write-access",
                "--enable-analytical-storage",
                "--enable-automatic-failover",
                "--enable-burst-capacity",
                "--enable-free-tier",
                "--enable-multiple-write-locations",
                "--enable-partition-merge",
                "--enable-prpp-autoscale",
                "--enable-virtual-network",
                "--gremlin-databases-to-restore",
                "--ip-range-filter",
                "--is-restore-request -r",
                "--key-uri",
                "--kind",
                "--locations",
                "--max-interval",
                "--max-staleness-prefix",
                "--minimal-tls-version",
                "--network-acl-bypass",
                "--network-acl-bypass-resource-ids -i",
                "--public-network-access -p",
                "--restore-source",
                "--restore-timestamp",
                "--server-version",
                "--tables-to-restore",
                "--tags",
                "--virtual-network-rules"
            ],
            "examples": [
                "az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription",
                "az cosmosdb create -n myaccount -g mygroup --locations regionName=eastus failoverPriority=0 isZoneRedundant=False --locations regionName=uksouth failoverPriority=1 isZoneRedundant=True --enable-multiple-write-locations --network-acl-bypass AzureServices --network-acl-bypass-resource-ids /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Synapse/workspaces/wsName",
                "az cosmosdb create -n restoredaccount -g mygroup --is-restore-request true --restore-source /subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d056a4f8-044a-436f-80c8-cd3edbc94c68 --restore-timestamp 2020-07-13T16:03:41+0000 --locations regionName=westus failoverPriority=0 isZoneRedundant=False"
            ]
        },
        {
            "name": "az cosmosdb create",
            "summary": "Creates a new Azure Cosmos DB database account.",
            "syntax": "az cosmosdb create --name\n                   --resource-group\n                   [--analytical-storage-schema-type {FullFidelity, WellDefined}]\n                   [--assign-identity]\n                   [--backup-interval]\n                   [--backup-policy-type {Continuous, Periodic}]\n                   [--backup-redundancy {Geo, Local, Zone}]\n                   [--backup-retention]\n                   [--capabilities]\n                   [--capacity-mode {None, Provisioned, Serverless}]\n                   [--continuous-tier {Continuous30Days, Continuous7Days}]\n                   [--databases-to-restore]\n                   [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]\n                   [--default-identity]\n                   [--default-priority-level {High, Low}]\n                   [--disable-key-based-metadata-write-access {false, true}]\n                   [--enable-analytical-storage {false, true}]\n                   [--enable-automatic-failover {false, true}]\n                   [--enable-burst-capacity {false, true}]\n                   [--enable-free-tier {false, true}]\n                   [--enable-materialized-views {false, true}]\n                   [--enable-multiple-write-locations {false, true}]\n                   [--enable-partition-merge {false, true}]\n                   [--enable-pbe {false, true}]\n                   [--enable-prpp-autoscale {false, true}]\n                   [--enable-virtual-network {false, true}]\n                   [--gremlin-databases-to-restore]\n                   [--ip-range-filter]\n                   [--is-restore-request {false, true}]\n                   [--key-uri]\n                   [--kind {GlobalDocumentDB, MongoDB, Parse}]\n                   [--locations]\n                   [--max-interval]\n                   [--max-staleness-prefix]\n                   [--network-acl-bypass {AzureServices, None}]\n                   [--network-acl-bypass-resource-ids]\n                   [--public-network-access {DISABLED, ENABLED, SECUREDBYPERIMETER}]\n                   [--restore-source]\n                   [--restore-timestamp]\n                   [--server-version {3.2, 3.6, 4.0, 4.2, 5.0, 6.0, 7.0}]\n                   [--tables-to-restore]\n                   [--tags]\n                   [--virtual-network-rules]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--analytical-storage-schema-type --as-schema",
                "--assign-identity",
                "--backup-interval",
                "--backup-policy-type",
                "--backup-redundancy",
                "--backup-retention",
                "--capabilities",
                "--capacity-mode",
                "--continuous-tier",
                "--databases-to-restore",
                "--default-consistency-level",
                "--default-identity",
                "--default-priority-level",
                "--disable-key-based-metadata-write-access",
                "--enable-analytical-storage",
                "--enable-automatic-failover",
                "--enable-burst-capacity",
                "--enable-free-tier",
                "--enable-materialized-views --enable-mv",
                "--enable-multiple-write-locations",
                "--enable-partition-merge",
                "--enable-pbe --enable-priority-based-execution",
                "--enable-prpp-autoscale",
                "--enable-virtual-network",
                "--gremlin-databases-to-restore",
                "--ip-range-filter",
                "--is-restore-request -r",
                "--key-uri",
                "--kind",
                "--locations",
                "--max-interval",
                "--max-staleness-prefix",
                "--network-acl-bypass",
                "--network-acl-bypass-resource-ids -i",
                "--public-network-access -p",
                "--restore-source",
                "--restore-timestamp",
                "--server-version",
                "--tables-to-restore",
                "--tags",
                "--virtual-network-rules"
            ],
            "examples": [
                "az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription",
                "az cosmosdb create -n myaccount -g mygroup --locations regionName=eastus failoverPriority=0 isZoneRedundant=False --locations regionName=uksouth failoverPriority=1 isZoneRedundant=True --enable-multiple-write-locations --network-acl-bypass AzureServices --network-acl-bypass-resource-ids /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Synapse/workspaces/wsName",
                "az cosmosdb create -n restoredaccount -g mygroup --is-restore-request true --restore-source /subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d056a4f8-044a-436f-80c8-cd3edbc94c68 --restore-timestamp 2020-07-13T16:03:41+0000 --locations regionName=westus failoverPriority=0 isZoneRedundant=False",
                "az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --enable-materialized-views true --capabilities EnableCassandra CassandraEnableMaterializedViews"
            ]
        },
        {
            "name": "az cosmosdb delete",
            "summary": "Deletes an Azure Cosmos DB database account.",
            "syntax": "az cosmosdb delete [--ids]\n                   [--name]\n                   [--no-wait]\n                   [--resource-group]\n                   [--subscription]\n                   [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az cosmosdb delete --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup",
                "az cosmosdb delete --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --no-wait"
            ]
        },
        {
            "name": "az cosmosdb failover-priority-change",
            "summary": "Changes the failover priority for the Azure Cosmos DB database account.",
            "syntax": "az cosmosdb failover-priority-change --failover-policies\n                                     [--ids]\n                                     [--name]\n                                     [--resource-group]\n                                     [--subscription]",
            "required_parameters": [
                "--failover-policies"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az cosmosdb failover-priority-change --failover-policies southafricanorth=0 westus=8 northeurope=3 --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az cosmosdb list",
            "summary": "List Azure Cosmos DB database accounts.",
            "syntax": "az cosmosdb list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": []
        },
        {
            "name": "az cosmosdb list",
            "summary": "List Azure Cosmos DB database accounts.",
            "syntax": "az cosmosdb list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": []
        },
        {
            "name": "az cosmosdb restore",
            "summary": "Create a new Azure Cosmos DB database account by restoring from an existing database account.",
            "syntax": "az cosmosdb restore --account-name\n                    --location\n                    --resource-group\n                    --restore-timestamp\n                    --target-database-account-name\n                    [--assign-identity]\n                    [--databases-to-restore]\n                    [--default-identity]\n                    [--disable-ttl {false, true}]\n                    [--gremlin-databases-to-restore]\n                    [--public-network-access {DISABLED, ENABLED}]\n                    [--tables-to-restore]",
            "required_parameters": [
                "--account-name -a",
                "--location -l",
                "--resource-group -g",
                "--restore-timestamp -t",
                "--target-database-account-name -n"
            ],
            "optional_parameters": [
                "--assign-identity",
                "--databases-to-restore",
                "--default-identity",
                "--disable-ttl -d",
                "--gremlin-databases-to-restore",
                "--public-network-access -p",
                "--tables-to-restore"
            ],
            "examples": [
                "az cosmosdb restore --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 -g MyResourceGroup --location westus",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --databases-to-restore name=MyDB1 collections=collection1 collection2 --databases-to-restore name=MyDB2 collections=collection3 collection4",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --gremlin-databases-to-restore name=graphdb1 graphs=graph1 graph2",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --tables-to-restore table1,table2",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --disable-ttl True"
            ]
        },
        {
            "name": "az cosmosdb restore",
            "summary": "Create a new Azure Cosmos DB database account by restoring from an existing database account.",
            "syntax": "az cosmosdb restore --account-name\n                    --location\n                    --resource-group\n                    --restore-timestamp\n                    --target-database-account-name\n                    [--assign-identity]\n                    [--databases-to-restore]\n                    [--default-identity]\n                    [--disable-ttl {false, true}]\n                    [--gremlin-databases-to-restore]\n                    [--public-network-access {DISABLED, ENABLED}]\n                    [--source-backup-location]\n                    [--tables-to-restore]",
            "required_parameters": [
                "--account-name -a",
                "--location -l",
                "--resource-group -g",
                "--restore-timestamp -t",
                "--target-database-account-name -n"
            ],
            "optional_parameters": [
                "--assign-identity",
                "--databases-to-restore",
                "--default-identity",
                "--disable-ttl",
                "--gremlin-databases-to-restore",
                "--public-network-access -p",
                "--source-backup-location",
                "--tables-to-restore"
            ],
            "examples": [
                "az cosmosdb restore --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 -g MyResourceGroup --location westus",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --databases-to-restore name=MyDB1 collections=collection1 collection2 --databases-to-restore name=MyDB2 collections=collection3 collection4",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --gremlin-databases-to-restore name=graphdb1 graphs=graph1 graph2",
                "az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --tables-to-restore table1,table2"
            ]
        },
        {
            "name": "az cosmosdb show",
            "summary": "Get the details of an Azure Cosmos DB database account.",
            "syntax": "az cosmosdb show [--ids]\n                 [--name]\n                 [--resource-group]\n                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az cosmosdb show --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az cosmosdb show",
            "summary": "Get the details of an Azure Cosmos DB database account.",
            "syntax": "az cosmosdb show [--ids]\n                 [--name]\n                 [--resource-group]\n                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az cosmosdb show --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az cosmosdb update",
            "summary": "Update an Azure Cosmos DB database account.",
            "syntax": "az cosmosdb update [--analytical-storage-schema-type {FullFidelity, WellDefined}]\n                   [--backup-interval]\n                   [--backup-policy-type {Continuous, Periodic}]\n                   [--backup-redundancy {Geo, Local, Zone}]\n                   [--backup-retention]\n                   [--capabilities]\n                   [--continuous-tier {Continuous30Days, Continuous7Days}]\n                   [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]\n                   [--default-identity]\n                   [--disable-key-based-metadata-write-access {false, true}]\n                   [--enable-analytical-storage {false, true}]\n                   [--enable-automatic-failover {false, true}]\n                   [--enable-burst-capacity {false, true}]\n                   [--enable-multiple-write-locations {false, true}]\n                   [--enable-partition-merge {false, true}]\n                   [--enable-prpp-autoscale {false, true}]\n                   [--enable-virtual-network {false, true}]\n                   [--ids]\n                   [--ip-range-filter]\n                   [--key-uri]\n                   [--locations]\n                   [--max-interval]\n                   [--max-staleness-prefix]\n                   [--minimal-tls-version {Tls, Tls11, Tls12}]\n                   [--name]\n                   [--network-acl-bypass {AzureServices, None}]\n                   [--network-acl-bypass-resource-ids]\n                   [--public-network-access {DISABLED, ENABLED, SECUREDBYPERIMETER}]\n                   [--resource-group]\n                   [--server-version {3.2, 3.6, 4.0, 4.2, 5.0, 6.0, 7.0}]\n                   [--subscription]\n                   [--tags]\n                   [--virtual-network-rules]",
            "required_parameters": [],
            "optional_parameters": [
                "--analytical-storage-schema-type --as-schema",
                "--backup-interval",
                "--backup-policy-type",
                "--backup-redundancy",
                "--backup-retention",
                "--capabilities",
                "--continuous-tier",
                "--default-consistency-level",
                "--default-identity",
                "--disable-key-based-metadata-write-access",
                "--enable-analytical-storage",
                "--enable-automatic-failover",
                "--enable-burst-capacity",
                "--enable-multiple-write-locations",
                "--enable-partition-merge",
                "--enable-prpp-autoscale",
                "--enable-virtual-network",
                "--ids",
                "--ip-range-filter",
                "--key-uri",
                "--locations",
                "--max-interval",
                "--max-staleness-prefix",
                "--minimal-tls-version",
                "--name -n",
                "--network-acl-bypass",
                "--network-acl-bypass-resource-ids -i",
                "--public-network-access -p",
                "--resource-group -g",
                "--server-version",
                "--subscription",
                "--tags",
                "--virtual-network-rules"
            ],
            "examples": [
                "az cosmosdb update --capabilities EnableGremlin --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup",
                "az cosmosdb update -n myaccount -g mygroup --locations regionName=eastus failoverPriority=0 isZoneRedundant=False --locations regionName=uksouth failoverPriority=1 isZoneRedundant=True --enable-multiple-write-locations --network-acl-bypass AzureServices --network-acl-bypass-resource-ids /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Synapse/workspaces/wsName"
            ]
        },
        {
            "name": "az cosmosdb update",
            "summary": "Update an Azure Cosmos DB database account.",
            "syntax": "az cosmosdb update [--analytical-storage-schema-type {FullFidelity, WellDefined}]\n                   [--backup-interval]\n                   [--backup-policy-type {Continuous, Periodic}]\n                   [--backup-redundancy {Geo, Local, Zone}]\n                   [--backup-retention]\n                   [--capabilities]\n                   [--capacity-mode {None, Provisioned, Serverless}]\n                   [--continuous-tier {Continuous30Days, Continuous7Days}]\n                   [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]\n                   [--default-identity]\n                   [--default-priority-level {High, Low}]\n                   [--disable-key-based-metadata-write-access {false, true}]\n                   [--enable-analytical-storage {false, true}]\n                   [--enable-automatic-failover {false, true}]\n                   [--enable-burst-capacity {false, true}]\n                   [--enable-materialized-views {false, true}]\n                   [--enable-multiple-write-locations {false, true}]\n                   [--enable-partition-merge {false, true}]\n                   [--enable-pbe {false, true}]\n                   [--enable-prpp-autoscale {false, true}]\n                   [--enable-virtual-network {false, true}]\n                   [--ids]\n                   [--ip-range-filter]\n                   [--locations]\n                   [--max-interval]\n                   [--max-staleness-prefix]\n                   [--name]\n                   [--network-acl-bypass {AzureServices, None}]\n                   [--network-acl-bypass-resource-ids]\n                   [--public-network-access {DISABLED, ENABLED, SECUREDBYPERIMETER}]\n                   [--resource-group]\n                   [--server-version {3.2, 3.6, 4.0, 4.2, 5.0, 6.0, 7.0}]\n                   [--subscription]\n                   [--tags]\n                   [--virtual-network-rules]",
            "required_parameters": [],
            "optional_parameters": [
                "--analytical-storage-schema-type --as-schema",
                "--backup-interval",
                "--backup-policy-type",
                "--backup-redundancy",
                "--backup-retention",
                "--capabilities",
                "--capacity-mode",
                "--continuous-tier",
                "--default-consistency-level",
                "--default-identity",
                "--default-priority-level",
                "--disable-key-based-metadata-write-access",
                "--enable-analytical-storage",
                "--enable-automatic-failover",
                "--enable-burst-capacity",
                "--enable-materialized-views --enable-mv",
                "--enable-multiple-write-locations",
                "--enable-partition-merge",
                "--enable-pbe --enable-priority-based-execution",
                "--enable-prpp-autoscale",
                "--enable-virtual-network",
                "--ids",
                "--ip-range-filter",
                "--locations",
                "--max-interval",
                "--max-staleness-prefix",
                "--name -n",
                "--network-acl-bypass",
                "--network-acl-bypass-resource-ids -i",
                "--public-network-access -p",
                "--resource-group -g",
                "--server-version",
                "--subscription",
                "--tags",
                "--virtual-network-rules"
            ],
            "examples": [
                "az cosmosdb update --capabilities EnableGremlin --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup",
                "az cosmosdb update --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --enable-materialized-views true"
            ]
        }
    ]
}