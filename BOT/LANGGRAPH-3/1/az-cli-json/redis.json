{
    "command_group": "az redis",
    "description": "Manage dedicated Redis caches for your Azure applications.",
    "status": "GA",
    "commands": [
        {
            "name": "az redis create",
            "summary": "Create new Redis Cache instance.",
            "syntax": "az redis create --location\n                --name\n                --resource-group\n                --sku {Basic, Premium, Standard}\n                --vm-size {c0, c1, c2, c3, c4, c5, c6, p1, p2, p3, p4, p5}\n                [--disable-access-keys {false, true}]\n                [--enable-non-ssl-port]\n                [--mi-system-assigned]\n                [--mi-user-assigned]\n                [--minimum-tls-version {1.0, 1.1, 1.2}]\n                [--redis-configuration]\n                [--redis-version]\n                [--replicas-per-master]\n                [--shard-count]\n                [--static-ip]\n                [--subnet-id]\n                [--tags]\n                [--tenant-settings]\n                [--update-channel {Preview, Stable}]\n                [--zonal-allocation {Automatic, NoZones, UserDefined}]\n                [--zones]",
            "required_parameters": [
                "--location -l",
                "--name -n",
                "--resource-group -g",
                "--sku",
                "--vm-size"
            ],
            "optional_parameters": [
                "--disable-access-keys",
                "--enable-non-ssl-port",
                "--mi-system-assigned",
                "--mi-user-assigned",
                "--minimum-tls-version",
                "--redis-configuration",
                "--redis-version",
                "--replicas-per-master",
                "--shard-count",
                "--static-ip",
                "--subnet-id",
                "--tags",
                "--tenant-settings",
                "--update-channel",
                "--zonal-allocation --zonal-allocation-policy",
                "--zones -z"
            ],
            "examples": [
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Basic --vm-size c0",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --zones 1 2",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --zonal-allocation-policy Automatic",
                "az redis create --resource-group resourceGroupName --name cacheName --location westus2 --sku Standard --vm-size c0 --redis-configuration @\"config_max-memory.json\"",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --redis-configuration @\"config_rdb.json\"",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --redis-configuration @\"config_aof.json\"",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --shard-count 2",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --subnet-id \"/subscriptions/{subid}/resourceGroups/{resourceGroupName}/providers/Microsoft.{Network|ClassicNetwork}/virtualNetworks/vnet1/subnets/subnet1\"",
                "az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Premium --vm-size p1 --disable-access-keys true --redis-configuration @\"config_enable-aad.json\""
            ]
        },
        {
            "name": "az redis delete",
            "summary": "Deletes a Redis cache.",
            "syntax": "az redis delete [--ids]\n                [--name]\n                [--resource-group]\n                [--subscription]\n                [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": []
        },
        {
            "name": "az redis export",
            "summary": "Export data stored in a Redis cache.",
            "syntax": "az redis export --container\n                --prefix\n                [--auth-method {ManagedIdentity, SAS}]\n                [--file-format]\n                [--ids]\n                [--name]\n                [--resource-group]\n                [--storage-sub-id]\n                [--subscription]",
            "required_parameters": [
                "--container",
                "--prefix"
            ],
            "optional_parameters": [
                "--auth-method --preferred-data-archive-auth-method",
                "--file-format",
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--storage-sub-id --storage-subscription-id",
                "--subscription"
            ],
            "examples": [
                "az redis export -n testCacheName -g testResourceGroup --prefix examplePrefix --container containerUrl  --preferred-data-archive-auth-method ManagedIdentity --storage-subscription-id 1a6574ss-ddad-1111-a111-8d756312d1dd"
            ]
        },
        {
            "name": "az redis flush",
            "summary": "Delete all of the keys in a cache.",
            "syntax": "az redis flush [--ids]\n               [--name]\n               [--resource-group]\n               [--subscription]\n               [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": []
        },
        {
            "name": "az redis force-reboot",
            "summary": "Reboot specified Redis node(s).",
            "syntax": "az redis force-reboot --reboot-type {AllNodes, PrimaryNode, SecondaryNode}\n                      [--ids]\n                      [--name]\n                      [--resource-group]\n                      [--shard-id]\n                      [--subscription]",
            "required_parameters": [
                "--reboot-type"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--shard-id",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az redis import",
            "summary": "Import data into a Redis cache.",
            "syntax": "az redis import --files\n                [--auth-method {ManagedIdentity, SAS}]\n                [--file-format]\n                [--ids]\n                [--name]\n                [--resource-group]\n                [--storage-sub-id]\n                [--subscription]",
            "required_parameters": [
                "--files"
            ],
            "optional_parameters": [
                "--auth-method --preferred-data-archive-auth-method",
                "--file-format",
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--storage-sub-id --storage-subscription-id",
                "--subscription"
            ],
            "examples": [
                "az redis import -n testCacheName -g testResourceGroup --files blobUrl --preferred-data-archive-auth-method ManagedIdentity --storage-subscription-id 1a6574ss-ddad-1111-a111-8d756312d1dd"
            ]
        },
        {
            "name": "az redis list",
            "summary": "List Redis Caches.",
            "syntax": "az redis list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": []
        },
        {
            "name": "az redis list-keys",
            "summary": "Retrieve a Redis cache's access keys.",
            "syntax": "az redis list-keys [--ids]\n                   [--name]\n                   [--resource-group]\n                   [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az redis regenerate-keys",
            "summary": "Regenerate Redis cache's access keys.",
            "syntax": "az redis regenerate-keys --key-type {Primary, Secondary}\n                         [--ids]\n                         [--name]\n                         [--resource-group]\n                         [--subscription]",
            "required_parameters": [
                "--key-type"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az redis show",
            "summary": "Gets a Redis cache (resource description).",
            "syntax": "az redis show [--ids]\n              [--name]\n              [--resource-group]\n              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az redis update",
            "summary": "Update a Redis cache.",
            "syntax": "az redis update [--add]\n                [--force-string]\n                [--ids]\n                [--name]\n                [--remove]\n                [--resource-group]\n                [--set]\n                [--sku {Basic, Premium, Standard}]\n                [--subscription]\n                [--vm-size {c0, c1, c2, c3, c4, c5, c6, p1, p2, p3, p4, p5}]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--force-string",
                "--ids",
                "--name -n",
                "--remove",
                "--resource-group -g",
                "--set",
                "--sku",
                "--subscription",
                "--vm-size"
            ],
            "examples": [
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"redisConfiguration.maxmemory-policy\"=\"allkeys-lru\"",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"redisConfiguration.rdb-backup-enabled\"=\"false\"",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"redisConfiguration.rdb-storage-connection-string\"=\"BlobEndpoint=https//...\" \"redisConfiguration.rdb-backup-enabled\"=\"true\" \"redisConfiguration.rdb-backup-frequency\"=\"15\" \"redisConfiguration.rdb-backup-max-snapshot-count\"=\"1\"",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"sku.capacity\"=\"2\"",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"sku.name\"=\"Premium\" \"sku.capacity\"=\"1\" \"sku.family\"=\"P\"",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set shardCount=1",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set shardCount=2",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"disableAccessKeyAuthentication=true\"",
                "az redis update --name MyRedisCache --resource-group MyResourceGroup --set \"zonalAllocationPolicy=Automatic\""
            ]
        }
    ]
}