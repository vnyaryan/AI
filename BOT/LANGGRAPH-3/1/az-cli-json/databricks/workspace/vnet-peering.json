{
    "command_group": "az databricks workspace vnet-peering",
    "description": "Commands to manage databricks workspace vnet peering.",
    "status": "GA",
    "commands": [
        {
            "name": "az databricks workspace vnet-peering create",
            "summary": "Create a vnet peering for a workspace.",
            "syntax": "az databricks workspace vnet-peering create --name\n                                            --resource-group\n                                            --workspace-name\n                                            [--allow-forwarded-traffic {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--allow-gateway-transit {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--allow-virtual-network-access {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--remote-vnet]\n                                            [--use-remote-gateways {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--workspace-name"
            ],
            "optional_parameters": [
                "--allow-forwarded-traffic",
                "--allow-gateway-transit",
                "--allow-virtual-network-access",
                "--no-wait",
                "--remote-vnet",
                "--use-remote-gateways"
            ],
            "examples": [
                "az databricks workspace vnet-peering create --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering --remote-vnet /subscriptions/000000-0000-0000/resourceGroups/MyRG/providers/Microsoft.Network/virtualNetworks/MyVNet"
            ]
        },
        {
            "name": "az databricks workspace vnet-peering delete",
            "summary": "Delete the vnet peering.",
            "syntax": "az databricks workspace vnet-peering delete [--ids]\n                                            [--name]\n                                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--resource-group]\n                                            [--subscription]\n                                            [--workspace-name]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--workspace-name"
            ],
            "examples": [
                "az databricks workspace vnet-peering delete --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering"
            ]
        },
        {
            "name": "az databricks workspace vnet-peering list",
            "summary": "List vnet peerings under a workspace.",
            "syntax": "az databricks workspace vnet-peering list --resource-group\n                                          --workspace-name\n                                          [--max-items]\n                                          [--next-token]",
            "required_parameters": [
                "--resource-group -g",
                "--workspace-name"
            ],
            "optional_parameters": [
                "--max-items",
                "--next-token"
            ],
            "examples": [
                "az databricks workspace vnet-peering list --resource-group MyResourceGroup --workspace-name MyWorkspace"
            ]
        },
        {
            "name": "az databricks workspace vnet-peering show",
            "summary": "Show the vnet peering.",
            "syntax": "az databricks workspace vnet-peering show [--ids]\n                                          [--name]\n                                          [--resource-group]\n                                          [--subscription]\n                                          [--workspace-name]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--workspace-name"
            ],
            "examples": [
                "az databricks workspace vnet-peering show --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering"
            ]
        },
        {
            "name": "az databricks workspace vnet-peering update",
            "summary": "Update the vnet peering.",
            "syntax": "az databricks workspace vnet-peering update [--add]\n                                            [--allow-forwarded-traffic {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--allow-gateway-transit {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--allow-virtual-network-access {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--force-string {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--ids]\n                                            [--name]\n                                            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--remove]\n                                            [--resource-group]\n                                            [--set]\n                                            [--subscription]\n                                            [--use-remote-gateways {0, 1, f, false, n, no, t, true, y, yes}]\n                                            [--workspace-name]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--allow-forwarded-traffic",
                "--allow-gateway-transit",
                "--allow-virtual-network-access",
                "--force-string",
                "--ids",
                "--name -n",
                "--no-wait",
                "--remove",
                "--resource-group -g",
                "--set",
                "--subscription",
                "--use-remote-gateways",
                "--workspace-name"
            ],
            "examples": [
                "az databricks workspace vnet-peering update --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering --allow-gateway-transit --allow-virtual-network-access false"
            ]
        },
        {
            "name": "az databricks workspace vnet-peering wait",
            "summary": "Place the CLI in a waiting state until a condition is met.",
            "syntax": "az databricks workspace vnet-peering wait [--created]\n                                          [--custom]\n                                          [--deleted]\n                                          [--exists]\n                                          [--ids]\n                                          [--interval]\n                                          [--name]\n                                          [--resource-group]\n                                          [--subscription]\n                                          [--timeout]\n                                          [--updated]\n                                          [--workspace-name]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--interval",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated",
                "--workspace-name"
            ],
            "examples": []
        }
    ]
}