{
    "command_group": "az functionapp",
    "description": "Manage function apps. To install the Azure Functions Core tools see https://github.com/Azure/azure-functions-core-tools.",
    "status": "GA",
    "commands": [
        {
            "name": "az functionapp create",
            "summary": "Create a function app.",
            "syntax": "az functionapp create --name\n                      --resource-group\n                      --storage-account\n                      [--always-ready-instances]\n                      [--app-insights]\n                      [--app-insights-key]\n                      [--assign-identity]\n                      [--consumption-plan-location]\n                      [--cpu]\n                      [--dal {false, true}]\n                      [--dapr-app-id]\n                      [--dapr-app-port]\n                      [--dapr-http-max-request-size]\n                      [--dapr-http-read-buffer-size]\n                      [--dapr-log-level {debug, error, info, warn}]\n                      [--deployment-container-image-name]\n                      [--deployment-local-git]\n                      [--deployment-source-branch]\n                      [--deployment-source-url]\n                      [--deployment-storage-auth-type {StorageAccountConnectionString, SystemAssignedIdentity, UserAssignedIdentity}]\n                      [--deployment-storage-auth-value]\n                      [--deployment-storage-container-name]\n                      [--deployment-storage-name]\n                      [--disable-app-insights {false, true}]\n                      [--docker-registry-server-password]\n                      [--docker-registry-server-user]\n                      [--enable-dapr {false, true}]\n                      [--environment]\n                      [--flexconsumption-location]\n                      [--functions-version {4}]\n                      [--https-only {false, true}]\n                      [--image]\n                      [--instance-memory]\n                      [--max-replicas]\n                      [--maximum-instance-count]\n                      [--memory]\n                      [--min-replicas]\n                      [--os-type {Linux, Windows}]\n                      [--plan]\n                      [--registry-password]\n                      [--registry-server]\n                      [--registry-username]\n                      [--role]\n                      [--runtime]\n                      [--runtime-version]\n                      [--scope]\n                      [--subnet]\n                      [--tags]\n                      [--vnet]\n                      [--workload-profile-name]\n                      [--workspace]\n                      [--zone-redundant {false, true}]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g",
                "--storage-account -s"
            ],
            "optional_parameters": [
                "--always-ready-instances",
                "--app-insights",
                "--app-insights-key",
                "--assign-identity",
                "--consumption-plan-location -c",
                "--cpu",
                "--dal --dapr-enable-api-logging",
                "--dapr-app-id",
                "--dapr-app-port",
                "--dapr-http-max-request-size --dhmrs",
                "--dapr-http-read-buffer-size --dhrbs",
                "--dapr-log-level",
                "--deployment-container-image-name",
                "--deployment-local-git -l",
                "--deployment-source-branch -b",
                "--deployment-source-url -u",
                "--deployment-storage-auth-type --dsat",
                "--deployment-storage-auth-value --dsav",
                "--deployment-storage-container-name --dscn",
                "--deployment-storage-name --dsn",
                "--disable-app-insights",
                "--docker-registry-server-password",
                "--docker-registry-server-user",
                "--enable-dapr",
                "--environment",
                "--flexconsumption-location -f",
                "--functions-version",
                "--https-only",
                "--image -i",
                "--instance-memory",
                "--max-replicas",
                "--maximum-instance-count",
                "--memory",
                "--min-replicas",
                "--os-type",
                "--plan -p",
                "--registry-password -w",
                "--registry-server",
                "--registry-username -d",
                "--role",
                "--runtime",
                "--runtime-version",
                "--scope",
                "--subnet",
                "--tags",
                "--vnet",
                "--workload-profile-name",
                "--workspace",
                "--zone-redundant"
            ],
            "examples": [
                "az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount",
                "az functionapp create --consumption-plan-location westus --name MyUniqueAppName --os-type Windows --resource-group MyResourceGroup --runtime dotnet-isolated --storage-account MyStorageAccount",
                "az functionapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime node --storage-account MyStorageAccount --deployment-container-image-name myacr.azurecr.io/myimage:tag --docker-registry-server-password passw0rd --docker-registry-server-user MyUser",
                "az functionapp create -g MyResourceGroup --name MyUniqueAppName -s MyStorageAccount --flexconsumption-location northeurope --runtime java --instance-memory 2048"
            ]
        },
        {
            "name": "az functionapp create",
            "summary": "Create a function app.",
            "syntax": "az functionapp create --name\n                      --resource-group\n                      [--app-insights]\n                      [--app-insights-key]\n                      [--assign-identity]\n                      [--consumption-plan-location]\n                      [--custom-location]\n                      [--deployment-container-image-name]\n                      [--deployment-local-git]\n                      [--deployment-source-branch]\n                      [--deployment-source-url]\n                      [--disable-app-insights {false, true}]\n                      [--docker-registry-server-password]\n                      [--docker-registry-server-user]\n                      [--functions-version {4}]\n                      [--max-worker-count]\n                      [--min-worker-count]\n                      [--os-type {Linux, Windows}]\n                      [--plan]\n                      [--role]\n                      [--runtime]\n                      [--runtime-version]\n                      [--scope]\n                      [--storage-account]\n                      [--tags]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--app-insights",
                "--app-insights-key",
                "--assign-identity",
                "--consumption-plan-location -c",
                "--custom-location",
                "--deployment-container-image-name -i",
                "--deployment-local-git -l",
                "--deployment-source-branch -b",
                "--deployment-source-url -u",
                "--disable-app-insights",
                "--docker-registry-server-password",
                "--docker-registry-server-user",
                "--functions-version",
                "--max-worker-count",
                "--min-worker-count",
                "--os-type",
                "--plan -p",
                "--role",
                "--runtime",
                "--runtime-version",
                "--scope",
                "--storage-account -s",
                "--tags"
            ],
            "examples": [
                "az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount",
                "az functionapp create --consumption-plan-location westus --name MyUniqueAppName --os-type Windows --resource-group MyResourceGroup --runtime dotnet --storage-account MyStorageAccount",
                "az functionapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime node --storage-account MyStorageAccount --deployment-container-image-name myacr.azurecr.io/myimage:tag --docker-registry-server-password passw0rd --docker-registry-server-user MyUser",
                "az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name",
                "az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount --custom-location custom_location_name"
            ]
        },
        {
            "name": "az functionapp delete",
            "summary": "Delete a function app.",
            "syntax": "az functionapp delete [--ids]\n                      [--keep-empty-plan]\n                      [--name]\n                      [--resource-group]\n                      [--slot]\n                      [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--keep-empty-plan",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp delete --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp deploy",
            "summary": "Deploys a provided artifact to Azure functionapp.",
            "syntax": "az functionapp deploy [--async {false, true}]\n                      [--clean {false, true}]\n                      [--ids]\n                      [--ignore-stack {false, true}]\n                      [--name]\n                      [--resource-group]\n                      [--restart {false, true}]\n                      [--slot]\n                      [--src-path]\n                      [--src-url]\n                      [--subscription]\n                      [--target-path]\n                      [--timeout]\n                      [--type {ear, jar, lib, startup, static, war, zip}]",
            "required_parameters": [],
            "optional_parameters": [
                "--async",
                "--clean",
                "--ids",
                "--ignore-stack",
                "--name -n",
                "--resource-group -g",
                "--restart",
                "--slot -s",
                "--src-path",
                "--src-url",
                "--subscription",
                "--target-path",
                "--timeout",
                "--type"
            ],
            "examples": [
                "az functionapp deploy --resource-group ResourceGroup --name AppName --src-path SourcePath --type war --async true",
                "az functionapp deploy --resource-group ResourceGroup --name AppName --src-path SourcePath --type static --target-path staticfiles/test.txt"
            ]
        },
        {
            "name": "az functionapp list",
            "summary": "List function apps.",
            "syntax": "az functionapp list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az functionapp list --resource-group MyResourceGroup",
                "az functionapp list --query \"[].{hostName: defaultHostName, state: state}\"",
                "az functionapp list --query \"[?state=='Running']\""
            ]
        },
        {
            "name": "az functionapp list-consumption-locations",
            "summary": "List available locations for running function apps.",
            "syntax": "az functionapp list-consumption-locations",
            "required_parameters": [],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az functionapp list-flexconsumption-locations",
            "summary": "List available locations for running function apps on the Flex Consumption plan.",
            "syntax": "az functionapp list-flexconsumption-locations [--zone-redundant {false, true}]",
            "required_parameters": [],
            "optional_parameters": [
                "--zone-redundant"
            ],
            "examples": []
        },
        {
            "name": "az functionapp list-flexconsumption-runtimes",
            "summary": "List available built-in stacks which can be used for function apps on the Flex Consumption plan.",
            "syntax": "az functionapp list-flexconsumption-runtimes --location\n                                             --runtime",
            "required_parameters": [
                "--location -l",
                "--runtime"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az functionapp list-runtimes",
            "summary": "List available built-in stacks which can be used for function apps.",
            "syntax": "az functionapp list-runtimes [--os {linux, windows}]",
            "required_parameters": [],
            "optional_parameters": [
                "--os --os-type"
            ],
            "examples": []
        },
        {
            "name": "az functionapp restart",
            "summary": "Restart a function app.",
            "syntax": "az functionapp restart [--ids]\n                       [--name]\n                       [--resource-group]\n                       [--slot]\n                       [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp restart --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp restart",
            "summary": "Restart a function app.",
            "syntax": "az functionapp restart [--ids]\n                       [--name]\n                       [--resource-group]\n                       [--slot]\n                       [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp restart --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp show",
            "summary": "Get the details of a function app.",
            "syntax": "az functionapp show [--ids]\n                    [--name]\n                    [--resource-group]\n                    [--slot]\n                    [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp show --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp show",
            "summary": "Get the details of a function app.",
            "syntax": "az functionapp show [--ids]\n                    [--name]\n                    [--resource-group]\n                    [--slot]\n                    [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp show --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp start",
            "summary": "Start a function app.",
            "syntax": "az functionapp start [--ids]\n                     [--name]\n                     [--resource-group]\n                     [--slot]\n                     [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp start --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp stop",
            "summary": "Stop a function app.",
            "syntax": "az functionapp stop [--ids]\n                    [--name]\n                    [--resource-group]\n                    [--slot]\n                    [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp stop --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az functionapp update",
            "summary": "Update a function app.",
            "syntax": "az functionapp update [--add]\n                      [--force]\n                      [--force-string]\n                      [--ids]\n                      [--name]\n                      [--plan]\n                      [--remove]\n                      [--resource-group]\n                      [--set]\n                      [--slot]\n                      [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--force",
                "--force-string",
                "--ids",
                "--name -n",
                "--plan",
                "--remove",
                "--resource-group -g",
                "--set",
                "--slot -s",
                "--subscription"
            ],
            "examples": [
                "az functionapp update --name MyFunctionApp --resource-group MyResourceGroup"
            ]
        }
    ]
}