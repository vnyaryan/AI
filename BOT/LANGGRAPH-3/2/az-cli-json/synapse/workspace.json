{
    "command_group": "az synapse workspace",
    "description": "Manage Synapse workspaces.",
    "status": "GA",
    "commands": [
        {
            "name": "az synapse workspace activate",
            "summary": "Activates a workspace and change it's state from pending to success state when the workspace is first being provisioned and double encryption is enabled.",
            "syntax": "az synapse workspace activate --key-identifier\n                              [--ids]\n                              [--name]\n                              [--no-wait]\n                              [--resource-group]\n                              [--subscription]\n                              [--workspace-name]",
            "required_parameters": [
                "--key-identifier"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--workspace-name"
            ],
            "examples": [
                "az synapse workspace activate --name newkey --workspace-name testsynapseworkspace \\\n--resource-group rg --key-identifier https://{keyvaultname}.vault.azure.net/keys/{keyname}"
            ]
        },
        {
            "name": "az synapse workspace check-name",
            "summary": "Check if a Synapse workspace name is available or not.",
            "syntax": "az synapse workspace check-name --name",
            "required_parameters": [
                "--name -n"
            ],
            "optional_parameters": [],
            "examples": [
                "az synapse workspace check-name --name testsynapseworkspace"
            ]
        },
        {
            "name": "az synapse workspace create",
            "summary": "Create a Synapse workspace.",
            "syntax": "az synapse workspace create --file-system\n                            --name\n                            --resource-group\n                            --sql-admin-login-password\n                            --sql-admin-login-user\n                            --storage-account\n                            [--account-name]\n                            [--allowed-tenant-ids]\n                            [--cmk]\n                            [--collaboration-branch]\n                            [--enable-managed-virtual-network {false, true}]\n                            [--host-name]\n                            [--key-name]\n                            [--last-commit-id]\n                            [--location]\n                            [--managed-rg-name]\n                            [--no-wait]\n                            [--prevent-data-exfiltration {false, true}]\n                            [--project-name]\n                            [--repository-name]\n                            [--repository-type {AzureDevOpsGit, GitHub}]\n                            [--root-folder]\n                            [--tags]\n                            [--tenant-id]\n                            [--uami-id]\n                            [--uami-id-in-encrypt]\n                            [--use-sami-in-encrypt]",
            "required_parameters": [
                "--file-system",
                "--name -n",
                "--resource-group -g",
                "--sql-admin-login-password -p",
                "--sql-admin-login-user -u",
                "--storage-account"
            ],
            "optional_parameters": [
                "--account-name",
                "--allowed-tenant-ids",
                "--cmk --key-identifier",
                "--collaboration-branch",
                "--enable-managed-virtual-network --enable-managed-vnet",
                "--host-name",
                "--key-name",
                "--last-commit-id",
                "--location -l",
                "--managed-rg-name",
                "--no-wait",
                "--prevent-data-exfiltration --prevent-exfiltration",
                "--project-name",
                "--repository-name",
                "--repository-type",
                "--root-folder",
                "--tags",
                "--tenant-id",
                "--uami-id",
                "--uami-id-in-encrypt",
                "--use-sami-in-encrypt"
            ],
            "examples": [
                "az synapse workspace create --name testworkspace --resource-group rg \\\n  --storage-account testadlsgen2 --file-system testfilesystem \\\n  --sql-admin-login-user cliuser1 --sql-admin-login-password Password123! --location \"East US\"",
                "az synapse workspace create --name testworkspace --resource-group rg \\\n  --storage-account /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Storage/storageAccounts/testadlsgen2 --file-system testfilesystem \\\n  --sql-admin-login-user cliuser1 --sql-admin-login-password Password123! --location \"East US\"",
                "az synapse workspace create --name testworkspace --resource-group rg \\\n  --storage-account testadlsgen2 --file-system testfilesystem \\\n  --sql-admin-login-user cliuser1 --sql-admin-login-password Password123! --location \"East US\" \\\n  --key-identifier https://{keyvaultname}.vault.azure.net/keys/{keyname} --key-name testcmk \\\n  --use-sami-in-encrypt True",
                "az synapse workspace create --name testworkspace --resource-group rg \\\n  --storage-account testadlsgen2 --file-system testfilesystem \\\n  --sql-admin-login-user cliuser1 --sql-admin-login-password Password123! --location \"East US\" \\\n  --repository-type AzureDevOpsGit --account-name testuser --project-name testprj \\\n  --repository-name testrepo --collaboration-branch main --last-commit-id 000000",
                "az synapse workspace create --name testworkspace --resource-group rg \\\n  --managed-rg-name managedrg \\\n  --storage-account testadlsgen2 --file-system testfilesystem \\\n  --sql-admin-login-user cliuser1 --sql-admin-login-password Password123! --location \"East US\"",
                "az synapse workspace create --name testworkspace --resource-group rg \\\n  --storage-account testadlsgen2 --file-system testfilesystem \\\n  --sql-admin-login-user cliuser1 --sql-admin-login-password Password123! --location \"East US\" \\\n  --uami-id \"{your-first-uami-resourceid}\" \"{your-second-uami-resourceid}\""
            ]
        },
        {
            "name": "az synapse workspace delete",
            "summary": "Delete a Synapse workspace.",
            "syntax": "az synapse workspace delete [--ids]\n                            [--name]\n                            [--no-wait]\n                            [--resource-group]\n                            [--subscription]\n                            [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az synapse workspace delete --name testsynapseworkspace --resource-group rg"
            ]
        },
        {
            "name": "az synapse workspace list",
            "summary": "List all Synapse workspaces.",
            "syntax": "az synapse workspace list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az synapse workspace list",
                "az synapse workspace list --resource-group rg"
            ]
        },
        {
            "name": "az synapse workspace show",
            "summary": "Get a Synapse workspace.",
            "syntax": "az synapse workspace show [--ids]\n                          [--name]\n                          [--resource-group]\n                          [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az synapse workspace show --name testsynapseworkspace --resource-group rg"
            ]
        },
        {
            "name": "az synapse workspace update",
            "summary": "Update a Synapse workspace.",
            "syntax": "az synapse workspace update [--account-name]\n                            [--allowed-tenant-ids]\n                            [--collaboration-branch]\n                            [--host-name]\n                            [--ids]\n                            [--key-name]\n                            [--last-commit-id]\n                            [--name]\n                            [--no-wait]\n                            [--project-name]\n                            [--repository-name]\n                            [--repository-type {AzureDevOpsGit, GitHub}]\n                            [--resource-group]\n                            [--root-folder]\n                            [--sql-admin-login-password]\n                            [--subscription]\n                            [--tags]\n                            [--tenant-id]\n                            [--uami-action {Add, Remove, Set}]\n                            [--uami-id]\n                            [--uami-id-in-encrypt]\n                            [--use-sami-in-encrypt]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-name",
                "--allowed-tenant-ids",
                "--collaboration-branch",
                "--host-name",
                "--ids",
                "--key-name",
                "--last-commit-id",
                "--name -n",
                "--no-wait",
                "--project-name",
                "--repository-name",
                "--repository-type",
                "--resource-group -g",
                "--root-folder",
                "--sql-admin-login-password -p",
                "--subscription",
                "--tags",
                "--tenant-id",
                "--uami-action",
                "--uami-id",
                "--uami-id-in-encrypt",
                "--use-sami-in-encrypt"
            ],
            "examples": [
                "az synapse workspace update --name fromcli4 --resource-group rg \\\n  --tags key1=value1",
                "az synapse workspace update --name fromcli4 --resource-group rg \\\n--uami-action Add --uami-id \"{your-first-uami-resourceid}\" \"{your-second-uami-resourceid}\"",
                "az synapse workspace update --name fromcli4 --resource-group rg \\\n--uami-action Remove --uami-id \"{your-first-uami-resourceid}\" \"{your-second-uami-resourceid}\"",
                "az synapse workspace update --name fromcli4 --resource-group rg \\\n--uami-action Set --uami-id \"{your-first-uami-resourceid}\" \"{your-second-uami-resourceid}\"",
                "az synapse workspace update --name fromcli4 --resource-group rg \\\n--uami-id-in-encrypt \"{your-encrytion-uami-resourceid}\" --use-sami-in-encrypt False"
            ]
        },
        {
            "name": "az synapse workspace wait",
            "summary": "Place the CLI in a waiting state until a condition of the workspace is met.",
            "syntax": "az synapse workspace wait --resource-group\n                          --workspace-name\n                          [--created]\n                          [--custom]\n                          [--deleted]\n                          [--exists]\n                          [--interval]\n                          [--timeout]\n                          [--updated]",
            "required_parameters": [
                "--resource-group -g",
                "--workspace-name"
            ],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--interval",
                "--timeout",
                "--updated"
            ],
            "examples": []
        }
    ]
}