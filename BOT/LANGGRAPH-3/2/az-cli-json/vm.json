{
    "command_group": "az vm",
    "description": "Manage Linux or Windows virtual machines.",
    "status": "GA",
    "commands": [
        {
            "name": "az vm assess-patches",
            "summary": "Assess patches on a VM.",
            "syntax": "az vm assess-patches [--ids]\n                     [--name]\n                     [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                     [--resource-group]\n                     [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm assess-patches -g MyResourceGroup -n MyVm"
            ]
        },
        {
            "name": "az vm auto-shutdown",
            "summary": "Manage auto-shutdown for VM.",
            "syntax": "az vm auto-shutdown [--email]\n                    [--ids]\n                    [--location]\n                    [--name]\n                    [--off]\n                    [--resource-group]\n                    [--subscription]\n                    [--time]\n                    [--webhook]",
            "required_parameters": [],
            "optional_parameters": [
                "--email",
                "--ids",
                "--location -l",
                "--name -n",
                "--off",
                "--resource-group -g",
                "--subscription",
                "--time",
                "--webhook"
            ],
            "examples": [
                "az vm auto-shutdown -g MyResourceGroup -n MyVm --time 1730 --email \"foo@bar.com\" --webhook \"https://example.com/\"",
                "az vm auto-shutdown -g MyResourceGroup -n MyVm --off"
            ]
        },
        {
            "name": "az vm capture",
            "summary": "Capture information for a stopped VM.",
            "syntax": "az vm capture --vhd-name-prefix\n              [--ids]\n              [--name]\n              [--overwrite]\n              [--resource-group]\n              [--storage-container]\n              [--subscription]",
            "required_parameters": [
                "--vhd-name-prefix"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--overwrite",
                "--resource-group -g",
                "--storage-container",
                "--subscription"
            ],
            "examples": [
                "az vm deallocate -g MyResourceGroup -n MyVm\naz vm generalize -g MyResourceGroup -n MyVm\naz vm capture -g MyResourceGroup -n MyVm --vhd-name-prefix MyPrefix",
                "vms_ids=$(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)\naz vm deallocate --ids {vms_ids}\naz vm generalize --ids {vms_ids}\naz vm capture --ids {vms_ids} --vhd-name-prefix MyPrefix"
            ]
        },
        {
            "name": "az vm convert",
            "summary": "Convert a VM with unmanaged disks to use managed disks.",
            "syntax": "az vm convert [--ids]\n              [--name]\n              [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n              [--resource-group]\n              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm convert -g MyResourceGroup -n MyVm",
                "az vm convert --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm create",
            "summary": "Create an Azure Virtual Machine.",
            "syntax": "az vm create --name\n             --resource-group\n             [--accelerated-networking {false, true}]\n             [--accept-term]\n             [--additional-events {false, true}]\n             [--admin-password]\n             [--admin-username]\n             [--asgs]\n             [--assign-identity]\n             [--attach-data-disks]\n             [--attach-os-disk]\n             [--authentication-type {all, password, ssh}]\n             [--availability-set]\n             [--boot-diagnostics-storage]\n             [--capacity-reservation-group]\n             [--computer-name]\n             [--count]\n             [--custom-data]\n             [--data-disk-caching]\n             [--data-disk-delete-option]\n             [--data-disk-encryption-sets]\n             [--data-disk-sizes-gb]\n             [--disable-integrity-monitoring-autoupgrade]\n             [--disk-controller-type {NVMe, SCSI}]\n             [--edge-zone]\n             [--enable-agent {false, true}]\n             [--enable-auto-update {false, true}]\n             [--enable-hibernation {false, true}]\n             [--enable-hotpatching {false, true}]\n             [--enable-integrity-monitoring]\n             [--enable-proxy-agent {false, true}]\n             [--enable-reboot {false, true}]\n             [--enable-redeploy {false, true}]\n             [--enable-secure-boot {false, true}]\n             [--enable-vtpm {false, true}]\n             [--encryption-at-host {false, true}]\n             [--encryption-identity]\n             [--ephemeral-os-disk {false, true}]\n             [--ephemeral-os-disk-placement {CacheDisk, NvmeDisk, ResourceDisk}]\n             [--eviction-policy {Deallocate, Delete}]\n             [--generate-ssh-keys]\n             [--host]\n             [--host-group]\n             [--image]\n             [--license-type {None, RHEL_BASE, RHEL_BASESAPAPPS, RHEL_BASESAPHA, RHEL_BYOS, RHEL_ELS_6, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, SLES, SLES_BYOS, SLES_HPC, SLES_SAP, SLES_STANDARD, UBUNTU, UBUNTU_PRO, Windows_Client, Windows_Server}]\n             [--location]\n             [--max-price]\n             [--nic-delete-option]\n             [--nics]\n             [--no-wait]\n             [--nsg]\n             [--nsg-rule {NONE, RDP, SSH}]\n             [--os-disk-caching {None, ReadOnly, ReadWrite}]\n             [--os-disk-delete-option {Delete, Detach}]\n             [--os-disk-encryption-set]\n             [--os-disk-name]\n             [--os-disk-secure-vm-disk-encryption-set]\n             [--os-disk-security-encryption-type {DiskWithVMGuestState, NonPersistedTPM, VMGuestStateOnly}]\n             [--os-disk-size-gb]\n             [--os-type {linux, windows}]\n             [--patch-mode {AutomaticByOS, AutomaticByPlatform, ImageDefault, Manual}]\n             [--plan-name]\n             [--plan-product]\n             [--plan-promotion-code]\n             [--plan-publisher]\n             [--platform-fault-domain]\n             [--ppg]\n             [--priority {Low, Regular, Spot}]\n             [--private-ip-address]\n             [--proxy-agent-mode {Audit, Enforce}]\n             [--public-ip-address]\n             [--public-ip-address-allocation {dynamic, static}]\n             [--public-ip-address-dns-name]\n             [--public-ip-sku {Basic, Standard}]\n             [--role]\n             [--scope]\n             [--secrets]\n             [--security-type {ConfidentialVM, Standard, TrustedLaunch}]\n             [--size]\n             [--source-disk-restore-point]\n             [--source-disk-restore-point-size-gb]\n             [--source-resource]\n             [--source-resource-size]\n             [--specialized {false, true}]\n             [--ssh-dest-key-path]\n             [--ssh-key-name]\n             [--ssh-key-type {Ed25519, RSA}]\n             [--ssh-key-values]\n             [--storage-account]\n             [--storage-container-name]\n             [--storage-sku]\n             [--subnet]\n             [--subnet-address-prefix]\n             [--tags]\n             [--ultra-ssd-enabled {false, true}]\n             [--use-unmanaged-disk]\n             [--user-data]\n             [--v-cpus-available]\n             [--v-cpus-per-core]\n             [--validate]\n             [--vmss]\n             [--vnet-address-prefix]\n             [--vnet-name]\n             [--workspace]\n             [--zone]",
            "required_parameters": [
                "--name -n",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--accelerated-networking",
                "--accept-term",
                "--additional-events --additional-scheduled-events",
                "--admin-password",
                "--admin-username",
                "--asgs",
                "--assign-identity",
                "--attach-data-disks",
                "--attach-os-disk",
                "--authentication-type",
                "--availability-set",
                "--boot-diagnostics-storage",
                "--capacity-reservation-group --crg",
                "--computer-name",
                "--count",
                "--custom-data",
                "--data-disk-caching",
                "--data-disk-delete-option",
                "--data-disk-encryption-sets",
                "--data-disk-sizes-gb",
                "--disable-integrity-monitoring-autoupgrade",
                "--disk-controller-type",
                "--edge-zone",
                "--enable-agent",
                "--enable-auto-update",
                "--enable-hibernation",
                "--enable-hotpatching",
                "--enable-integrity-monitoring",
                "--enable-proxy-agent",
                "--enable-reboot --enable-user-reboot-scheduled-events",
                "--enable-redeploy --enable-user-redeploy-scheduled-events",
                "--enable-secure-boot",
                "--enable-vtpm",
                "--encryption-at-host",
                "--encryption-identity",
                "--ephemeral-os-disk",
                "--ephemeral-os-disk-placement --ephemeral-placement",
                "--eviction-policy",
                "--generate-ssh-keys",
                "--host",
                "--host-group",
                "--image",
                "--license-type",
                "--location -l",
                "--max-price",
                "--nic-delete-option",
                "--nics",
                "--no-wait",
                "--nsg",
                "--nsg-rule",
                "--os-disk-caching",
                "--os-disk-delete-option",
                "--os-disk-encryption-set",
                "--os-disk-name",
                "--os-disk-secure-vm-disk-encryption-set",
                "--os-disk-security-encryption-type",
                "--os-disk-size-gb",
                "--os-type",
                "--patch-mode",
                "--plan-name",
                "--plan-product",
                "--plan-promotion-code",
                "--plan-publisher",
                "--platform-fault-domain",
                "--ppg",
                "--priority",
                "--private-ip-address",
                "--proxy-agent-mode",
                "--public-ip-address",
                "--public-ip-address-allocation",
                "--public-ip-address-dns-name",
                "--public-ip-sku",
                "--role",
                "--scope",
                "--secrets",
                "--security-type",
                "--size",
                "--source-disk-restore-point --source-disk-rp",
                "--source-disk-restore-point-size-gb --source-rp-size",
                "--source-resource --source-snapshots-or-disks",
                "--source-resource-size --source-snapshots-or-disks-size-gb",
                "--specialized",
                "--ssh-dest-key-path",
                "--ssh-key-name",
                "--ssh-key-type",
                "--ssh-key-values",
                "--storage-account",
                "--storage-container-name",
                "--storage-sku",
                "--subnet",
                "--subnet-address-prefix",
                "--tags",
                "--ultra-ssd-enabled",
                "--use-unmanaged-disk",
                "--user-data",
                "--v-cpus-available",
                "--v-cpus-per-core",
                "--validate",
                "--vmss",
                "--vnet-address-prefix",
                "--vnet-name",
                "--workspace",
                "--zone -z"
            ],
            "examples": [
                "az vm create -n MyVm -g MyResourceGroup --image Ubuntu2204",
                "az vm create -n MyVm -g MyResourceGroup --image RedHat:RHEL:7-RAW:7.4.2018010506",
                "az vm create -n MyVm -g MyResourceGroup --public-ip-address \"\" --image Win2012R2Datacenter",
                "az vm create -g MyResourceGroup -n MyVm --image MyImage",
                "az vm create -g MyResourceGroup -n MyVm --image /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Compute/galleries/myGallery/images/myImage/versions/1.0.0",
                "az vm create -g MyResourceGroup -n MyVm --image /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Compute/galleries/myGallery/images/myImage/versions/1.0.0 --specialized",
                "az vm create -g MyResourceGroup -n MyVm --image /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Compute/galleries/myGallery/images/myImage",
                "az vm create -g MyResourceGroup -n MyVm --attach-os-disk MyOsDisk --os-type linux",
                "az vm create -g MyResourceGroup -n MyVm --attach-os-disk https://vhd1234.blob.core.windows.net/vhds/osdisk1234.vhd --os-type linux --use-unmanaged-disk",
                "az vm create -g MyResourceGroup -n MyVm --image Debian11 --custom-data MyCloudInitScript.yml",
                "az vm create -n MyVm -g MyResourceGroup --image Debian11 --vnet-name MyVnet --subnet subnet1 \\\n    --availability-set MyAvailabilitySet --public-ip-address-dns-name MyUniqueDnsName \\\n    --ssh-key-values @key-file",
                "az vm create -n MyVm -g MyResourceGroup --public-ip-address-dns-name MyUniqueDnsName \\\n    --image Ubuntu2204 --data-disk-sizes-gb 10 20 --size Standard_DS2_v2 \\\n    --generate-ssh-keys",
                "az keyvault certificate create --vault-name vaultname -n cert1 \\\n  -p \"$(az keyvault certificate get-default-policy)\"\n\nsecrets=$(az keyvault secret list-versions --vault-name vaultname \\\n  -n cert1 --query \"[?attributes.enabled].id\" -o tsv)\n\nvm_secrets=$(az vm secret format -s \"$secrets\")\n\naz vm create -g group-name -n vm-name --admin-username deploy  \\\n  --image debian11 --secrets \"$vm_secrets\"",
                "az vm create -n MyVm -g rg1 --image CentOS85Gen2 --assign-identity [system] --scope /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/MyResourceGroup/myRG/providers/Microsoft.Storage/storageAccounts/storage1 --role Contributor",
                "az vm create -n MyVm -g rg1 --image Debian11 --assign-identity /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID",
                "az vm create -n MyVm -g rg1 --image Debian11 --assign-identity [system] /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID",
                "az vm create -n MyVm -g rg1 --image Debian11 --assign-identity myID --encryption-identity /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID",
                "az vm create -n MyVm -g MyResourceGroup --image CentOS85Gen2 --zone 1",
                "az vm create -n MyVm -g MyResourceGroup --image CentOS85Gen2 --count 3",
                "az vm create -n MyVm -g MyResourceGroup --image /SharedGalleries/{gallery_unique_name}/Images/{image}/Versions/{version}",
                "az vm create -n MyVm -g MyResourceGroup --image /CommunityGalleries/{gallery_unique_name}/Images/{image}/Versions/{version}"
            ]
        },
        {
            "name": "az vm deallocate",
            "summary": "Deallocate a VM so that computing resources are no longer allocated (charges no longer apply). The status will change from 'Stopped' to 'Stopped (Deallocated)'.",
            "syntax": "az vm deallocate [--hibernate {0, 1, f, false, n, no, t, true, y, yes}]\n                 [--ids]\n                 [--name]\n                 [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                 [--resource-group]\n                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--hibernate",
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm deallocate -g MyResourceGroup -n MyVm\naz vm generalize -g MyResourceGroup -n MyVm\naz vm capture -g MyResourceGroup -n MyVm --vhd-name-prefix MyPrefix",
                "az vm deallocate --ids vms_ids\naz vm generalize --ids vms_ids\naz vm capture --ids vms_ids --vhd-name-prefix MyPrefix",
                "az vm deallocate --name MyVm --no-wait --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vm delete",
            "summary": "Delete a VM.",
            "syntax": "az vm delete [--force-deletion]\n             [--ids]\n             [--name]\n             [--no-wait]\n             [--resource-group]\n             [--subscription]\n             [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--force-deletion",
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az vm delete -g MyResourceGroup -n MyVm --yes",
                "az vm delete --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm generalize",
            "summary": "Mark a VM as generalized, allowing it to be imaged for multiple deployments.",
            "syntax": "az vm generalize [--ids]\n                 [--name]\n                 [--resource-group]\n                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm deallocate -g MyResourceGroup -n MyVm\naz vm generalize -g MyResourceGroup -n MyVm\naz vm capture -g MyResourceGroup -n MyVm --vhd-name-prefix MyPrefix",
                "az vm deallocate --ids vms_ids\naz vm generalize --ids vms_ids\naz vm capture --ids vms_ids --vhd-name-prefix MyPrefix"
            ]
        },
        {
            "name": "az vm get-instance-view",
            "summary": "Get instance information about a VM.",
            "syntax": "az vm get-instance-view [--ids]\n                        [--name]\n                        [--resource-group]\n                        [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm get-instance-view -g MyResourceGroup -n MyVm",
                "az vm get-instance-view --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm install-patches",
            "summary": "Install patches on a VM.",
            "syntax": "az vm install-patches --maximum-duration\n                      --reboot-setting {Always, IfRequired, Never}\n                      [--classifications-to-include-linux {Critical, Other, Security}]\n                      [--classifications-to-include-win {Critical, Definition, FeaturePack, Security, ServicePack, Tools, UpdateRollUp, Updates}]\n                      [--exclude-kbs-requiring-reboot {false, true}]\n                      [--ids]\n                      [--kb-numbers-to-exclude]\n                      [--kb-numbers-to-include]\n                      [--max-patch-publish-date]\n                      [--name]\n                      [--no-wait]\n                      [--package-name-masks-to-exclude]\n                      [--package-name-masks-to-include]\n                      [--resource-group]\n                      [--subscription]",
            "required_parameters": [
                "--maximum-duration",
                "--reboot-setting"
            ],
            "optional_parameters": [
                "--classifications-to-include-linux",
                "--classifications-to-include-win",
                "--exclude-kbs-requiring-reboot",
                "--ids",
                "--kb-numbers-to-exclude",
                "--kb-numbers-to-include",
                "--max-patch-publish-date",
                "--name -n",
                "--no-wait",
                "--package-name-masks-to-exclude",
                "--package-name-masks-to-include",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm install-patches -g MyResourceGroup -n MyVm --maximum-duration PT4H --reboot-setting IfRequired --classifications-to-include-win Critical Security --exclude-kbs-requiring-reboot true",
                "az vm install-patches -g MyResourceGroup -n MyVm --maximum-duration PT4H --reboot-setting IfRequired --classifications-to-include-linux Critical"
            ]
        },
        {
            "name": "az vm list",
            "summary": "List details of Virtual Machines.",
            "syntax": "az vm list [--resource-group]\n           [--show-details]\n           [--vmss]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g",
                "--show-details -d",
                "--vmss"
            ],
            "examples": [
                "az vm list",
                "az vm list -g MyResourceGroup",
                "az vm list -g MyResourceGroup -d"
            ]
        },
        {
            "name": "az vm list-ip-addresses",
            "summary": "List IP addresses associated with a VM.",
            "syntax": "az vm list-ip-addresses [--ids]\n                        [--name]\n                        [--resource-group]\n                        [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm list-ip-addresses -g MyResourceGroup -n MyVm",
                "az vm list-ip-addresses --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm list-sizes",
            "summary": "List available sizes for VMs.",
            "syntax": "az vm list-sizes --location",
            "required_parameters": [
                "--location -l"
            ],
            "optional_parameters": [],
            "examples": [
                "az vm list-sizes -l westus"
            ]
        },
        {
            "name": "az vm list-skus",
            "summary": "Get details for compute-related resource SKUs.",
            "syntax": "az vm list-skus [--all {false, true}]\n                [--location]\n                [--resource-type]\n                [--size]\n                [--zone {false, true}]",
            "required_parameters": [],
            "optional_parameters": [
                "--all",
                "--location -l",
                "--resource-type -r",
                "--size -s",
                "--zone -z"
            ],
            "examples": [
                "az vm list-skus -l westus",
                "az vm list-skus -l eastus2 --zone",
                "az vm list-skus -l eastus2 --zone --size standard_ds1",
                "az vm list-skus -l westus --resource-type availabilitySets"
            ]
        },
        {
            "name": "az vm list-usage",
            "summary": "List available usage resources for VMs.",
            "syntax": "az vm list-usage --location",
            "required_parameters": [
                "--location -l"
            ],
            "optional_parameters": [],
            "examples": [
                "az vm list-usage -l westus"
            ]
        },
        {
            "name": "az vm list-vm-resize-options",
            "summary": "List available resizing options for VMs.",
            "syntax": "az vm list-vm-resize-options [--ids]\n                             [--name]\n                             [--resource-group]\n                             [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm list-vm-resize-options -g MyResourceGroup -n MyVm",
                "az vm list-vm-resize-options --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm open-port",
            "summary": "Opens a VM to inbound traffic on specified ports.",
            "syntax": "az vm open-port --port\n                [--apply-to-subnet]\n                [--ids]\n                [--name]\n                [--nsg-name]\n                [--priority]\n                [--resource-group]\n                [--subscription]",
            "required_parameters": [
                "--port"
            ],
            "optional_parameters": [
                "--apply-to-subnet",
                "--ids",
                "--name -n",
                "--nsg-name",
                "--priority",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm open-port -g MyResourceGroup -n MyVm --port '*'",
                "az vm open-port -g MyResourceGroup -n MyVm --port 80-100 --priority 100",
                "az vm open-port -g MyResourceGroup -n MyVm --port 555,557-559 --priority 100",
                "az vm open-port --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv) --port '*'"
            ]
        },
        {
            "name": "az vm perform-maintenance",
            "summary": "The operation to perform maintenance on a virtual machine.",
            "syntax": "az vm perform-maintenance [--ids]\n                          [--name]\n                          [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n                          [--resource-group]\n                          [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": []
        },
        {
            "name": "az vm reapply",
            "summary": "Reapply VMs.",
            "syntax": "az vm reapply [--ids]\n              [--name]\n              [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n              [--resource-group]\n              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm reapply -g MyResourceGroup -n MyVm",
                "az vm reapply --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm redeploy",
            "summary": "Redeploy an existing VM.",
            "syntax": "az vm redeploy [--ids]\n               [--name]\n               [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n               [--resource-group]\n               [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm redeploy -g MyResourceGroup -n MyVm",
                "az vm redeploy --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm reimage",
            "summary": "Reimage (upgrade the operating system) a virtual machine.",
            "syntax": "az vm reimage [--admin-password]\n              [--custom-data]\n              [--exact-version]\n              [--ids]\n              [--name]\n              [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n              [--resource-group]\n              [--subscription]\n              [--temp-disk {0, 1, f, false, n, no, t, true, y, yes}]",
            "required_parameters": [],
            "optional_parameters": [
                "--admin-password",
                "--custom-data",
                "--exact-version",
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription",
                "--temp-disk"
            ],
            "examples": [
                "az vm reimage --name MyVm --resource-group MyResourceGroup --admin-password MyPassword --custom-data \"dGVzdA==\" --temp-disk false --exact-version 0.1"
            ]
        },
        {
            "name": "az vm resize",
            "summary": "Update a VM's size.",
            "syntax": "az vm resize --size\n             [--ids]\n             [--name]\n             [--no-wait]\n             [--resource-group]\n             [--subscription]",
            "required_parameters": [
                "--size"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm resize -g MyResourceGroup -n MyVm --size Standard_DS3_v2",
                "az vm resize --size Standard_DS3_v2 --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm restart",
            "summary": "Restart VMs.",
            "syntax": "az vm restart [--force]\n              [--ids]\n              [--name]\n              [--no-wait]\n              [--resource-group]\n              [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--force",
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm restart -g MyResourceGroup -n MyVm",
                "az vm restart --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm show",
            "summary": "Get the details of a VM.",
            "syntax": "az vm show [--ids]\n           [--include-user-data]\n           [--name]\n           [--resource-group]\n           [--show-details]\n           [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--include-user-data -u",
                "--name -n",
                "--resource-group -g",
                "--show-details -d",
                "--subscription"
            ],
            "examples": [
                "az vm show -g MyResourceGroup -n MyVm -d",
                "az vm show -d --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm simulate-eviction",
            "summary": "Simulate the eviction of a Spot VM.",
            "syntax": "az vm simulate-eviction [--ids]\n                        [--name]\n                        [--resource-group]\n                        [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm simulate-eviction --resource-group MyResourceGroup --name MyVm"
            ]
        },
        {
            "name": "az vm start",
            "summary": "Start a stopped VM.",
            "syntax": "az vm start [--ids]\n            [--name]\n            [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]\n            [--resource-group]\n            [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name --vm-name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az vm start -g MyResourceGroup -n MyVm",
                "az vm start --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)",
                "az vm start --name MyVm --no-wait --resource-group MyResourceGroup"
            ]
        },
        {
            "name": "az vm stop",
            "summary": "Power off (stop) a running VM.",
            "syntax": "az vm stop [--ids]\n           [--name]\n           [--no-wait]\n           [--resource-group]\n           [--skip-shutdown]\n           [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--skip-shutdown",
                "--subscription"
            ],
            "examples": [
                "az vm stop --resource-group MyResourceGroup --name MyVm",
                "az vm stop --resource-group MyResourceGroup --name MyVm --skip-shutdown",
                "az vm stop --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        },
        {
            "name": "az vm update",
            "summary": "Update the properties of a VM.",
            "syntax": "az vm update [--add]\n             [--additional-events {false, true}]\n             [--capacity-reservation-group]\n             [--disk-caching]\n             [--disk-controller-type {NVMe, SCSI}]\n             [--enable-hibernation {false, true}]\n             [--enable-proxy-agent {false, true}]\n             [--enable-reboot {false, true}]\n             [--enable-redeploy {false, true}]\n             [--enable-secure-boot {false, true}]\n             [--enable-vtpm {false, true}]\n             [--ephemeral-os-disk-placement {CacheDisk, NvmeDisk, ResourceDisk}]\n             [--force-string]\n             [--host]\n             [--host-group]\n             [--ids]\n             [--license-type {None, RHEL_BASE, RHEL_BASESAPAPPS, RHEL_BASESAPHA, RHEL_BYOS, RHEL_ELS_6, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, SLES, SLES_BYOS, SLES_HPC, SLES_SAP, SLES_STANDARD, UBUNTU, UBUNTU_PRO, Windows_Client, Windows_Server}]\n             [--max-price]\n             [--name]\n             [--no-wait]\n             [--os-disk]\n             [--ppg]\n             [--priority {Low, Regular, Spot}]\n             [--proxy-agent-mode {Audit, Enforce}]\n             [--remove]\n             [--resource-group]\n             [--security-type {TrustedLaunch}]\n             [--set]\n             [--size]\n             [--subscription]\n             [--ultra-ssd-enabled {false, true}]\n             [--user-data]\n             [--v-cpus-available]\n             [--v-cpus-per-core]\n             [--workspace]\n             [--write-accelerator]",
            "required_parameters": [],
            "optional_parameters": [
                "--add",
                "--additional-events --additional-scheduled-events",
                "--capacity-reservation-group --crg",
                "--disk-caching",
                "--disk-controller-type",
                "--enable-hibernation",
                "--enable-proxy-agent",
                "--enable-reboot --enable-user-reboot-scheduled-events",
                "--enable-redeploy --enable-user-redeploy-scheduled-events",
                "--enable-secure-boot",
                "--enable-vtpm",
                "--ephemeral-os-disk-placement --ephemeral-placement",
                "--force-string",
                "--host",
                "--host-group",
                "--ids",
                "--license-type",
                "--max-price",
                "--name -n",
                "--no-wait",
                "--os-disk",
                "--ppg",
                "--priority",
                "--proxy-agent-mode",
                "--remove",
                "--resource-group -g",
                "--security-type",
                "--set",
                "--size",
                "--subscription",
                "--ultra-ssd-enabled",
                "--user-data",
                "--v-cpus-available",
                "--v-cpus-per-core",
                "--workspace",
                "--write-accelerator"
            ],
            "examples": [
                "az vm update -n name -g group --set tags.tagName=tagValue",
                "az vm update -n name -g group --remove tags.tagName",
                "az vm update -n name -g group --set networkProfile.networkInterfaces[1].primary=false networkProfile.networkInterfaces[0].primary=true",
                "az vm update -n name -g group --add networkProfile.networkInterfaces primary=false id={NIC_ID}",
                "az vm update -n name -g group --remove networkProfile.networkInterfaces 3",
                "az vm deallocate -n name -g group\naz vm update -n name -g group --host my-host\naz vm start -n name -g group",
                "az vm deallocate -n name -g group\naz vm update -n name -g group --host-group my-host-group\naz vm start -n name -g group"
            ]
        },
        {
            "name": "az vm wait",
            "summary": "Place the CLI in a waiting state until a condition of the VM is met.",
            "syntax": "az vm wait [--created]\n           [--custom]\n           [--deleted]\n           [--exists]\n           [--ids]\n           [--interval]\n           [--name]\n           [--resource-group]\n           [--subscription]\n           [--timeout]\n           [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--interval",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": [
                "az vm wait -g MyResourceGroup -n MyVm --created",
                "az vm wait --deleted --ids $(az vm list -g MyResourceGroup --query \"[].id\" -o tsv)"
            ]
        }
    ]
}