{
    "command_group": "az storage blob",
    "description": "Manage object storage for unstructured data (blobs).",
    "status": "GA",
    "commands": [
        {
            "name": "az storage blob delete",
            "summary": "Mark a blob or snapshot for deletion.",
            "syntax": "az storage blob delete [--account-key]\n                       [--account-name]\n                       [--auth-mode {key, login}]\n                       [--blob-endpoint]\n                       [--blob-url]\n                       [--connection-string]\n                       [--container-name]\n                       [--delete-snapshots {include, only}]\n                       [--if-match]\n                       [--if-modified-since]\n                       [--if-none-match]\n                       [--if-unmodified-since]\n                       [--lease-id]\n                       [--name]\n                       [--sas-token]\n                       [--snapshot]\n                       [--tags-condition]\n                       [--timeout]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--delete-snapshots",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--name -n",
                "--sas-token",
                "--snapshot",
                "--tags-condition",
                "--timeout"
            ],
            "examples": [
                "az storage blob delete -c mycontainer -n MyBlob",
                "az storage blob delete -c mycontainer -n MyBlob --account-name mystorageaccount --auth-mode login"
            ]
        },
        {
            "name": "az storage blob delete",
            "summary": "Mark a blob or snapshot for deletion.",
            "syntax": "az storage blob delete [--account-key]\n                       [--account-name]\n                       [--auth-mode {key, login}]\n                       [--blob-endpoint]\n                       [--blob-url]\n                       [--connection-string]\n                       [--container-name]\n                       [--delete-snapshots {include, only}]\n                       [--if-match]\n                       [--if-modified-since]\n                       [--if-none-match]\n                       [--if-unmodified-since]\n                       [--lease-id]\n                       [--name]\n                       [--sas-token]\n                       [--snapshot]\n                       [--tags-condition]\n                       [--timeout]\n                       [--version-id]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--delete-snapshots",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--name -n",
                "--sas-token",
                "--snapshot",
                "--tags-condition",
                "--timeout",
                "--version-id"
            ],
            "examples": [
                "az storage blob delete -c mycontainer -n MyBlob",
                "az storage blob delete -c mycontainer -n MyBlob --account-name mystorageaccount --auth-mode login"
            ]
        },
        {
            "name": "az storage blob delete-batch",
            "summary": "Delete blobs from a blob container recursively.",
            "syntax": "az storage blob delete-batch --source\n                             [--account-key]\n                             [--account-name]\n                             [--auth-mode {key, login}]\n                             [--blob-endpoint]\n                             [--connection-string]\n                             [--delete-snapshots {include, only}]\n                             [--dryrun]\n                             [--if-match]\n                             [--if-modified-since]\n                             [--if-none-match]\n                             [--if-unmodified-since]\n                             [--lease-id]\n                             [--pattern]\n                             [--sas-token]\n                             [--timeout]",
            "required_parameters": [
                "--source -s"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--delete-snapshots",
                "--dryrun",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--pattern",
                "--sas-token",
                "--timeout"
            ],
            "examples": [
                "date=`date -d \"10 days ago\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob delete-batch -s mycontainer --account-name mystorageaccount --pattern \"*.py\" --if-unmodified-since $date --auth-mode login",
                "az storage blob delete-batch -s mycontainer --pattern \"dir/*\"",
                "az storage blob delete-batch -s mycontainer --pattern \"cli-201[89]-??-??.txt\"",
                "az storage blob delete-batch -s mycontainer --pattern \"cli-201[!89]-??-??.txt\""
            ]
        },
        {
            "name": "az storage blob download",
            "summary": "Download a blob to a file path.",
            "syntax": "az storage blob download [--account-key]\n                         [--account-name]\n                         [--auth-mode {key, login}]\n                         [--blob-endpoint]\n                         [--blob-url]\n                         [--connection-string]\n                         [--container-name]\n                         [--end-range]\n                         [--file]\n                         [--if-match]\n                         [--if-modified-since]\n                         [--if-none-match]\n                         [--if-unmodified-since]\n                         [--lease-id]\n                         [--max-connections]\n                         [--name]\n                         [--no-progress]\n                         [--open-mode]\n                         [--overwrite {false, true}]\n                         [--sas-token]\n                         [--snapshot]\n                         [--start-range]\n                         [--tags-condition]\n                         [--timeout]\n                         [--validate-content]\n                         [--version-id]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--end-range",
                "--file -f",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--max-connections",
                "--name -n",
                "--no-progress",
                "--open-mode",
                "--overwrite",
                "--sas-token",
                "--snapshot",
                "--start-range",
                "--tags-condition",
                "--timeout",
                "--validate-content",
                "--version-id"
            ],
            "examples": [
                "az storage blob download -f /path/to/file -c mycontainer -n MyBlob",
                "az storage blob download -c mycontainer -n myblob --account-name mystorageaccount --account-key myaccountkey"
            ]
        },
        {
            "name": "az storage blob download-batch",
            "summary": "Download blobs from a blob container recursively.",
            "syntax": "az storage blob download-batch --destination\n                               --source\n                               [--account-key]\n                               [--account-name]\n                               [--auth-mode {key, login}]\n                               [--blob-endpoint]\n                               [--connection-string]\n                               [--dryrun]\n                               [--max-connections]\n                               [--no-progress]\n                               [--overwrite {false, true}]\n                               [--pattern]\n                               [--sas-token]",
            "required_parameters": [
                "--destination -d",
                "--source -s"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--dryrun",
                "--max-connections",
                "--no-progress",
                "--overwrite",
                "--pattern",
                "--sas-token"
            ],
            "examples": [
                "az storage blob download-batch -d . --pattern \"*.py\" -s mycontainer --account-name mystorageaccount --account-key 00000000",
                "az storage blob download-batch -d . -s mycontainer --pattern \"dir/*\"",
                "az storage blob download-batch -d . -s mycontainer --pattern \"cli-201[89]-??-??.txt\"",
                "az storage blob download-batch -d . -s mycontainer --pattern \"cli-201[!89]-??-??.txt\""
            ]
        },
        {
            "name": "az storage blob exists",
            "summary": "Check for the existence of a blob in a container.",
            "syntax": "az storage blob exists [--account-key]\n                       [--account-name]\n                       [--auth-mode {key, login}]\n                       [--blob-endpoint]\n                       [--blob-url]\n                       [--connection-string]\n                       [--container-name]\n                       [--name]\n                       [--sas-token]\n                       [--snapshot]\n                       [--timeout]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--name -n",
                "--sas-token",
                "--snapshot",
                "--timeout"
            ],
            "examples": [
                "az storage blob exists --account-key 00000000 --account-name MyAccount --container-name mycontainer --name MyBlob"
            ]
        },
        {
            "name": "az storage blob filter",
            "summary": "List blobs across all containers whose tags match a given search expression.",
            "syntax": "az storage blob filter --tag-filter\n                       [--account-key]\n                       [--account-name]\n                       [--auth-mode {key, login}]\n                       [--blob-endpoint]\n                       [--connection-string]\n                       [--container-name]\n                       [--sas-token]",
            "required_parameters": [
                "--tag-filter"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--container-name -c",
                "--sas-token"
            ],
            "examples": []
        },
        {
            "name": "az storage blob generate-sas",
            "summary": "Generate a shared access signature for the blob.",
            "syntax": "az storage blob generate-sas [--account-key]\n                             [--account-name]\n                             [--as-user]\n                             [--auth-mode {key, login}]\n                             [--blob-endpoint]\n                             [--blob-url]\n                             [--cache-control]\n                             [--connection-string]\n                             [--container-name]\n                             [--content-disposition]\n                             [--content-encoding]\n                             [--content-language]\n                             [--content-type]\n                             [--encryption-scope]\n                             [--expiry]\n                             [--full-uri]\n                             [--https-only]\n                             [--ip]\n                             [--name]\n                             [--permissions]\n                             [--policy-name]\n                             [--snapshot]\n                             [--start]\n                             [--timeout]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--as-user",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--cache-control",
                "--connection-string",
                "--container-name -c",
                "--content-disposition",
                "--content-encoding",
                "--content-language",
                "--content-type",
                "--encryption-scope",
                "--expiry",
                "--full-uri",
                "--https-only",
                "--ip",
                "--name -n",
                "--permissions",
                "--policy-name",
                "--snapshot",
                "--start",
                "--timeout"
            ],
            "examples": [
                "end=`date -u -d \"30 minutes\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob generate-sas -c myycontainer -n MyBlob --permissions r --expiry $end --https-only",
                "end=`date -u -d \"30 minutes\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob generate-sas -c myycontainer -n MyBlob --ip \"176.134.171.0-176.134.171.255\" --permissions r --expiry $end --https-only",
                "az storage blob generate-sas --account-key 00000000 --account-name MyStorageAccount --container-name mycontainer --expiry 2018-01-01T00:00:00Z --name MyBlob --permissions r"
            ]
        },
        {
            "name": "az storage blob generate-sas",
            "summary": "Generate a shared access signature for the blob.",
            "syntax": "az storage blob generate-sas --container-name\n                             --name\n                             [--account-key]\n                             [--account-name]\n                             [--as-user]\n                             [--auth-mode {key, login}]\n                             [--blob-endpoint]\n                             [--cache-control]\n                             [--connection-string]\n                             [--content-disposition]\n                             [--content-encoding]\n                             [--content-language]\n                             [--content-type]\n                             [--expiry]\n                             [--full-uri]\n                             [--https-only]\n                             [--ip]\n                             [--permissions]\n                             [--policy-name]\n                             [--snapshot]\n                             [--start]\n                             [--version-id]",
            "required_parameters": [
                "--container-name -c",
                "--name -n"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--as-user",
                "--auth-mode",
                "--blob-endpoint",
                "--cache-control",
                "--connection-string",
                "--content-disposition",
                "--content-encoding",
                "--content-language",
                "--content-type",
                "--expiry",
                "--full-uri",
                "--https-only",
                "--ip",
                "--permissions",
                "--policy-name",
                "--snapshot",
                "--start",
                "--version-id"
            ],
            "examples": [
                "end=`date -u -d \"30 minutes\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob generate-sas -c myycontainer -n MyBlob --permissions r --expiry $end --https-only",
                "end=`date -u -d \"30 minutes\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob generate-sas -c myycontainer -n MyBlob --ip \"176.134.171.0-176.134.171.255\" --permissions r --expiry $end --https-only",
                "az storage blob generate-sas --account-key 00000000 --account-name MyStorageAccount --container-name mycontainer --expiry 2018-01-01T00:00:00Z --name MyBlob --permissions r"
            ]
        },
        {
            "name": "az storage blob list",
            "summary": "List blobs in a given container.",
            "syntax": "az storage blob list --container-name\n                     [--account-key]\n                     [--account-name]\n                     [--auth-mode {key, login}]\n                     [--blob-endpoint]\n                     [--connection-string]\n                     [--delimiter]\n                     [--include]\n                     [--marker]\n                     [--num-results]\n                     [--prefix]\n                     [--sas-token]\n                     [--show-next-marker]\n                     [--timeout]",
            "required_parameters": [
                "--container-name -c"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--delimiter",
                "--include",
                "--marker",
                "--num-results",
                "--prefix",
                "--sas-token",
                "--show-next-marker",
                "--timeout"
            ],
            "examples": [
                "az storage blob list -c mycontainer --prefix foo"
            ]
        },
        {
            "name": "az storage blob query",
            "summary": "Enable users to select/project on blob or blob snapshot data by providing simple query expressions.",
            "syntax": "az storage blob query --query-expression\n                      [--account-key]\n                      [--account-name]\n                      [--auth-mode {key, login}]\n                      [--blob-endpoint]\n                      [--blob-url]\n                      [--connection-string]\n                      [--container-name]\n                      [--if-match]\n                      [--if-modified-since]\n                      [--if-none-match]\n                      [--if-unmodified-since]\n                      [--in-column-separator]\n                      [--in-escape-char]\n                      [--in-has-header]\n                      [--in-line-separator]\n                      [--in-quote-char]\n                      [--in-record-separator]\n                      [--input-format {csv, json}]\n                      [--lease-id]\n                      [--name]\n                      [--out-column-separator]\n                      [--out-escape-char]\n                      [--out-has-header]\n                      [--out-line-separator]\n                      [--out-quote-char]\n                      [--out-record-separator]\n                      [--output-format {csv, json}]\n                      [--result-file]\n                      [--sas-token]\n                      [--tags-condition]\n                      [--timeout]",
            "required_parameters": [
                "--query-expression"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--in-column-separator",
                "--in-escape-char",
                "--in-has-header",
                "--in-line-separator",
                "--in-quote-char",
                "--in-record-separator",
                "--input-format",
                "--lease-id",
                "--name -n",
                "--out-column-separator",
                "--out-escape-char",
                "--out-has-header",
                "--out-line-separator",
                "--out-quote-char",
                "--out-record-separator",
                "--output-format",
                "--result-file",
                "--sas-token",
                "--tags-condition",
                "--timeout"
            ],
            "examples": [
                "az storage blob query -c mycontainer -n myblob --query-expression \"SELECT _2 from BlobStorage\"",
                "az storage blob query -c mycontainer -n myblob --query-expression \"SELECT _2 from BlobStorage\" --result-file result.csv"
            ]
        },
        {
            "name": "az storage blob restore",
            "summary": "Restore blobs in the specified blob ranges.",
            "syntax": "az storage blob restore --account-name\n                        --time-to-restore\n                        [--blob-range]\n                        [--no-wait]\n                        [--resource-group]",
            "required_parameters": [
                "--account-name -n",
                "--time-to-restore -t"
            ],
            "optional_parameters": [
                "--blob-range -r",
                "--no-wait",
                "--resource-group -g"
            ],
            "examples": [
                "az storage blob restore --account-name mystorageaccount -g MyResourceGroup -t 2020-02-27T03:59:59Z -r container1/blob1 container2/blob2 -r container2/blob3 container2/blob4",
                "az storage blob restore --account-name mystorageaccount -g MyResourceGroup -t 2020-02-27T03:59:59Z -r \"\" \"\"",
                "time=`date -u -d \"30 minutes\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob restore --account-name mystorageaccount -g MyResourceGroup -t $time -r container0/blob1 container0/blob2",
                "time=`date -u -d \"30 minutes\" '+%Y-%m-%dT%H:%MZ'`\naz storage blob restore --account-name mystorageaccount -g MyResourceGroup -t $time -r container0/blob1 container0/blob2 --no-wait"
            ]
        },
        {
            "name": "az storage blob rewrite",
            "summary": "Create a new Block Blob where the content of the blob is read from a given URL.",
            "syntax": "az storage blob rewrite --container-name\n                        --name\n                        --source-uri\n                        [--account-key]\n                        [--account-name]\n                        [--auth-mode {key, login}]\n                        [--blob-endpoint]\n                        [--connection-string]\n                        [--encryption-scope]\n                        [--if-match]\n                        [--if-modified-since]\n                        [--if-none-match]\n                        [--if-unmodified-since]\n                        [--lease-id]\n                        [--sas-token]\n                        [--tags-condition]\n                        [--tier {Archive, Cold, Cool, Hot, P10, P15, P20, P30, P4, P40, P50, P6, P60, P70, P80}]\n                        [--timeout]",
            "required_parameters": [
                "--container-name -c",
                "--name -n",
                "--source-uri -u"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--encryption-scope",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--sas-token",
                "--tags-condition",
                "--tier",
                "--timeout"
            ],
            "examples": [
                "az storage blob rewrite --source-uri https://srcaccount.blob.core.windows.net/mycontainer/myblob?<sastoken> --encryption-scope newscope -c mycontainer -n myblob --account-name mystorageaccount --account-key 0000-0000"
            ]
        },
        {
            "name": "az storage blob set-legal-hold",
            "summary": "Set blob legal hold.",
            "syntax": "az storage blob set-legal-hold --container-name\n                               --legal-hold {false, true}\n                               --name\n                               [--account-key]\n                               [--account-name]\n                               [--auth-mode {key, login}]\n                               [--blob-endpoint]\n                               [--connection-string]\n                               [--sas-token]\n                               [--timeout]",
            "required_parameters": [
                "--container-name -c",
                "--legal-hold",
                "--name -n"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--sas-token",
                "--timeout"
            ],
            "examples": [
                "az storage blob set-legal-hold --legal-hold -c mycontainer -n myblob --account-name mystorageaccount --account-key 0000-0000",
                "az storage blob set-legal-hold --legal-hold false -c mycontainer -n myblob --account-name mystorageaccount --account-key 0000-0000"
            ]
        },
        {
            "name": "az storage blob set-tier",
            "summary": "Set the block or page tiers on the blob.",
            "syntax": "az storage blob set-tier --tier\n                         [--account-key]\n                         [--account-name]\n                         [--auth-mode {key, login}]\n                         [--blob-endpoint]\n                         [--blob-url]\n                         [--connection-string]\n                         [--container-name]\n                         [--name]\n                         [--rehydrate-priority {High, Standard}]\n                         [--sas-token]\n                         [--timeout]\n                         [--type {block, page}]",
            "required_parameters": [
                "--tier"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--name -n",
                "--rehydrate-priority -r",
                "--sas-token",
                "--timeout",
                "--type -t"
            ],
            "examples": [
                "az storage blob set-tier --account-key 00000000 --account-name MyAccount --container-name mycontainer --name MyBlob --tier P10"
            ]
        },
        {
            "name": "az storage blob set-tier",
            "summary": "Set the block or page tiers on the blob.",
            "syntax": "az storage blob set-tier --tier\n                         [--account-key]\n                         [--account-name]\n                         [--auth-mode {key, login}]\n                         [--blob-endpoint]\n                         [--blob-url]\n                         [--connection-string]\n                         [--container-name]\n                         [--name]\n                         [--rehydrate-priority {High, Standard}]\n                         [--sas-token]\n                         [--tags-condition]\n                         [--timeout]\n                         [--type {block, page}]\n                         [--version-id]",
            "required_parameters": [
                "--tier"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--name -n",
                "--rehydrate-priority -r",
                "--sas-token",
                "--tags-condition",
                "--timeout",
                "--type -t",
                "--version-id"
            ],
            "examples": [
                "az storage blob set-tier --account-key 00000000 --account-name MyAccount --container-name mycontainer --name MyBlob --tier P10"
            ]
        },
        {
            "name": "az storage blob show",
            "summary": "Get the details of a blob.",
            "syntax": "az storage blob show [--account-key]\n                     [--account-name]\n                     [--auth-mode {key, login}]\n                     [--blob-endpoint]\n                     [--blob-url]\n                     [--connection-string]\n                     [--container-name]\n                     [--if-match]\n                     [--if-modified-since]\n                     [--if-none-match]\n                     [--if-unmodified-since]\n                     [--lease-id]\n                     [--name]\n                     [--sas-token]\n                     [--snapshot]\n                     [--tags-condition]\n                     [--timeout]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--name -n",
                "--sas-token",
                "--snapshot",
                "--tags-condition",
                "--timeout"
            ],
            "examples": [
                "az storage blob show -c mycontainer -n MyBlob",
                "az storage blob show --account-name mystorageccount --account-key 00000000 --container-name mycontainer --name MyBlob"
            ]
        },
        {
            "name": "az storage blob show",
            "summary": "Get the details of a blob.",
            "syntax": "az storage blob show [--account-key]\n                     [--account-name]\n                     [--auth-mode {key, login}]\n                     [--blob-endpoint]\n                     [--blob-url]\n                     [--connection-string]\n                     [--container-name]\n                     [--if-match]\n                     [--if-modified-since]\n                     [--if-none-match]\n                     [--if-unmodified-since]\n                     [--lease-id]\n                     [--name]\n                     [--sas-token]\n                     [--snapshot]\n                     [--tags-condition]\n                     [--timeout]\n                     [--version-id]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--name -n",
                "--sas-token",
                "--snapshot",
                "--tags-condition",
                "--timeout",
                "--version-id"
            ],
            "examples": [
                "az storage blob show -c mycontainer -n MyBlob",
                "az storage blob show --account-name mystorageccount --account-key 00000000 --container-name mycontainer --name MyBlob"
            ]
        },
        {
            "name": "az storage blob snapshot",
            "summary": "Creates a snapshot of the blob.",
            "syntax": "az storage blob snapshot [--account-key]\n                         [--account-name]\n                         [--auth-mode {key, login}]\n                         [--blob-endpoint]\n                         [--blob-url]\n                         [--connection-string]\n                         [--container-name]\n                         [--if-match]\n                         [--if-modified-since]\n                         [--if-none-match]\n                         [--if-unmodified-since]\n                         [--lease-id]\n                         [--metadata]\n                         [--name]\n                         [--sas-token]\n                         [--tags-condition]\n                         [--timeout]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--metadata",
                "--name -n",
                "--sas-token",
                "--tags-condition",
                "--timeout"
            ],
            "examples": []
        },
        {
            "name": "az storage blob sync",
            "summary": "Sync blobs recursively to a storage blob container.",
            "syntax": "az storage blob sync --container\n                     --source\n                     [--account-key]\n                     [--account-name]\n                     [--auth-mode {key, login}]\n                     [--connection-string]\n                     [--delete-destination {false, prompt, true}]\n                     [--destination]\n                     [--exclude-path]\n                     [--exclude-pattern]\n                     [--include-pattern]\n                     [--sas-token]\n                     [<EXTRA_OPTIONS>]",
            "required_parameters": [
                "--container -c",
                "--source -s"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--connection-string",
                "--delete-destination",
                "--destination -d",
                "--exclude-path",
                "--exclude-pattern",
                "--include-pattern",
                "--sas-token",
                "<EXTRA_OPTIONS>"
            ],
            "examples": [
                "az storage blob sync -c mycontainer -s \"path/to/file\" -d NewBlob",
                "az storage blob sync -c mycontainer --account-name mystorageccount --account-key 00000000 -s \"path/to/directory\"",
                "az storage blob sync -c mycontainer --account-name mystorageccount --account-key 00000000 -s \"path/to/directory\" -- --cap-mbps=20"
            ]
        },
        {
            "name": "az storage blob undelete",
            "summary": "Restore soft deleted blob or snapshot.",
            "syntax": "az storage blob undelete [--account-key]\n                         [--account-name]\n                         [--auth-mode {key, login}]\n                         [--blob-endpoint]\n                         [--blob-url]\n                         [--connection-string]\n                         [--container-name]\n                         [--name]\n                         [--sas-token]\n                         [--timeout]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--name -n",
                "--sas-token",
                "--timeout"
            ],
            "examples": [
                "az storage blob undelete -c mycontainer -n MyBlob",
                "az storage blob undelete -c mycontainer -n MyBlob --account-name mystorageaccount --auth-mode login"
            ]
        },
        {
            "name": "az storage blob update",
            "summary": "Sets system properties on the blob.",
            "syntax": "az storage blob update --container-name\n                       --name\n                       [--account-key]\n                       [--account-name]\n                       [--auth-mode {key, login}]\n                       [--blob-endpoint]\n                       [--clear-content-settings {false, true}]\n                       [--connection-string]\n                       [--content-cache]\n                       [--content-disposition]\n                       [--content-encoding]\n                       [--content-language]\n                       [--content-md5]\n                       [--content-type]\n                       [--if-match]\n                       [--if-modified-since]\n                       [--if-none-match]\n                       [--if-unmodified-since]\n                       [--lease-id]\n                       [--sas-token]\n                       [--tags-condition]\n                       [--timeout]",
            "required_parameters": [
                "--container-name -c",
                "--name -n"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--clear-content-settings",
                "--connection-string",
                "--content-cache --content-cache-control",
                "--content-disposition",
                "--content-encoding",
                "--content-language",
                "--content-md5",
                "--content-type",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--sas-token",
                "--tags-condition",
                "--timeout"
            ],
            "examples": []
        },
        {
            "name": "az storage blob upload",
            "summary": "Upload a file to a storage blob.",
            "syntax": "az storage blob upload [--account-key]\n                       [--account-name]\n                       [--auth-mode {key, login}]\n                       [--blob-endpoint]\n                       [--blob-url]\n                       [--connection-string]\n                       [--container-name]\n                       [--content-cache]\n                       [--content-disposition]\n                       [--content-encoding]\n                       [--content-language]\n                       [--content-md5]\n                       [--content-type]\n                       [--data]\n                       [--encryption-scope]\n                       [--file]\n                       [--if-match]\n                       [--if-modified-since]\n                       [--if-none-match]\n                       [--if-unmodified-since]\n                       [--lease-id]\n                       [--length]\n                       [--max-connections]\n                       [--maxsize-condition]\n                       [--metadata]\n                       [--name]\n                       [--no-progress]\n                       [--overwrite {false, true}]\n                       [--sas-token]\n                       [--socket-timeout]\n                       [--tags]\n                       [--tags-condition]\n                       [--tier]\n                       [--timeout]\n                       [--type {append, block, page}]\n                       [--validate-content]",
            "required_parameters": [],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--blob-url",
                "--connection-string",
                "--container-name -c",
                "--content-cache --content-cache-control",
                "--content-disposition",
                "--content-encoding",
                "--content-language",
                "--content-md5",
                "--content-type",
                "--data",
                "--encryption-scope",
                "--file -f",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--length",
                "--max-connections",
                "--maxsize-condition",
                "--metadata",
                "--name -n",
                "--no-progress",
                "--overwrite",
                "--sas-token",
                "--socket-timeout",
                "--tags",
                "--tags-condition",
                "--tier",
                "--timeout",
                "--type -t",
                "--validate-content"
            ],
            "examples": [
                "az storage blob upload -f /path/to/file -c mycontainer -n MyBlob",
                "az storage blob upload -f /path/to/file --blob-url https://mystorageaccount.blob.core.windows.net/mycontainer/myblob?sv=2019-02-02&st=2020-12-22T07%3A07%3A29Z&se=2020-12-23T07%3A07%3A29Z&sr=b&sp=racw&sig=redacted",
                "az storage blob upload --account-name mystorageaccount --account-key 0000-0000 --container-name mycontainer --file /path/to/file --name myblob",
                "az storage blob upload --data \"teststring\" -c mycontainer -n myblob --account-name mystorageaccount --account-key 0000-0000",
                "echo $data | az storage blob upload --data @- -c mycontainer -n myblob --account-name mystorageaccount --account-key 0000-0000"
            ]
        },
        {
            "name": "az storage blob upload-batch",
            "summary": "Upload files from a local directory to a blob container.",
            "syntax": "az storage blob upload-batch --destination\n                             --source\n                             [--account-key]\n                             [--account-name]\n                             [--auth-mode {key, login}]\n                             [--blob-endpoint]\n                             [--connection-string]\n                             [--content-cache]\n                             [--content-disposition]\n                             [--content-encoding]\n                             [--content-language]\n                             [--content-md5]\n                             [--content-type]\n                             [--destination-path]\n                             [--dryrun]\n                             [--if-match]\n                             [--if-modified-since]\n                             [--if-none-match]\n                             [--if-unmodified-since]\n                             [--lease-id]\n                             [--max-connections]\n                             [--maxsize-condition]\n                             [--metadata]\n                             [--no-progress]\n                             [--overwrite {false, true}]\n                             [--pattern]\n                             [--sas-token]\n                             [--tags]\n                             [--tags-condition]\n                             [--tier]\n                             [--timeout]\n                             [--type {append, block, page}]\n                             [--validate-content]",
            "required_parameters": [
                "--destination -d",
                "--source -s"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--content-cache --content-cache-control",
                "--content-disposition",
                "--content-encoding",
                "--content-language",
                "--content-md5",
                "--content-type",
                "--destination-path",
                "--dryrun",
                "--if-match",
                "--if-modified-since",
                "--if-none-match",
                "--if-unmodified-since",
                "--lease-id",
                "--max-connections",
                "--maxsize-condition",
                "--metadata",
                "--no-progress",
                "--overwrite",
                "--pattern",
                "--sas-token",
                "--tags",
                "--tags-condition",
                "--tier",
                "--timeout",
                "--type -t",
                "--validate-content"
            ],
            "examples": [
                "az storage blob upload-batch -d mycontainer --account-name mystorageaccount --account-key 00000000 -s <path-to-directory> --pattern \"*.py\" --if-unmodified-since 2018-08-27T20:51Z",
                "az storage blob upload-batch -d mycontainer -s <path-to-directory>",
                "az storage blob upload-batch -d mycontainer -s <path-to-directory> --pattern \"cli-201[89]-??-??.txt\"",
                "az storage blob upload-batch -d mycontainer -s <path-to-directory> --pattern \"cli-201[!89]-??-??.txt\""
            ]
        },
        {
            "name": "az storage blob url",
            "summary": "Create the url to access a blob.",
            "syntax": "az storage blob url --container-name\n                    --name\n                    [--account-key]\n                    [--account-name]\n                    [--auth-mode {key, login}]\n                    [--blob-endpoint]\n                    [--connection-string]\n                    [--protocol {http, https}]\n                    [--sas-token]\n                    [--snapshot]",
            "required_parameters": [
                "--container-name -c",
                "--name -n"
            ],
            "optional_parameters": [
                "--account-key",
                "--account-name",
                "--auth-mode",
                "--blob-endpoint",
                "--connection-string",
                "--protocol",
                "--sas-token",
                "--snapshot"
            ],
            "examples": [
                "az storage blob url --connection-string $connectionString --container-name container1 --name blob1",
                "az storage blob url --account-name storageacct --account-key 00000000 --container-name container1 --name blob1"
            ]
        }
    ]
}