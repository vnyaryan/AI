{
    "command_group": "az postgres flexible-server",
    "description": "Manage Azure Database for PostgreSQL Flexible Servers.",
    "status": "GA",
    "commands": [
        {
            "name": "az postgres flexible-server connect",
            "summary": "Connect to a flexible server.",
            "syntax": "az postgres flexible-server connect --admin-user\n                                    --name\n                                    [--admin-password]\n                                    [--database-name]\n                                    [--interactive]\n                                    [--querytext]",
            "required_parameters": [
                "--admin-user -u",
                "--name -n"
            ],
            "optional_parameters": [
                "--admin-password -p",
                "--database-name -d",
                "--interactive",
                "--querytext -q"
            ],
            "examples": []
        },
        {
            "name": "az postgres flexible-server create",
            "summary": "Create a PostgreSQL flexible server.",
            "syntax": "az postgres flexible-server create [--active-directory-auth {Disabled, Enabled}]\n                                   [--address-prefixes]\n                                   [--admin-password]\n                                   [--admin-user]\n                                   [--backup-identity]\n                                   [--backup-key]\n                                   [--backup-retention]\n                                   [--cluster-option {ElasticCluster, Server}]\n                                   [--create-default-database {Disabled, Enabled}]\n                                   [--database-name]\n                                   [--geo-redundant-backup {Disabled, Enabled}]\n                                   [--high-availability {Disabled, SameZone, ZoneRedundant}]\n                                   [--identity]\n                                   [--iops]\n                                   [--key]\n                                   [--location]\n                                   [--name]\n                                   [--node-count]\n                                   [--password-auth {Disabled, Enabled}]\n                                   [--performance-tier]\n                                   [--private-dns-zone]\n                                   [--public-access]\n                                   [--resource-group]\n                                   [--sku-name]\n                                   [--standby-zone]\n                                   [--storage-auto-grow {Disabled, Enabled}]\n                                   [--storage-size]\n                                   [--storage-type {PremiumV2_LRS, Premium_LRS}]\n                                   [--subnet]\n                                   [--subnet-prefixes]\n                                   [--tags]\n                                   [--throughput]\n                                   [--tier]\n                                   [--version]\n                                   [--vnet]\n                                   [--yes]\n                                   [--zone]",
            "required_parameters": [],
            "optional_parameters": [
                "--active-directory-auth",
                "--address-prefixes",
                "--admin-password -p",
                "--admin-user -u",
                "--backup-identity",
                "--backup-key",
                "--backup-retention",
                "--cluster-option",
                "--create-default-database -c",
                "--database-name -d",
                "--geo-redundant-backup",
                "--high-availability",
                "--identity",
                "--iops",
                "--key",
                "--location -l",
                "--name -n",
                "--node-count",
                "--password-auth",
                "--performance-tier",
                "--private-dns-zone",
                "--public-access",
                "--resource-group -g",
                "--sku-name",
                "--standby-zone",
                "--storage-auto-grow",
                "--storage-size",
                "--storage-type",
                "--subnet",
                "--subnet-prefixes",
                "--tags",
                "--throughput",
                "--tier",
                "--version",
                "--vnet",
                "--yes -y",
                "--zone -z"
            ],
            "examples": [
                "az postgres flexible-server create --location northeurope --resource-group testGroup \\\n  --name testserver --admin-user username --admin-password password \\\n  --sku-name Standard_D2s_v3 --tier GeneralPurpose --public-access 153.24.26.117 --storage-size 128 \\\n  --tags \"key=value\" --version 17 --high-availability ZoneRedundant --zone 1 \\\n  --standby-zone 3",
                "# set storage type to \"PremiumV2_LRS\" and provide values for Storage size (in GiB), IOPS (operations/sec), and Throughput (MB/sec).\naz postgres flexible-server create --location northeurope --resource-group testGroup \\\n    --name testserver --admin-user username --admin-password password \\\n    --sku-name Standard_B1ms --tier Burstable --storage-type PremiumV2_LRS --storage-size 128 --iops 3000 --throughput 125",
                "az postgres flexible-server create",
                "az postgres flexible-server create --resource-group testGroup --name testserver --public-access 125.23.54.31-125.23.54.35",
                "az postgres flexible-server create --resource-group testGroup --name testserver --vnet myVnet --subnet mySubnet --address-prefixes 10.0.0.0/16 --subnet-prefixes 10.0.0.0/24",
                "az postgres flexible-server create \\\n  --resource-group testGroup --name testserver \\\n  --subnet /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Network/virtualNetworks/{VNetName}/subnets/{SubnetName} \\\n  --private-dns-zone /subscriptions/{SubID}/resourceGroups/{resourceGroup}/providers/Microsoft.Network/privateDnsZones/testPostgreSQLFlexibleDnsZone.private.postgres.database.azure.com \\\n  --address-prefixes 172.0.0.0/16 --subnet-prefixes 172.0.0.0/24",
                "# create vnet\naz network vnet create --resource-group testGroup --name testVnet --location testLocation --address-prefixes 172.0.0.0/16\n\n# create subnet\naz network vnet subnet create --resource-group testGroup --vnet-name testVnet --address-prefixes 172.0.0.0/24 --name testSubnet\n\n# create private dns zone\naz network private-dns zone create -g testGroup -n testDNS.private.postgres.database.azure.com\n\naz postgres flexible-server create --resource-group testGroup \\\n  --name testserver --location testLocation \\\n  --subnet /subscriptions/{SubId}/resourceGroups/{testGroup}/providers/Microsoft.Network/virtualNetworks/tesetVnet/subnets/testSubnet \\\n  --private-dns-zone /subscriptions/{SubId}/resourceGroups/{testGroup}/providers/Microsoft.Network/privateDnsZones/testDNS.postgres.database.azure.com\\\n\n\naz postgres flexible-server create --resource-group testGroup --name testserver \\\n  --vnet testVnet --subnet testSubnet --location testLocation \\\n  --private-dns-zone /subscriptions/{SubId}/resourceGroups/{testGroup}/providers/Microsoft.Network/privateDnsZones/testDNS.postgres.database.azure.com",
                "az postgres flexible-server create --resource-group testGroup \\\n   --name testserver --location testLocation \\\n  --subnet /subscriptions/{SubId2}/resourceGroups/{testGroup2}/providers/Microsoft.Network/virtualNetworks/tesetVnet/subnets/testSubnet \\\n  --private-dns-zone /subscriptions/{SubId2}/resourceGroups/{testGroup2}/providers/Microsoft.Network/privateDnsZones/testDNS.postgres.database.azure.com",
                "# create keyvault\naz keyvault create -g testGroup -n testVault --location testLocation \\\n  --enable-purge-protection true\n\n\n# create key in keyvault and save its key identifier\nkeyIdentifier=$(az keyvault key create --name testKey -p software \\\n  --vault-name testVault --query key.kid -o tsv)\n\n\n# create identity and save its principalId\nidentityPrincipalId=$(az identity create -g testGroup --name testIdentity \\\n  --location testLocation --query principalId -o tsv)\n\n\n# add testIdentity as an access policy with key permissions 'Wrap Key', 'Unwrap Key', 'Get' and 'List' inside testVault\naz keyvault set-policy -g testGroup -n testVault --object-id $identityPrincipalId \\\n  --key-permissions wrapKey unwrapKey get list\n\n\n# create flexible server with data encryption enabled\naz postgres flexible-server create -g testGroup -n testServer --location testLocation \\\n  --key $keyIdentifier --identity testIdentity",
                "# create flexible server with aad auth and password auth enabled\naz postgres flexible-server create -g testGroup -n testServer --location testLocation \\\n  --active-directory-auth Enabled",
                "# create flexible server with aad only auth and password auth disabled\naz postgres flexible-server create -g testGroup -n testServer --location testLocation \\\n  --active-directory-auth Enabled --password-auth Disabled",
                "az postgres flexible-server create --resource-group testGroup --name testserver --geo-redundant-backup Enabled --public-access 125.23.54.31-125.23.54.35",
                "# create keyvault\naz keyvault create -g testGroup -n testVault --location testLocation \\\n  --enable-purge-protection true\n\n\n# create key in keyvault and save its key identifier\nkeyIdentifier=$(az keyvault key create --name testKey -p software \\\n  --vault-name testVault --query key.kid -o tsv)\n\n\n# create identity and save its principalId\nidentityPrincipalId=$(az identity create -g testGroup --name testIdentity \\\n  --location testLocation --query principalId -o tsv)\n\n\n# add testIdentity as an access policy with key permissions 'Wrap Key', 'Unwrap Key', 'Get' and 'List' inside testVault\naz keyvault set-policy -g testGroup -n testVault --object-id $identityPrincipalId \\\n  --key-permissions wrapKey unwrapKey get list\n\n# create keyvault in geo-paired region\naz keyvault create -g testGroup -n geoVault --location geoPairedLocation \\\n  --enable-purge-protection true\n\n\n# create key in keyvault and save its key identifier\ngeoKeyIdentifier=$(az keyvault key create --name geoKey -p software \\\n  --vault-name geoVault --query key.kid -o tsv)\n\n\n# create identity in geo-raired location and save its principalId\ngeoIdentityPrincipalId=$(az identity create -g testGroup --name geoIdentity \\\n  --location geoPairedLocation --query principalId -o tsv)\n\n\n# add testIdentity as an access policy with key permissions 'Wrap Key', 'Unwrap Key', 'Get' and 'List' inside testVault\naz keyvault set-policy -g testGroup -n geoVault --object-id $geoIdentityPrincipalId \\\n  --key-permissions wrapKey unwrapKey get list\n\n\n# create flexible server with data encryption enabled for geo-backup Enabled server\naz postgres flexible-server create -g testGroup -n testServer --location testLocation --geo-redundant-backup Enabled \\\n  --key $keyIdentifier --identity testIdentity --backup-key $geoKeyIdentifier --backup-identity geoIdentity",
                "az postgres flexible-server create -g testGroup -n testServer --location testLocation --performance-tier P15",
                "az postgres flexible-server create -g testGroup -n testServer --location testLocation --storage-auto-grow Enabled",
                "az postgres flexible-server create -g testGroup -n testCluster --location testLocation --cluster-option ElasticCluster --node-count 5"
            ]
        },
        {
            "name": "az postgres flexible-server delete",
            "summary": "Delete a flexible server.",
            "syntax": "az postgres flexible-server delete [--ids]\n                                   [--name]\n                                   [--resource-group]\n                                   [--subscription]\n                                   [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az postgres flexible-server delete --resource-group testGroup --name testserver",
                "az postgres flexible-server delete --resource-group testGroup --name testserver --yes"
            ]
        },
        {
            "name": "az postgres flexible-server execute",
            "summary": "Connect to a flexible server.",
            "syntax": "az postgres flexible-server execute --admin-password\n                                    --admin-user\n                                    --name\n                                    [--database-name]\n                                    [--file-path]\n                                    [--querytext]",
            "required_parameters": [
                "--admin-password -p",
                "--admin-user -u",
                "--name -n"
            ],
            "optional_parameters": [
                "--database-name -d",
                "--file-path -f",
                "--querytext -q"
            ],
            "examples": []
        },
        {
            "name": "az postgres flexible-server geo-restore",
            "summary": "Geo-restore a flexible server from backup.",
            "syntax": "az postgres flexible-server geo-restore --location\n                                        --source-server\n                                        [--address-prefixes]\n                                        [--backup-identity]\n                                        [--backup-key]\n                                        [--geo-redundant-backup {Disabled, Enabled}]\n                                        [--identity]\n                                        [--ids]\n                                        [--key]\n                                        [--name]\n                                        [--no-wait]\n                                        [--private-dns-zone]\n                                        [--resource-group]\n                                        [--restore-time]\n                                        [--subnet]\n                                        [--subnet-prefixes]\n                                        [--subscription]\n                                        [--vnet]\n                                        [--yes]\n                                        [--zone]",
            "required_parameters": [
                "--location -l",
                "--source-server"
            ],
            "optional_parameters": [
                "--address-prefixes",
                "--backup-identity",
                "--backup-key",
                "--geo-redundant-backup",
                "--identity",
                "--ids",
                "--key",
                "--name -n",
                "--no-wait",
                "--private-dns-zone",
                "--resource-group -g",
                "--restore-time",
                "--subnet",
                "--subnet-prefixes",
                "--subscription",
                "--vnet",
                "--yes -y",
                "--zone -z"
            ],
            "examples": [
                "az postgres flexible-server geo-restore --resource-group testGroup --name testserverNew --source-server testserver --location newLocation",
                "az postgres flexible-server geo-restore --resource-group testGroup --name testserverNew \\\n  --source-server testserver --vnet newVnet --subnet newSubnet \\\n  --address-prefixes 172.0.0.0/16 --subnet-prefixes 172.0.0.0/24 \\\n  --private-dns-zone testDNS.postgres.database.azure.com --location newLocation",
                "az postgres flexible-server geo-restore --resource-group testGroup --name testserverNew --location newLocation \\\n  --source-server /subscriptions/{sourceSubscriptionId}/resourceGroups/{sourceResourceGroup}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{sourceServerName}"
            ]
        },
        {
            "name": "az postgres flexible-server list",
            "summary": "List available flexible servers.",
            "syntax": "az postgres flexible-server list [--resource-group]\n                                 [--show-cluster]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g",
                "--show-cluster"
            ],
            "examples": [
                "az postgres flexible-server list",
                "az postgres flexible-server list --resource-group testGroup",
                "az postgres flexible-server list --resource-group testGroup --output table"
            ]
        },
        {
            "name": "az postgres flexible-server list-skus",
            "summary": "Lists available sku's in the given region.",
            "syntax": "az postgres flexible-server list-skus --location",
            "required_parameters": [
                "--location -l"
            ],
            "optional_parameters": [],
            "examples": []
        },
        {
            "name": "az postgres flexible-server restart",
            "summary": "Restart a flexible server.",
            "syntax": "az postgres flexible-server restart [--failover]\n                                    [--ids]\n                                    [--name]\n                                    [--resource-group]\n                                    [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--failover",
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az postgres flexible-server restart --resource-group testGroup --name testserver",
                "az postgres flexible-server restart --resource-group testGroup --name testserver --failover Planned",
                "az postgres flexible-server restart --resource-group testGroup --name testserver --failover Forced"
            ]
        },
        {
            "name": "az postgres flexible-server restore",
            "summary": "Restore a flexible server from backup.",
            "syntax": "az postgres flexible-server restore --source-server\n                                    [--address-prefixes]\n                                    [--backup-identity]\n                                    [--backup-key]\n                                    [--geo-redundant-backup {Disabled, Enabled}]\n                                    [--identity]\n                                    [--ids]\n                                    [--key]\n                                    [--name]\n                                    [--no-wait]\n                                    [--private-dns-zone]\n                                    [--resource-group]\n                                    [--restore-time]\n                                    [--storage-type {PremiumV2_LRS}]\n                                    [--subnet]\n                                    [--subnet-prefixes]\n                                    [--subscription]\n                                    [--vnet]\n                                    [--yes]\n                                    [--zone]",
            "required_parameters": [
                "--source-server"
            ],
            "optional_parameters": [
                "--address-prefixes",
                "--backup-identity",
                "--backup-key",
                "--geo-redundant-backup",
                "--identity",
                "--ids",
                "--key",
                "--name -n",
                "--no-wait",
                "--private-dns-zone",
                "--resource-group -g",
                "--restore-time",
                "--storage-type",
                "--subnet",
                "--subnet-prefixes",
                "--subscription",
                "--vnet",
                "--yes -y",
                "--zone -z"
            ],
            "examples": [
                "az postgres flexible-server restore --resource-group testGroup --name testserverNew --source-server testserver --restore-time \"2017-06-15T13:10:00Z\"",
                "az postgres flexible-server restore --resource-group testGroup --name testserverNew --source-server testserver",
                "az postgres flexible-server restore --resource-group testGroup --name testserverNew \\\n  --source-server /subscriptions/{testSubscription}/resourceGroups/{sourceResourceGroup}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{sourceServerName}",
                "az postgres flexible-server restore --resource-group testGroup --name testserverNew \\\n  --source-server /subscriptions/{sourceSubscriptionId}/resourceGroups/{sourceResourceGroup}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{sourceServerName}",
                "az postgres flexible-server restore --resource-group testGroup --name testserverNew --source-server testserver --storage-type PremiumV2_LRS"
            ]
        },
        {
            "name": "az postgres flexible-server revive-dropped",
            "summary": "Revive a dropped flexible server from backup.",
            "syntax": "az postgres flexible-server revive-dropped --location\n                                           --source-server\n                                           [--address-prefixes]\n                                           [--backup-identity]\n                                           [--backup-key]\n                                           [--geo-redundant-backup {Disabled, Enabled}]\n                                           [--identity]\n                                           [--ids]\n                                           [--key]\n                                           [--name]\n                                           [--no-wait]\n                                           [--private-dns-zone]\n                                           [--resource-group]\n                                           [--subnet]\n                                           [--subnet-prefixes]\n                                           [--subscription]\n                                           [--vnet]\n                                           [--yes]\n                                           [--zone]",
            "required_parameters": [
                "--location -l",
                "--source-server"
            ],
            "optional_parameters": [
                "--address-prefixes",
                "--backup-identity",
                "--backup-key",
                "--geo-redundant-backup",
                "--identity",
                "--ids",
                "--key",
                "--name -n",
                "--no-wait",
                "--private-dns-zone",
                "--resource-group -g",
                "--subnet",
                "--subnet-prefixes",
                "--subscription",
                "--vnet",
                "--yes -y",
                "--zone -z"
            ],
            "examples": [
                "az postgres flexible-server revive-dropped --resource-group testGroup --name testserverNew --source-server /subscriptions/{SubId}/resourceGroups/{testGroup}/providers/Microsoft.DBforPostgreSQL/flexibleServers/testserver --location newLocation",
                "az postgres flexible-server revive-dropped -l testLocation --resource-group testGroup --name testserverNew \\\n  --source-server testserver --key newKeyIdentifier --identity newIdentity"
            ]
        },
        {
            "name": "az postgres flexible-server show",
            "summary": "Get the details of a flexible server.",
            "syntax": "az postgres flexible-server show [--ids]\n                                 [--name]\n                                 [--resource-group]\n                                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az postgres flexible-server show --resource-group testGroup --name testserver"
            ]
        },
        {
            "name": "az postgres flexible-server show-connection-string",
            "summary": "Show the connection strings for a PostgreSQL flexible-server database.",
            "syntax": "az postgres flexible-server show-connection-string [--admin-password]\n                                                   [--admin-user]\n                                                   [--database-name]\n                                                   [--ids]\n                                                   [--pg-bouncer]\n                                                   [--server-name]\n                                                   [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--admin-password -p",
                "--admin-user -u",
                "--database-name -d",
                "--ids",
                "--pg-bouncer",
                "--server-name -s",
                "--subscription"
            ],
            "examples": [
                "az postgres flexible-server show-connection-string -s testserver -u username -p password -d databasename",
                "az postgres flexible-server show-connection-string -s testserver -u username -p password -d databasename --pg-bouncer"
            ]
        },
        {
            "name": "az postgres flexible-server start",
            "summary": "Start a flexible server.",
            "syntax": "az postgres flexible-server start [--ids]\n                                  [--name]\n                                  [--no-wait]\n                                  [--resource-group]\n                                  [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az postgres flexible-server start --resource-group testGroup --name testserver"
            ]
        },
        {
            "name": "az postgres flexible-server stop",
            "summary": "Stop a flexible server.",
            "syntax": "az postgres flexible-server stop [--ids]\n                                 [--name]\n                                 [--no-wait]\n                                 [--resource-group]\n                                 [--subscription]",
            "required_parameters": [],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--no-wait",
                "--resource-group -g",
                "--subscription"
            ],
            "examples": [
                "az postgres flexible-server stop --resource-group testGroup --name testserver"
            ]
        },
        {
            "name": "az postgres flexible-server update",
            "summary": "Update a flexible server.",
            "syntax": "az postgres flexible-server update [--active-directory-auth {Disabled, Enabled}]\n                                   [--add]\n                                   [--admin-password]\n                                   [--backup-identity]\n                                   [--backup-key]\n                                   [--backup-retention]\n                                   [--force-string]\n                                   [--high-availability {Disabled, SameZone, ZoneRedundant}]\n                                   [--identity]\n                                   [--ids]\n                                   [--iops]\n                                   [--key]\n                                   [--maintenance-window]\n                                   [--name]\n                                   [--node-count]\n                                   [--password-auth {Disabled, Enabled}]\n                                   [--performance-tier]\n                                   [--private-dns-zone]\n                                   [--public-access {Disabled, Enabled}]\n                                   [--remove]\n                                   [--resource-group]\n                                   [--set]\n                                   [--sku-name]\n                                   [--standby-zone]\n                                   [--storage-auto-grow {Disabled, Enabled}]\n                                   [--storage-size]\n                                   [--subscription]\n                                   [--tags]\n                                   [--throughput]\n                                   [--tier]\n                                   [--yes]",
            "required_parameters": [],
            "optional_parameters": [
                "--active-directory-auth",
                "--add",
                "--admin-password -p",
                "--backup-identity",
                "--backup-key",
                "--backup-retention",
                "--force-string",
                "--high-availability",
                "--identity",
                "--ids",
                "--iops",
                "--key",
                "--maintenance-window",
                "--name -n",
                "--node-count",
                "--password-auth",
                "--performance-tier",
                "--private-dns-zone",
                "--public-access",
                "--remove",
                "--resource-group -g",
                "--set",
                "--sku-name",
                "--standby-zone",
                "--storage-auto-grow",
                "--storage-size",
                "--subscription",
                "--tags",
                "--throughput",
                "--tier",
                "--yes -y"
            ],
            "examples": [
                "az postgres flexible-server update --sku-name Standard_D4s_v3",
                "az postgres flexible-server update --resource-group testGroup --name testserver --tags \"k1=v1\" \"k2=v2\"",
                "az postgres flexible-server update --resource-group testGroup --name testserver -p password123",
                "az postgres flexible-server update --resource-group testGroup --name testserver --active-directory-auth Enabled",
                "# get key identifier of the existing key\nnewKeyIdentifier=$(az keyvault key show --vault-name testVault --name testKey \\\n  --query key.kid -o tsv)\n\n\n# update server with new key/identity\naz postgres flexible-server update --resource-group testGroup --name testserver \\\n  --key $newKeyIdentifier --identity newIdentity",
                "az postgres flexible-server update --resource-group testGroup --name testserver --private-dns-zone testDNS2.postgres.database.azure.com",
                "az postgres flexible-server update --resource-group testGroup --name testserver --private-dns-zone /subscriptions/{SubId2}/resourceGroups/{testGroup2}/providers/Microsoft.Network/privateDnsZones/testDNS.postgres.database.azure.com",
                "az postgres flexible-server update --resource-group testGroup --name testserver --storage-auto-grow Enabled",
                "az postgres flexible-server update --resource-group testGroup --name testserver --performance-tier P15",
                "az postgres flexible-server update --resource-group testGroup --name testserver --iops 3000",
                "az postgres flexible-server update --resource-group testGroup --name testserver --throughput 125",
                "az postgres flexible-server update --resource-group testGroup --name testcluster --node-count 6"
            ]
        },
        {
            "name": "az postgres flexible-server upgrade",
            "summary": "Upgrade the major version of a flexible server.",
            "syntax": "az postgres flexible-server upgrade --version {12, 13, 14, 15, 16}\n                                    [--ids]\n                                    [--name]\n                                    [--resource-group]\n                                    [--subscription]\n                                    [--yes]",
            "required_parameters": [
                "--version -v"
            ],
            "optional_parameters": [
                "--ids",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--yes -y"
            ],
            "examples": [
                "az postgres flexible-server upgrade -g testgroup -n testsvr -v 16"
            ]
        },
        {
            "name": "az postgres flexible-server wait",
            "summary": "Wait for the flexible server to satisfy certain conditions.",
            "syntax": "az postgres flexible-server wait [--created]\n                                 [--custom]\n                                 [--deleted]\n                                 [--exists]\n                                 [--ids]\n                                 [--interval]\n                                 [--name]\n                                 [--resource-group]\n                                 [--subscription]\n                                 [--timeout]\n                                 [--updated]",
            "required_parameters": [],
            "optional_parameters": [
                "--created",
                "--custom",
                "--deleted",
                "--exists",
                "--ids",
                "--interval",
                "--name -n",
                "--resource-group -g",
                "--subscription",
                "--timeout",
                "--updated"
            ],
            "examples": []
        }
    ]
}