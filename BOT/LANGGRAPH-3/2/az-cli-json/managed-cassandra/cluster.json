{
    "command_group": "az managed-cassandra cluster",
    "description": "Azure Managed Cassandra Cluster.",
    "status": "GA",
    "commands": [
        {
            "name": "az managed-cassandra cluster create",
            "summary": "Create a Managed Cassandra Cluster.",
            "syntax": "az managed-cassandra cluster create --cluster-name\n                                    --delegated-management-subnet-id\n                                    --location\n                                    --resource-group\n                                    [--authentication-method {Cassandra, None}]\n                                    [--cassandra-version]\n                                    [--client-certificates]\n                                    [--cluster-name-override]\n                                    [--external-gossip-certificates]\n                                    [--external-seed-nodes]\n                                    [--hours-between-backups]\n                                    [--identity-type {None, SystemAssigned}]\n                                    [--initial-cassandra-admin-password]\n                                    [--no-wait]\n                                    [--repair-enabled {false, true}]\n                                    [--restore-from-backup-id]\n                                    [--tags]",
            "required_parameters": [
                "--cluster-name -c",
                "--delegated-management-subnet-id -s",
                "--location -l",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--authentication-method",
                "--cassandra-version",
                "--client-certificates",
                "--cluster-name-override",
                "--external-gossip-certificates -e",
                "--external-seed-nodes",
                "--hours-between-backups",
                "--identity-type",
                "--initial-cassandra-admin-password -i",
                "--no-wait",
                "--repair-enabled",
                "--restore-from-backup-id",
                "--tags"
            ],
            "examples": [
                "az managed-cassandra cluster create \\\n--resource-group MyResourceGroup \\\n--cluster-name MyCluster \\\n--location MyLocation \\\n--initial-cassandra-admin-password password \\\n--delegated-management-subnet-id /subscriptions/94d9b402-77b4-4049-b4c1-947bc6b7729b/resourceGroups/My-vnet/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/test-subnet"
            ]
        },
        {
            "name": "az managed-cassandra cluster create",
            "summary": "Create a Managed Cassandra Cluster.",
            "syntax": "az managed-cassandra cluster create --cluster-name\n                                    --delegated-management-subnet-id\n                                    --location\n                                    --resource-group\n                                    [--authentication-method {Cassandra, Ldap, None}]\n                                    [--cassandra-version]\n                                    [--client-certificates]\n                                    [--cluster-name-override]\n                                    [--cluster-type {NonProduction, Production}]\n                                    [--extensions]\n                                    [--external-gossip-certificates]\n                                    [--external-seed-nodes]\n                                    [--hours-between-backups]\n                                    [--identity-type {None, SystemAssigned}]\n                                    [--initial-cassandra-admin-password]\n                                    [--no-wait]\n                                    [--repair-enabled]\n                                    [--restore-from-backup-id]\n                                    [--tags]",
            "required_parameters": [
                "--cluster-name -c",
                "--delegated-management-subnet-id -s",
                "--location -l",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--authentication-method",
                "--cassandra-version",
                "--client-certificates",
                "--cluster-name-override",
                "--cluster-type",
                "--extensions",
                "--external-gossip-certificates -e",
                "--external-seed-nodes",
                "--hours-between-backups",
                "--identity-type",
                "--initial-cassandra-admin-password -i",
                "--no-wait",
                "--repair-enabled",
                "--restore-from-backup-id",
                "--tags"
            ],
            "examples": [
                "az managed-cassandra cluster create \\\n--resource-group MyResourceGroup \\\n--cluster-name MyCluster \\\n--location MyLocation \\\n--initial-cassandra-admin-password password \\\n--delegated-management-subnet-id /subscriptions/94d9b402-77b4-4049-b4c1-947bc6b7729b/resourceGroups/My-vnet/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/test-subnet"
            ]
        },
        {
            "name": "az managed-cassandra cluster deallocate",
            "summary": "Deallocate the Managed Cassandra Cluster and Associated Data Centers. Deallocation will deallocate the host virtual machine of this cluster, and reserved the data disk. This won't do anything on an already deallocated cluster. Use Start to restart the cluster.",
            "syntax": "az managed-cassandra cluster deallocate --cluster-name\n                                        --resource-group\n                                        [--no-wait]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": [
                "az managed-cassandra cluster deallocate --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster deallocate",
            "summary": "Deallocate the Managed Cassandra Cluster and Associated Data Centers. Deallocation will deallocate the host virtual machine of this cluster, and reserved the data disk. This won't do anything on an already deallocated cluster. Use Start to restart the cluster.",
            "syntax": "az managed-cassandra cluster deallocate --cluster-name\n                                        --resource-group\n                                        [--force]\n                                        [--no-wait]\n                                        [--yes]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--force -f",
                "--no-wait",
                "--yes -y"
            ],
            "examples": [
                "az managed-cassandra cluster deallocate --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster delete",
            "summary": "Deletes a Managed Cassandra Cluster.",
            "syntax": "az managed-cassandra cluster delete --cluster-name\n                                    --resource-group\n                                    [--no-wait]\n                                    [--yes]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait",
                "--yes -y"
            ],
            "examples": [
                "az managed-cassandra cluster delete --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster delete",
            "summary": "Deletes a Managed Cassandra Cluster.",
            "syntax": "az managed-cassandra cluster delete --cluster-name\n                                    --resource-group\n                                    [--no-wait]\n                                    [--yes]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait",
                "--yes -y"
            ],
            "examples": [
                "az managed-cassandra cluster delete --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster invoke-command",
            "summary": "Invoke a command like nodetool for cassandra maintenance.",
            "syntax": "az managed-cassandra cluster invoke-command --cluster-name\n                                            --command-name\n                                            --host\n                                            --resource-group\n                                            [--arguments]\n                                            [--cassandra-stop-start {false, true}]\n                                            [--no-wait]\n                                            [--readwrite {false, true}]",
            "required_parameters": [
                "--cluster-name -c",
                "--command-name",
                "--host",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--arguments",
                "--cassandra-stop-start",
                "--no-wait",
                "--readwrite"
            ],
            "examples": [
                "az managed-cassandra cluster invoke-command --resource-group MyResourceGroup --cluster-name MyCluster --host \"10.0.1.12\" --command-name \"nodetool\" --arguments arg1=\"value1\" arg2=\"value2\" arg3=\"value3\""
            ]
        },
        {
            "name": "az managed-cassandra cluster list",
            "summary": "List the Managed Cassandra Clusters in a ResourceGroup and Subscription. If the ResourceGroup is not specified all the clusters in this Subscription are returned.",
            "syntax": "az managed-cassandra cluster list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az managed-cassandra cluster list --resource-group MyResourceGroup",
                "az managed-cassandra cluster list"
            ]
        },
        {
            "name": "az managed-cassandra cluster list",
            "summary": "List the Managed Cassandra Clusters in a ResourceGroup and Subscription. If the ResourceGroup is not specified all the clusters in this Subscription are returned.",
            "syntax": "az managed-cassandra cluster list [--resource-group]",
            "required_parameters": [],
            "optional_parameters": [
                "--resource-group -g"
            ],
            "examples": [
                "az managed-cassandra cluster list --resource-group MyResourceGroup",
                "az managed-cassandra cluster list"
            ]
        },
        {
            "name": "az managed-cassandra cluster show",
            "summary": "Get a Managed Cassandra Cluster Resource.",
            "syntax": "az managed-cassandra cluster show --cluster-name\n                                  --resource-group",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": [
                "az managed-cassandra cluster show --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster show",
            "summary": "Get a Managed Cassandra Cluster Resource.",
            "syntax": "az managed-cassandra cluster show --cluster-name\n                                  --resource-group",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": [
                "az managed-cassandra cluster show --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster start",
            "summary": "Start the Managed Cassandra Cluster and Associated Data Centers. Start will start the host virtual machine of this cluster with reserved data disk. This won't do anything on an already running cluster. Use Deallocate to deallocate the cluster.",
            "syntax": "az managed-cassandra cluster start --cluster-name\n                                   --resource-group\n                                   [--no-wait]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--no-wait"
            ],
            "examples": [
                "az managed-cassandra cluster start --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster status",
            "summary": "Gets the CPU, memory, and disk usage statistics for each Cassandra node in a cluster.",
            "syntax": "az managed-cassandra cluster status --cluster-name\n                                    --resource-group",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [],
            "examples": [
                "az managed-cassandra cluster status --resource-group MyResourceGroup --cluster-name MyCluster"
            ]
        },
        {
            "name": "az managed-cassandra cluster update",
            "summary": "Update a Managed Cassandra Cluster.",
            "syntax": "az managed-cassandra cluster update --cluster-name\n                                    --resource-group\n                                    [--authentication-method {Cassandra, None}]\n                                    [--cassandra-version]\n                                    [--client-certificates]\n                                    [--external-gossip-certificates]\n                                    [--external-seed-nodes]\n                                    [--hours-between-backups]\n                                    [--identity-type {None, SystemAssigned}]\n                                    [--no-wait]\n                                    [--repair-enabled {false, true}]\n                                    [--tags]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--authentication-method",
                "--cassandra-version",
                "--client-certificates",
                "--external-gossip-certificates -e",
                "--external-seed-nodes",
                "--hours-between-backups",
                "--identity-type",
                "--no-wait",
                "--repair-enabled",
                "--tags"
            ],
            "examples": [
                "az managed-cassandra cluster update --resource-group MyResourceGroup --cluster-name MyCluster --external-seed-nodes 127.0.0.1 127.0.0.2",
                "az managed-cassandra cluster update --resource-group MyResourceGroup --cluster-name MyCluster --external-gossip-certificates C:/MyFolder/test.pem BeginCert-MLXCF-EndCert"
            ]
        },
        {
            "name": "az managed-cassandra cluster update",
            "summary": "Update a Managed Cassandra Cluster.",
            "syntax": "az managed-cassandra cluster update --cluster-name\n                                    --resource-group\n                                    [--authentication-method {Cassandra, Ldap, None}]\n                                    [--cassandra-version]\n                                    [--client-certificates]\n                                    [--cluster-type {NonProduction, Production}]\n                                    [--extensions]\n                                    [--external-gossip-certificates]\n                                    [--external-seed-nodes]\n                                    [--hours-between-backups]\n                                    [--identity-type {None, SystemAssigned}]\n                                    [--no-wait]\n                                    [--repair-enabled]\n                                    [--tags]",
            "required_parameters": [
                "--cluster-name -c",
                "--resource-group -g"
            ],
            "optional_parameters": [
                "--authentication-method",
                "--cassandra-version",
                "--client-certificates",
                "--cluster-type",
                "--extensions",
                "--external-gossip-certificates -e",
                "--external-seed-nodes",
                "--hours-between-backups",
                "--identity-type",
                "--no-wait",
                "--repair-enabled",
                "--tags"
            ],
            "examples": [
                "az managed-cassandra cluster update --resource-group MyResourceGroup --cluster-name MyCluster --external-seed-nodes 127.0.0.1 127.0.0.2",
                "az managed-cassandra cluster update --resource-group MyResourceGroup --cluster-name MyCluster --external-gossip-certificates C:/MyFolder/test.pem BeginCert-MLXCF-EndCert"
            ]
        }
    ]
}