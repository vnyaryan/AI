{
    "command_group": "az quantum",
    "description": "Manage Azure Quantum Workspaces and submit jobs to Azure Quantum Providers.",
    "status": "Preview",
    "commands": [
        {
            "name": "az quantum execute",
            "summary": "Submit a job to run on Azure Quantum, and wait for the result. Equivalent to `az quantum run`.",
            "syntax": "az quantum execute --job-input-file\n                   --job-input-format\n                   --location\n                   --resource-group\n                   --target-id\n                   --workspace-name\n                   [--entry-point]\n                   [--job-name]\n                   [--job-output-format]\n                   [--job-params]\n                   [--shots]\n                   [--storage]\n                   [--target-capability]",
            "required_parameters": [
                "--job-input-file",
                "--job-input-format",
                "--location -l",
                "--resource-group -g",
                "--target-id -t",
                "--workspace-name -w"
            ],
            "optional_parameters": [
                "--entry-point",
                "--job-name",
                "--job-output-format",
                "--job-params",
                "--shots",
                "--storage",
                "--target-capability"
            ],
            "examples": [
                "az quantum execute -g MyResourceGroup -w MyWorkspace -l MyLocation -t MyTarget \\\n    --job-name MyJob --job-input-format qir.v1 --job-input-file MyQirBitcode.bc \\\n    --entry-point MyQirEntryPoint",
                "az quantum execute -g MyResourceGroup -w MyWorkspace -l MyLocation \\\n   -t rigetti.sim.qvm --job-name MyJob --job-input-file MyProgram.quil \\\n   --job-input-format rigetti.quil.v1 --job-output-format rigetti.quil-results.v1",
                "az quantum execute -g MyResourceGroup -w MyWorkspace -l MyLocation \\\n   -t ionq.simulator --job-name MyJobName --job-input-file MyCircuit.json \\\n   --job-input-format ionq.circuit.v1 --job-output-format ionq.quantum-results.v1 \\\n   --job-params count=100 content-type=application/json"
            ]
        },
        {
            "name": "az quantum run",
            "summary": "Submit a job to run on Azure Quantum, and wait for the result. Equivalent to `az quantum execute`.",
            "syntax": "az quantum run --job-input-file\n               --job-input-format\n               --location\n               --resource-group\n               --target-id\n               --workspace-name\n               [--entry-point]\n               [--job-name]\n               [--job-output-format]\n               [--job-params]\n               [--shots]\n               [--storage]\n               [--target-capability]",
            "required_parameters": [
                "--job-input-file",
                "--job-input-format",
                "--location -l",
                "--resource-group -g",
                "--target-id -t",
                "--workspace-name -w"
            ],
            "optional_parameters": [
                "--entry-point",
                "--job-name",
                "--job-output-format",
                "--job-params",
                "--shots",
                "--storage",
                "--target-capability"
            ],
            "examples": [
                "az quantum run -g MyResourceGroup -w MyWorkspace -l MyLocation -t MyTarget \\\n    --job-name MyJob --job-input-format qir.v1 --job-input-file MyQirBitcode.bc \\\n    --entry-point MyQirEntryPoint",
                "az quantum run -g MyResourceGroup -w MyWorkspace -l MyLocation \\\n   -t rigetti.sim.qvm --job-name MyJob --job-input-file MyProgram.quil \\\n   --job-input-format rigetti.quil.v1 --job-output-format rigetti.quil-results.v1",
                "az quantum run -g MyResourceGroup -w MyWorkspace -l MyLocation \\\n   -t ionq.simulator --job-name MyJobName --job-input-file MyCircuit.json \\\n   --job-input-format ionq.circuit.v1 --job-output-format ionq.quantum-results.v1 \\\n   --job-params count=100 content-type=application/json"
            ]
        }
    ]
}